//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Quantify.API {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DsQuantify")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DsQuantify : global::System.Data.DataSet {
        
        private ProductDataTable tableProduct;
        
        private StockingLocationDataTable tableStockingLocation;
        
        private JobList1DataTable tableJobList1;
        
        private JobList2DataTable tableJobList2;
        
        private ManufacturerDataTable tableManufacturer;
        
        private StockedProductExtensionDataTable tableStockedProductExtension;
        
        private StockingLocationRentalPeriodAdjustmentDataTable tableStockingLocationRentalPeriodAdjustment;
        
        private StockingLocationStatusDataTable tableStockingLocationStatus;
        
        private StockedProductDataTable tableStockedProduct;
        
        private global::System.Data.DataRelation relationFK_StockingLocation_JobList1ID_ListID;
        
        private global::System.Data.DataRelation relationFK_StockingLocation_JobList2ID_List2D;
        
        private global::System.Data.DataRelation relationFK_Product_ManufacturerID;
        
        private global::System.Data.DataRelation relationFK_StockedProductExtension_BaseProductID;
        
        private global::System.Data.DataRelation relationFK_StockedProductExtension_JobSiteID;
        
        private global::System.Data.DataRelation relationFK_StockedProductExtension_StockingLocationID;
        
        private global::System.Data.DataRelation relationFK_StockingLocationRentalPeriodAdjustment__StockingLocationID;
        
        private global::System.Data.DataRelation relationfk_StockingLocationStatus_rid;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DsQuantify() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DsQuantify(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Product"] != null)) {
                    base.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                if ((ds.Tables["StockingLocation"] != null)) {
                    base.Tables.Add(new StockingLocationDataTable(ds.Tables["StockingLocation"]));
                }
                if ((ds.Tables["JobList1"] != null)) {
                    base.Tables.Add(new JobList1DataTable(ds.Tables["JobList1"]));
                }
                if ((ds.Tables["JobList2"] != null)) {
                    base.Tables.Add(new JobList2DataTable(ds.Tables["JobList2"]));
                }
                if ((ds.Tables["Manufacturer"] != null)) {
                    base.Tables.Add(new ManufacturerDataTable(ds.Tables["Manufacturer"]));
                }
                if ((ds.Tables["StockedProductExtension"] != null)) {
                    base.Tables.Add(new StockedProductExtensionDataTable(ds.Tables["StockedProductExtension"]));
                }
                if ((ds.Tables["StockingLocationRentalPeriodAdjustment"] != null)) {
                    base.Tables.Add(new StockingLocationRentalPeriodAdjustmentDataTable(ds.Tables["StockingLocationRentalPeriodAdjustment"]));
                }
                if ((ds.Tables["StockingLocationStatus"] != null)) {
                    base.Tables.Add(new StockingLocationStatusDataTable(ds.Tables["StockingLocationStatus"]));
                }
                if ((ds.Tables["StockedProduct"] != null)) {
                    base.Tables.Add(new StockedProductDataTable(ds.Tables["StockedProduct"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductDataTable Product {
            get {
                return this.tableProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockingLocationDataTable StockingLocation {
            get {
                return this.tableStockingLocation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JobList1DataTable JobList1 {
            get {
                return this.tableJobList1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JobList2DataTable JobList2 {
            get {
                return this.tableJobList2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ManufacturerDataTable Manufacturer {
            get {
                return this.tableManufacturer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockedProductExtensionDataTable StockedProductExtension {
            get {
                return this.tableStockedProductExtension;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockingLocationRentalPeriodAdjustmentDataTable StockingLocationRentalPeriodAdjustment {
            get {
                return this.tableStockingLocationRentalPeriodAdjustment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockingLocationStatusDataTable StockingLocationStatus {
            get {
                return this.tableStockingLocationStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockedProductDataTable StockedProduct {
            get {
                return this.tableStockedProduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DsQuantify cln = ((DsQuantify)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Product"] != null)) {
                    base.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                if ((ds.Tables["StockingLocation"] != null)) {
                    base.Tables.Add(new StockingLocationDataTable(ds.Tables["StockingLocation"]));
                }
                if ((ds.Tables["JobList1"] != null)) {
                    base.Tables.Add(new JobList1DataTable(ds.Tables["JobList1"]));
                }
                if ((ds.Tables["JobList2"] != null)) {
                    base.Tables.Add(new JobList2DataTable(ds.Tables["JobList2"]));
                }
                if ((ds.Tables["Manufacturer"] != null)) {
                    base.Tables.Add(new ManufacturerDataTable(ds.Tables["Manufacturer"]));
                }
                if ((ds.Tables["StockedProductExtension"] != null)) {
                    base.Tables.Add(new StockedProductExtensionDataTable(ds.Tables["StockedProductExtension"]));
                }
                if ((ds.Tables["StockingLocationRentalPeriodAdjustment"] != null)) {
                    base.Tables.Add(new StockingLocationRentalPeriodAdjustmentDataTable(ds.Tables["StockingLocationRentalPeriodAdjustment"]));
                }
                if ((ds.Tables["StockingLocationStatus"] != null)) {
                    base.Tables.Add(new StockingLocationStatusDataTable(ds.Tables["StockingLocationStatus"]));
                }
                if ((ds.Tables["StockedProduct"] != null)) {
                    base.Tables.Add(new StockedProductDataTable(ds.Tables["StockedProduct"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableProduct = ((ProductDataTable)(base.Tables["Product"]));
            if ((initTable == true)) {
                if ((this.tableProduct != null)) {
                    this.tableProduct.InitVars();
                }
            }
            this.tableStockingLocation = ((StockingLocationDataTable)(base.Tables["StockingLocation"]));
            if ((initTable == true)) {
                if ((this.tableStockingLocation != null)) {
                    this.tableStockingLocation.InitVars();
                }
            }
            this.tableJobList1 = ((JobList1DataTable)(base.Tables["JobList1"]));
            if ((initTable == true)) {
                if ((this.tableJobList1 != null)) {
                    this.tableJobList1.InitVars();
                }
            }
            this.tableJobList2 = ((JobList2DataTable)(base.Tables["JobList2"]));
            if ((initTable == true)) {
                if ((this.tableJobList2 != null)) {
                    this.tableJobList2.InitVars();
                }
            }
            this.tableManufacturer = ((ManufacturerDataTable)(base.Tables["Manufacturer"]));
            if ((initTable == true)) {
                if ((this.tableManufacturer != null)) {
                    this.tableManufacturer.InitVars();
                }
            }
            this.tableStockedProductExtension = ((StockedProductExtensionDataTable)(base.Tables["StockedProductExtension"]));
            if ((initTable == true)) {
                if ((this.tableStockedProductExtension != null)) {
                    this.tableStockedProductExtension.InitVars();
                }
            }
            this.tableStockingLocationRentalPeriodAdjustment = ((StockingLocationRentalPeriodAdjustmentDataTable)(base.Tables["StockingLocationRentalPeriodAdjustment"]));
            if ((initTable == true)) {
                if ((this.tableStockingLocationRentalPeriodAdjustment != null)) {
                    this.tableStockingLocationRentalPeriodAdjustment.InitVars();
                }
            }
            this.tableStockingLocationStatus = ((StockingLocationStatusDataTable)(base.Tables["StockingLocationStatus"]));
            if ((initTable == true)) {
                if ((this.tableStockingLocationStatus != null)) {
                    this.tableStockingLocationStatus.InitVars();
                }
            }
            this.tableStockedProduct = ((StockedProductDataTable)(base.Tables["StockedProduct"]));
            if ((initTable == true)) {
                if ((this.tableStockedProduct != null)) {
                    this.tableStockedProduct.InitVars();
                }
            }
            this.relationFK_StockingLocation_JobList1ID_ListID = this.Relations["FK_StockingLocation_JobList1ID_ListID"];
            this.relationFK_StockingLocation_JobList2ID_List2D = this.Relations["FK_StockingLocation_JobList2ID_List2D"];
            this.relationFK_Product_ManufacturerID = this.Relations["FK_Product_ManufacturerID"];
            this.relationFK_StockedProductExtension_BaseProductID = this.Relations["FK_StockedProductExtension_BaseProductID"];
            this.relationFK_StockedProductExtension_JobSiteID = this.Relations["FK_StockedProductExtension_JobSiteID"];
            this.relationFK_StockedProductExtension_StockingLocationID = this.Relations["FK_StockedProductExtension_StockingLocationID"];
            this.relationFK_StockingLocationRentalPeriodAdjustment__StockingLocationID = this.Relations["FK_StockingLocationRentalPeriodAdjustment__StockingLocationID"];
            this.relationfk_StockingLocationStatus_rid = this.Relations["fk_StockingLocationStatus_rid"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DsQuantify";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsQuantify.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProduct = new ProductDataTable();
            base.Tables.Add(this.tableProduct);
            this.tableStockingLocation = new StockingLocationDataTable();
            base.Tables.Add(this.tableStockingLocation);
            this.tableJobList1 = new JobList1DataTable();
            base.Tables.Add(this.tableJobList1);
            this.tableJobList2 = new JobList2DataTable();
            base.Tables.Add(this.tableJobList2);
            this.tableManufacturer = new ManufacturerDataTable();
            base.Tables.Add(this.tableManufacturer);
            this.tableStockedProductExtension = new StockedProductExtensionDataTable();
            base.Tables.Add(this.tableStockedProductExtension);
            this.tableStockingLocationRentalPeriodAdjustment = new StockingLocationRentalPeriodAdjustmentDataTable();
            base.Tables.Add(this.tableStockingLocationRentalPeriodAdjustment);
            this.tableStockingLocationStatus = new StockingLocationStatusDataTable();
            base.Tables.Add(this.tableStockingLocationStatus);
            this.tableStockedProduct = new StockedProductDataTable();
            base.Tables.Add(this.tableStockedProduct);
            this.relationFK_StockingLocation_JobList1ID_ListID = new global::System.Data.DataRelation("FK_StockingLocation_JobList1ID_ListID", new global::System.Data.DataColumn[] {
                        this.tableJobList1.JobList1IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStockingLocation.JobList1IDColumn}, false);
            this.Relations.Add(this.relationFK_StockingLocation_JobList1ID_ListID);
            this.relationFK_StockingLocation_JobList2ID_List2D = new global::System.Data.DataRelation("FK_StockingLocation_JobList2ID_List2D", new global::System.Data.DataColumn[] {
                        this.tableJobList2.JobList2IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStockingLocation.JobList2IDColumn}, false);
            this.Relations.Add(this.relationFK_StockingLocation_JobList2ID_List2D);
            this.relationFK_Product_ManufacturerID = new global::System.Data.DataRelation("FK_Product_ManufacturerID", new global::System.Data.DataColumn[] {
                        this.tableManufacturer.ManufacturerIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableProduct.ManufacturerIDColumn}, false);
            this.Relations.Add(this.relationFK_Product_ManufacturerID);
            this.relationFK_StockedProductExtension_BaseProductID = new global::System.Data.DataRelation("FK_StockedProductExtension_BaseProductID", new global::System.Data.DataColumn[] {
                        this.tableProduct.ProductIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStockedProductExtension.BaseProductIDColumn}, false);
            this.Relations.Add(this.relationFK_StockedProductExtension_BaseProductID);
            this.relationFK_StockedProductExtension_JobSiteID = new global::System.Data.DataRelation("FK_StockedProductExtension_JobSiteID", new global::System.Data.DataColumn[] {
                        this.tableStockingLocation.StockingLocationIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStockedProductExtension.JobsiteIDColumn}, false);
            this.Relations.Add(this.relationFK_StockedProductExtension_JobSiteID);
            this.relationFK_StockedProductExtension_StockingLocationID = new global::System.Data.DataRelation("FK_StockedProductExtension_StockingLocationID", new global::System.Data.DataColumn[] {
                        this.tableStockingLocation.StockingLocationIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStockedProductExtension.StockingLocationIDColumn}, false);
            this.Relations.Add(this.relationFK_StockedProductExtension_StockingLocationID);
            this.relationFK_StockingLocationRentalPeriodAdjustment__StockingLocationID = new global::System.Data.DataRelation("FK_StockingLocationRentalPeriodAdjustment__StockingLocationID", new global::System.Data.DataColumn[] {
                        this.tableStockingLocation.StockingLocationIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStockingLocationRentalPeriodAdjustment.StockingLocationIDColumn}, false);
            this.Relations.Add(this.relationFK_StockingLocationRentalPeriodAdjustment__StockingLocationID);
            this.relationfk_StockingLocationStatus_rid = new global::System.Data.DataRelation("fk_StockingLocationStatus_rid", new global::System.Data.DataColumn[] {
                        this.tableStockingLocation.StockingLocationIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStockingLocationStatus.RelatedIDColumn}, false);
            this.Relations.Add(this.relationfk_StockingLocationStatus_rid);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStockingLocation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeJobList1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeJobList2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeManufacturer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStockedProductExtension() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStockingLocationRentalPeriodAdjustment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStockingLocationStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStockedProduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DsQuantify ds = new DsQuantify();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProductRowChangeEventHandler(object sender, ProductRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StockingLocationRowChangeEventHandler(object sender, StockingLocationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void JobList1RowChangeEventHandler(object sender, JobList1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void JobList2RowChangeEventHandler(object sender, JobList2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ManufacturerRowChangeEventHandler(object sender, ManufacturerRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StockedProductExtensionRowChangeEventHandler(object sender, StockedProductExtensionRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StockingLocationRentalPeriodAdjustmentRowChangeEventHandler(object sender, StockingLocationRentalPeriodAdjustmentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StockingLocationStatusRowChangeEventHandler(object sender, StockingLocationStatusRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StockedProductRowChangeEventHandler(object sender, StockedProductRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductDataTable : global::System.Data.TypedTableBase<ProductRow> {
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnPartNumber;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnModelNumber;
            
            private global::System.Data.DataColumn columnUPCCode;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnLength;
            
            private global::System.Data.DataColumn columnWidth;
            
            private global::System.Data.DataColumn columnHeight;
            
            private global::System.Data.DataColumn columnUtilizationGoal;
            
            private global::System.Data.DataColumn columnProductType;
            
            private global::System.Data.DataColumn columnDefaultList;
            
            private global::System.Data.DataColumn columnDefaultRentCalculatorID;
            
            private global::System.Data.DataColumn columnDefaultSellCalculatorID;
            
            private global::System.Data.DataColumn columnDefaultRentRate;
            
            private global::System.Data.DataColumn columnDefaultMinimumDayOverride;
            
            private global::System.Data.DataColumn columnDefaultSell;
            
            private global::System.Data.DataColumn columnDefaultReplacementCost;
            
            private global::System.Data.DataColumn columnManufacturerID;
            
            private global::System.Data.DataColumn columnManufacturerNumber;
            
            private global::System.Data.DataColumn columnDefaultFactorID;
            
            private global::System.Data.DataColumn columnProductCategoryID;
            
            private global::System.Data.DataColumn columnUomID;
            
            private global::System.Data.DataColumn columnDefaultAverageCost;
            
            private global::System.Data.DataColumn columnDefaultCost;
            
            private global::System.Data.DataColumn columnDefaultLastCost;
            
            private global::System.Data.DataColumn columnDefaultStandardCost;
            
            private global::System.Data.DataColumn columnDefaultROP;
            
            private global::System.Data.DataColumn columnDefaultROQ;
            
            private global::System.Data.DataColumn columnCustom1;
            
            private global::System.Data.DataColumn columnCustom2;
            
            private global::System.Data.DataColumn columnCustom3;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnDefaultInspection;
            
            private global::System.Data.DataColumn columnRowVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductDataTable() {
                this.TableName = "Product";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PartNumberColumn {
                get {
                    return this.columnPartNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModelNumberColumn {
                get {
                    return this.columnModelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UPCCodeColumn {
                get {
                    return this.columnUPCCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LengthColumn {
                get {
                    return this.columnLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WidthColumn {
                get {
                    return this.columnWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeightColumn {
                get {
                    return this.columnHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UtilizationGoalColumn {
                get {
                    return this.columnUtilizationGoal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductTypeColumn {
                get {
                    return this.columnProductType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultListColumn {
                get {
                    return this.columnDefaultList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultRentCalculatorIDColumn {
                get {
                    return this.columnDefaultRentCalculatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultSellCalculatorIDColumn {
                get {
                    return this.columnDefaultSellCalculatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultRentRateColumn {
                get {
                    return this.columnDefaultRentRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultMinimumDayOverrideColumn {
                get {
                    return this.columnDefaultMinimumDayOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultSellColumn {
                get {
                    return this.columnDefaultSell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultReplacementCostColumn {
                get {
                    return this.columnDefaultReplacementCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManufacturerIDColumn {
                get {
                    return this.columnManufacturerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManufacturerNumberColumn {
                get {
                    return this.columnManufacturerNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultFactorIDColumn {
                get {
                    return this.columnDefaultFactorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductCategoryIDColumn {
                get {
                    return this.columnProductCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UomIDColumn {
                get {
                    return this.columnUomID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultAverageCostColumn {
                get {
                    return this.columnDefaultAverageCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultCostColumn {
                get {
                    return this.columnDefaultCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultLastCostColumn {
                get {
                    return this.columnDefaultLastCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultStandardCostColumn {
                get {
                    return this.columnDefaultStandardCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultROPColumn {
                get {
                    return this.columnDefaultROP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultROQColumn {
                get {
                    return this.columnDefaultROQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Custom1Column {
                get {
                    return this.columnCustom1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Custom2Column {
                get {
                    return this.columnCustom2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Custom3Column {
                get {
                    return this.columnCustom3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultInspectionColumn {
                get {
                    return this.columnDefaultInspection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow this[int index] {
                get {
                    return ((ProductRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductRowChangeEventHandler ProductRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductRowChangeEventHandler ProductRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductRowChangeEventHandler ProductRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProductRowChangeEventHandler ProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProductRow(ProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow AddProductRow(
                        System.Guid ProductID, 
                        string PartNumber, 
                        string Description, 
                        string ModelNumber, 
                        string UPCCode, 
                        double Weight, 
                        double Length, 
                        double Width, 
                        double Height, 
                        double UtilizationGoal, 
                        short ProductType, 
                        decimal DefaultList, 
                        System.Guid DefaultRentCalculatorID, 
                        System.Guid DefaultSellCalculatorID, 
                        decimal DefaultRentRate, 
                        short DefaultMinimumDayOverride, 
                        decimal DefaultSell, 
                        decimal DefaultReplacementCost, 
                        ManufacturerRow parentManufacturerRowByFK_Product_ManufacturerID, 
                        string ManufacturerNumber, 
                        System.Guid DefaultFactorID, 
                        System.Guid ProductCategoryID, 
                        System.Guid UomID, 
                        decimal DefaultAverageCost, 
                        decimal DefaultCost, 
                        decimal DefaultLastCost, 
                        decimal DefaultStandardCost, 
                        double DefaultROP, 
                        double DefaultROQ, 
                        string Custom1, 
                        string Custom2, 
                        string Custom3, 
                        string Comment, 
                        bool DefaultInspection, 
                        byte[] RowVersion) {
                ProductRow rowProductRow = ((ProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProductID,
                        PartNumber,
                        Description,
                        ModelNumber,
                        UPCCode,
                        Weight,
                        Length,
                        Width,
                        Height,
                        UtilizationGoal,
                        ProductType,
                        DefaultList,
                        DefaultRentCalculatorID,
                        DefaultSellCalculatorID,
                        DefaultRentRate,
                        DefaultMinimumDayOverride,
                        DefaultSell,
                        DefaultReplacementCost,
                        null,
                        ManufacturerNumber,
                        DefaultFactorID,
                        ProductCategoryID,
                        UomID,
                        DefaultAverageCost,
                        DefaultCost,
                        DefaultLastCost,
                        DefaultStandardCost,
                        DefaultROP,
                        DefaultROQ,
                        Custom1,
                        Custom2,
                        Custom3,
                        Comment,
                        DefaultInspection,
                        RowVersion};
                if ((parentManufacturerRowByFK_Product_ManufacturerID != null)) {
                    columnValuesArray[18] = parentManufacturerRowByFK_Product_ManufacturerID[0];
                }
                rowProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductRow);
                return rowProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow FindByProductID(System.Guid ProductID) {
                return ((ProductRow)(this.Rows.Find(new object[] {
                            ProductID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProductDataTable cln = ((ProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnProductID = base.Columns["ProductID"];
                this.columnPartNumber = base.Columns["PartNumber"];
                this.columnDescription = base.Columns["Description"];
                this.columnModelNumber = base.Columns["ModelNumber"];
                this.columnUPCCode = base.Columns["UPCCode"];
                this.columnWeight = base.Columns["Weight"];
                this.columnLength = base.Columns["Length"];
                this.columnWidth = base.Columns["Width"];
                this.columnHeight = base.Columns["Height"];
                this.columnUtilizationGoal = base.Columns["UtilizationGoal"];
                this.columnProductType = base.Columns["ProductType"];
                this.columnDefaultList = base.Columns["DefaultList"];
                this.columnDefaultRentCalculatorID = base.Columns["DefaultRentCalculatorID"];
                this.columnDefaultSellCalculatorID = base.Columns["DefaultSellCalculatorID"];
                this.columnDefaultRentRate = base.Columns["DefaultRentRate"];
                this.columnDefaultMinimumDayOverride = base.Columns["DefaultMinimumDayOverride"];
                this.columnDefaultSell = base.Columns["DefaultSell"];
                this.columnDefaultReplacementCost = base.Columns["DefaultReplacementCost"];
                this.columnManufacturerID = base.Columns["ManufacturerID"];
                this.columnManufacturerNumber = base.Columns["ManufacturerNumber"];
                this.columnDefaultFactorID = base.Columns["DefaultFactorID"];
                this.columnProductCategoryID = base.Columns["ProductCategoryID"];
                this.columnUomID = base.Columns["UomID"];
                this.columnDefaultAverageCost = base.Columns["DefaultAverageCost"];
                this.columnDefaultCost = base.Columns["DefaultCost"];
                this.columnDefaultLastCost = base.Columns["DefaultLastCost"];
                this.columnDefaultStandardCost = base.Columns["DefaultStandardCost"];
                this.columnDefaultROP = base.Columns["DefaultROP"];
                this.columnDefaultROQ = base.Columns["DefaultROQ"];
                this.columnCustom1 = base.Columns["Custom1"];
                this.columnCustom2 = base.Columns["Custom2"];
                this.columnCustom3 = base.Columns["Custom3"];
                this.columnComment = base.Columns["Comment"];
                this.columnDefaultInspection = base.Columns["DefaultInspection"];
                this.columnRowVersion = base.Columns["RowVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnPartNumber = new global::System.Data.DataColumn("PartNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartNumber);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnModelNumber = new global::System.Data.DataColumn("ModelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelNumber);
                this.columnUPCCode = new global::System.Data.DataColumn("UPCCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPCCode);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnLength = new global::System.Data.DataColumn("Length", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLength);
                this.columnWidth = new global::System.Data.DataColumn("Width", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWidth);
                this.columnHeight = new global::System.Data.DataColumn("Height", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeight);
                this.columnUtilizationGoal = new global::System.Data.DataColumn("UtilizationGoal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilizationGoal);
                this.columnProductType = new global::System.Data.DataColumn("ProductType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductType);
                this.columnDefaultList = new global::System.Data.DataColumn("DefaultList", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultList);
                this.columnDefaultRentCalculatorID = new global::System.Data.DataColumn("DefaultRentCalculatorID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultRentCalculatorID);
                this.columnDefaultSellCalculatorID = new global::System.Data.DataColumn("DefaultSellCalculatorID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultSellCalculatorID);
                this.columnDefaultRentRate = new global::System.Data.DataColumn("DefaultRentRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultRentRate);
                this.columnDefaultMinimumDayOverride = new global::System.Data.DataColumn("DefaultMinimumDayOverride", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultMinimumDayOverride);
                this.columnDefaultSell = new global::System.Data.DataColumn("DefaultSell", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultSell);
                this.columnDefaultReplacementCost = new global::System.Data.DataColumn("DefaultReplacementCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultReplacementCost);
                this.columnManufacturerID = new global::System.Data.DataColumn("ManufacturerID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturerID);
                this.columnManufacturerNumber = new global::System.Data.DataColumn("ManufacturerNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturerNumber);
                this.columnDefaultFactorID = new global::System.Data.DataColumn("DefaultFactorID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultFactorID);
                this.columnProductCategoryID = new global::System.Data.DataColumn("ProductCategoryID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCategoryID);
                this.columnUomID = new global::System.Data.DataColumn("UomID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUomID);
                this.columnDefaultAverageCost = new global::System.Data.DataColumn("DefaultAverageCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultAverageCost);
                this.columnDefaultCost = new global::System.Data.DataColumn("DefaultCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultCost);
                this.columnDefaultLastCost = new global::System.Data.DataColumn("DefaultLastCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultLastCost);
                this.columnDefaultStandardCost = new global::System.Data.DataColumn("DefaultStandardCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultStandardCost);
                this.columnDefaultROP = new global::System.Data.DataColumn("DefaultROP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultROP);
                this.columnDefaultROQ = new global::System.Data.DataColumn("DefaultROQ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultROQ);
                this.columnCustom1 = new global::System.Data.DataColumn("Custom1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustom1);
                this.columnCustom2 = new global::System.Data.DataColumn("Custom2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustom2);
                this.columnCustom3 = new global::System.Data.DataColumn("Custom3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustom3);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDefaultInspection = new global::System.Data.DataColumn("DefaultInspection", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultInspection);
                this.columnRowVersion = new global::System.Data.DataColumn("RowVersion", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProductID}, true));
                this.columnProductID.AllowDBNull = false;
                this.columnProductID.Unique = true;
                this.columnPartNumber.MaxLength = 50;
                this.columnDescription.MaxLength = 250;
                this.columnModelNumber.MaxLength = 50;
                this.columnUPCCode.MaxLength = 20;
                this.columnProductType.AllowDBNull = false;
                this.columnManufacturerNumber.MaxLength = 50;
                this.columnCustom1.MaxLength = 50;
                this.columnCustom2.MaxLength = 50;
                this.columnCustom3.MaxLength = 50;
                this.columnComment.MaxLength = 255;
                this.columnDefaultInspection.AllowDBNull = false;
                this.columnRowVersion.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow NewProductRow() {
                return ((ProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductRowChanged != null)) {
                    this.ProductRowChanged(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductRowChanging != null)) {
                    this.ProductRowChanging(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductRowDeleted != null)) {
                    this.ProductRowDeleted(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductRowDeleting != null)) {
                    this.ProductRowDeleting(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProductRow(ProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsQuantify ds = new DsQuantify();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockingLocationDataTable : global::System.Data.TypedTableBase<StockingLocationRow> {
            
            private global::System.Data.DataColumn columnStockingLocationID;
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnReceiveTransferCount;
            
            private global::System.Data.DataColumn columnReceiveReturnCount;
            
            private global::System.Data.DataColumn columnReceiveDeliveryCount;
            
            private global::System.Data.DataColumn columnRequireRequestProducts;
            
            private global::System.Data.DataColumn columnTrackRequests;
            
            private global::System.Data.DataColumn columnCreateNewFromShortage;
            
            private global::System.Data.DataColumn columnHideQuantities;
            
            private global::System.Data.DataColumn columnUtilizationGoal;
            
            private global::System.Data.DataColumn columnList1Label;
            
            private global::System.Data.DataColumn columnList2Label;
            
            private global::System.Data.DataColumn columnList3Label;
            
            private global::System.Data.DataColumn columnShowList1;
            
            private global::System.Data.DataColumn columnShowList2;
            
            private global::System.Data.DataColumn columnShowList3;
            
            private global::System.Data.DataColumn columnIsBillable;
            
            private global::System.Data.DataColumn columnIsToolCrib;
            
            private global::System.Data.DataColumn columnTrackScaffoldTags;
            
            private global::System.Data.DataColumn columnDefaultShipmentToBillable;
            
            private global::System.Data.DataColumn columnIncludeInProductHistory;
            
            private global::System.Data.DataColumn columnHistoryRateProfileID;
            
            private global::System.Data.DataColumn columnInvoiceOption;
            
            private global::System.Data.DataColumn columnDefaultRateProfileID;
            
            private global::System.Data.DataColumn columnBillingMethod;
            
            private global::System.Data.DataColumn columnBillingUserID;
            
            private global::System.Data.DataColumn columnArrearsBillingCycle;
            
            private global::System.Data.DataColumn columnCycleDaysArrears;
            
            private global::System.Data.DataColumn columnMinimumDaysFata;
            
            private global::System.Data.DataColumn columnCycleDaysAdvanced;
            
            private global::System.Data.DataColumn columnMinimumDaysAdvanced;
            
            private global::System.Data.DataColumn columnOrderID;
            
            private global::System.Data.DataColumn columnIncludeUnitPricesOnMinimum;
            
            private global::System.Data.DataColumn columnConsumablesEnabled;
            
            private global::System.Data.DataColumn columnMonthlyBillingCycle;
            
            private global::System.Data.DataColumn columnDayOfMonth;
            
            private global::System.Data.DataColumn columnFirstInvoiceDate;
            
            private global::System.Data.DataColumn columnAwcFirstInvoiceDate;
            
            private global::System.Data.DataColumn columnAdvanceIsCycled;
            
            private global::System.Data.DataColumn columnCycleBeginDate;
            
            private global::System.Data.DataColumn columnCycleEndDate;
            
            private global::System.Data.DataColumn columnCycleEndDateOverride;
            
            private global::System.Data.DataColumn columnHideZeroInvoiceItems;
            
            private global::System.Data.DataColumn columnGracePeriod;
            
            private global::System.Data.DataColumn columnAwcIssueEarlyReturnCredits;
            
            private global::System.Data.DataColumn columnAllowMinimumDayOverride;
            
            private global::System.Data.DataColumn columnRentIsTaxable;
            
            private global::System.Data.DataColumn columnConsumablesTaxable;
            
            private global::System.Data.DataColumn columnDeliveryChargesTaxable;
            
            private global::System.Data.DataColumn columnContractBillingTaxable;
            
            private global::System.Data.DataColumn columnServiceTicketDamageChargeTaxable;
            
            private global::System.Data.DataColumn columnJobTax1ID;
            
            private global::System.Data.DataColumn columnJobTax2ID;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnStopDate;
            
            private global::System.Data.DataColumn columnLastDateForRent;
            
            private global::System.Data.DataColumn columnJobDate1;
            
            private global::System.Data.DataColumn columnJobDate2;
            
            private global::System.Data.DataColumn columnJobEmployee1ID;
            
            private global::System.Data.DataColumn columnJobEmployee2ID;
            
            private global::System.Data.DataColumn columnJobEmployee3ID;
            
            private global::System.Data.DataColumn columnJobCustomerContact1ID;
            
            private global::System.Data.DataColumn columnJobCustomerContact2ID;
            
            private global::System.Data.DataColumn columnJobText1;
            
            private global::System.Data.DataColumn columnJobText2;
            
            private global::System.Data.DataColumn columnJobYesNo1;
            
            private global::System.Data.DataColumn columnJobYesNo2;
            
            private global::System.Data.DataColumn columnJobList1ID;
            
            private global::System.Data.DataColumn columnJobList2ID;
            
            private global::System.Data.DataColumn columnReceiveRequireInspection;
            
            private global::System.Data.DataColumn columnReceiveOutOfService;
            
            private global::System.Data.DataColumn columnRentalDiscount;
            
            private global::System.Data.DataColumn columnRentalDiscountType;
            
            private global::System.Data.DataColumn columnMarkupUnitPriceID;
            
            private global::System.Data.DataColumn columnAllowKioskDamaged;
            
            private global::System.Data.DataColumn columnAllowKioskDamagedBeyondRepair;
            
            private global::System.Data.DataColumn columnAllowKioskLostMissing;
            
            private global::System.Data.DataColumn columnInvoiceNotes;
            
            private global::System.Data.DataColumn columnScaffoldTagList1Label;
            
            private global::System.Data.DataColumn columnScaffoldTagList2Label;
            
            private global::System.Data.DataColumn columnScaffoldTagList3Label;
            
            private global::System.Data.DataColumn columnScaffoldTagList4Label;
            
            private global::System.Data.DataColumn columnScaffoldTagList5Label;
            
            private global::System.Data.DataColumn columnScaffoldTagList6Label;
            
            private global::System.Data.DataColumn columnScaffoldTagList7Label;
            
            private global::System.Data.DataColumn columnUseScaffoldTagList1;
            
            private global::System.Data.DataColumn columnUseScaffoldTagList2;
            
            private global::System.Data.DataColumn columnUseScaffoldTagList3;
            
            private global::System.Data.DataColumn columnUseScaffoldTagList4;
            
            private global::System.Data.DataColumn columnUseScaffoldTagList5;
            
            private global::System.Data.DataColumn columnUseScaffoldTagList6;
            
            private global::System.Data.DataColumn columnUseScaffoldTagList7;
            
            private global::System.Data.DataColumn columnScaffoldTagList1Required;
            
            private global::System.Data.DataColumn columnScaffoldTagList2Required;
            
            private global::System.Data.DataColumn columnScaffoldTagList3Required;
            
            private global::System.Data.DataColumn columnScaffoldTagList4Required;
            
            private global::System.Data.DataColumn columnScaffoldTagList5Required;
            
            private global::System.Data.DataColumn columnScaffoldTagList6Required;
            
            private global::System.Data.DataColumn columnScaffoldTagList7Required;
            
            private global::System.Data.DataColumn columnUseScaffoldTagDate1;
            
            private global::System.Data.DataColumn columnScaffoldTagDate1Label;
            
            private global::System.Data.DataColumn columnScaffoldTagDate1Required;
            
            private global::System.Data.DataColumn columnUseScaffoldTagDate2;
            
            private global::System.Data.DataColumn columnScaffoldTagDate2Label;
            
            private global::System.Data.DataColumn columnScaffoldTagDate2Required;
            
            private global::System.Data.DataColumn columnUseScaffoldTagText1;
            
            private global::System.Data.DataColumn columnScaffoldTagText1Label;
            
            private global::System.Data.DataColumn columnScaffoldTagText1Required;
            
            private global::System.Data.DataColumn columnUseScaffoldTagText2;
            
            private global::System.Data.DataColumn columnScaffoldTagText2Label;
            
            private global::System.Data.DataColumn columnScaffoldTagText2Required;
            
            private global::System.Data.DataColumn columnUseScaffoldTagText3;
            
            private global::System.Data.DataColumn columnScaffoldTagText3Label;
            
            private global::System.Data.DataColumn columnScaffoldTagText3Required;
            
            private global::System.Data.DataColumn columnUseScaffoldTagYesNo1;
            
            private global::System.Data.DataColumn columnScaffoldTagYesNo1Label;
            
            private global::System.Data.DataColumn columnUseScaffoldTagYesNo2;
            
            private global::System.Data.DataColumn columnScaffoldTagYesNo2Label;
            
            private global::System.Data.DataColumn columnScaffoldTagActivityList1Label;
            
            private global::System.Data.DataColumn columnScaffoldTagActivityList2Label;
            
            private global::System.Data.DataColumn columnScaffoldTagActivityList3Label;
            
            private global::System.Data.DataColumn columnScaffoldTagActivityText1Label;
            
            private global::System.Data.DataColumn columnUseScaffoldTagActivityList1;
            
            private global::System.Data.DataColumn columnUseScaffoldTagActivityList2;
            
            private global::System.Data.DataColumn columnUseScaffoldTagActivityList3;
            
            private global::System.Data.DataColumn columnUseScaffoldTagActivityText1;
            
            private global::System.Data.DataColumn columnScaffoldTagActivityList1Required;
            
            private global::System.Data.DataColumn columnScaffoldTagActivityList2Required;
            
            private global::System.Data.DataColumn columnScaffoldTagActivityList3Required;
            
            private global::System.Data.DataColumn columnScaffoldTagActivityText1Required;
            
            private global::System.Data.DataColumn columnTrackScaffoldTagInspections;
            
            private global::System.Data.DataColumn columnInspectionFrequency;
            
            private global::System.Data.DataColumn columnUseInspectionShifts;
            
            private global::System.Data.DataColumn columnUseScaffoldTagActivities;
            
            private global::System.Data.DataColumn columnEnforceOffRent;
            
            private global::System.Data.DataColumn columnScaffoldStopRentRequired;
            
            private global::System.Data.DataColumn columnIsRentStopped;
            
            private global::System.Data.DataColumn columnLastInvoiced;
            
            private global::System.Data.DataColumn columnTrackContracts;
            
            private global::System.Data.DataColumn columnVersionStamp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationDataTable() {
                this.TableName = "StockingLocation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StockingLocationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StockingLocationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockingLocationIDColumn {
                get {
                    return this.columnStockingLocationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiveTransferCountColumn {
                get {
                    return this.columnReceiveTransferCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiveReturnCountColumn {
                get {
                    return this.columnReceiveReturnCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiveDeliveryCountColumn {
                get {
                    return this.columnReceiveDeliveryCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequireRequestProductsColumn {
                get {
                    return this.columnRequireRequestProducts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackRequestsColumn {
                get {
                    return this.columnTrackRequests;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateNewFromShortageColumn {
                get {
                    return this.columnCreateNewFromShortage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HideQuantitiesColumn {
                get {
                    return this.columnHideQuantities;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UtilizationGoalColumn {
                get {
                    return this.columnUtilizationGoal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn List1LabelColumn {
                get {
                    return this.columnList1Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn List2LabelColumn {
                get {
                    return this.columnList2Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn List3LabelColumn {
                get {
                    return this.columnList3Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShowList1Column {
                get {
                    return this.columnShowList1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShowList2Column {
                get {
                    return this.columnShowList2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShowList3Column {
                get {
                    return this.columnShowList3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsBillableColumn {
                get {
                    return this.columnIsBillable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsToolCribColumn {
                get {
                    return this.columnIsToolCrib;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackScaffoldTagsColumn {
                get {
                    return this.columnTrackScaffoldTags;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultShipmentToBillableColumn {
                get {
                    return this.columnDefaultShipmentToBillable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IncludeInProductHistoryColumn {
                get {
                    return this.columnIncludeInProductHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HistoryRateProfileIDColumn {
                get {
                    return this.columnHistoryRateProfileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceOptionColumn {
                get {
                    return this.columnInvoiceOption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultRateProfileIDColumn {
                get {
                    return this.columnDefaultRateProfileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BillingMethodColumn {
                get {
                    return this.columnBillingMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BillingUserIDColumn {
                get {
                    return this.columnBillingUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArrearsBillingCycleColumn {
                get {
                    return this.columnArrearsBillingCycle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDaysArrearsColumn {
                get {
                    return this.columnCycleDaysArrears;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinimumDaysFataColumn {
                get {
                    return this.columnMinimumDaysFata;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleDaysAdvancedColumn {
                get {
                    return this.columnCycleDaysAdvanced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinimumDaysAdvancedColumn {
                get {
                    return this.columnMinimumDaysAdvanced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderIDColumn {
                get {
                    return this.columnOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IncludeUnitPricesOnMinimumColumn {
                get {
                    return this.columnIncludeUnitPricesOnMinimum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsumablesEnabledColumn {
                get {
                    return this.columnConsumablesEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MonthlyBillingCycleColumn {
                get {
                    return this.columnMonthlyBillingCycle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DayOfMonthColumn {
                get {
                    return this.columnDayOfMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirstInvoiceDateColumn {
                get {
                    return this.columnFirstInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AwcFirstInvoiceDateColumn {
                get {
                    return this.columnAwcFirstInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdvanceIsCycledColumn {
                get {
                    return this.columnAdvanceIsCycled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleBeginDateColumn {
                get {
                    return this.columnCycleBeginDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleEndDateColumn {
                get {
                    return this.columnCycleEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CycleEndDateOverrideColumn {
                get {
                    return this.columnCycleEndDateOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HideZeroInvoiceItemsColumn {
                get {
                    return this.columnHideZeroInvoiceItems;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GracePeriodColumn {
                get {
                    return this.columnGracePeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AwcIssueEarlyReturnCreditsColumn {
                get {
                    return this.columnAwcIssueEarlyReturnCredits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllowMinimumDayOverrideColumn {
                get {
                    return this.columnAllowMinimumDayOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RentIsTaxableColumn {
                get {
                    return this.columnRentIsTaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsumablesTaxableColumn {
                get {
                    return this.columnConsumablesTaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryChargesTaxableColumn {
                get {
                    return this.columnDeliveryChargesTaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractBillingTaxableColumn {
                get {
                    return this.columnContractBillingTaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceTicketDamageChargeTaxableColumn {
                get {
                    return this.columnServiceTicketDamageChargeTaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobTax1IDColumn {
                get {
                    return this.columnJobTax1ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobTax2IDColumn {
                get {
                    return this.columnJobTax2ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StopDateColumn {
                get {
                    return this.columnStopDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastDateForRentColumn {
                get {
                    return this.columnLastDateForRent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobDate1Column {
                get {
                    return this.columnJobDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobDate2Column {
                get {
                    return this.columnJobDate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobEmployee1IDColumn {
                get {
                    return this.columnJobEmployee1ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobEmployee2IDColumn {
                get {
                    return this.columnJobEmployee2ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobEmployee3IDColumn {
                get {
                    return this.columnJobEmployee3ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobCustomerContact1IDColumn {
                get {
                    return this.columnJobCustomerContact1ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobCustomerContact2IDColumn {
                get {
                    return this.columnJobCustomerContact2ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobText1Column {
                get {
                    return this.columnJobText1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobText2Column {
                get {
                    return this.columnJobText2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobYesNo1Column {
                get {
                    return this.columnJobYesNo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobYesNo2Column {
                get {
                    return this.columnJobYesNo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobList1IDColumn {
                get {
                    return this.columnJobList1ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobList2IDColumn {
                get {
                    return this.columnJobList2ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiveRequireInspectionColumn {
                get {
                    return this.columnReceiveRequireInspection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiveOutOfServiceColumn {
                get {
                    return this.columnReceiveOutOfService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RentalDiscountColumn {
                get {
                    return this.columnRentalDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RentalDiscountTypeColumn {
                get {
                    return this.columnRentalDiscountType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkupUnitPriceIDColumn {
                get {
                    return this.columnMarkupUnitPriceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllowKioskDamagedColumn {
                get {
                    return this.columnAllowKioskDamaged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllowKioskDamagedBeyondRepairColumn {
                get {
                    return this.columnAllowKioskDamagedBeyondRepair;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllowKioskLostMissingColumn {
                get {
                    return this.columnAllowKioskLostMissing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceNotesColumn {
                get {
                    return this.columnInvoiceNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList1LabelColumn {
                get {
                    return this.columnScaffoldTagList1Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList2LabelColumn {
                get {
                    return this.columnScaffoldTagList2Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList3LabelColumn {
                get {
                    return this.columnScaffoldTagList3Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList4LabelColumn {
                get {
                    return this.columnScaffoldTagList4Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList5LabelColumn {
                get {
                    return this.columnScaffoldTagList5Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList6LabelColumn {
                get {
                    return this.columnScaffoldTagList6Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList7LabelColumn {
                get {
                    return this.columnScaffoldTagList7Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagList1Column {
                get {
                    return this.columnUseScaffoldTagList1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagList2Column {
                get {
                    return this.columnUseScaffoldTagList2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagList3Column {
                get {
                    return this.columnUseScaffoldTagList3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagList4Column {
                get {
                    return this.columnUseScaffoldTagList4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagList5Column {
                get {
                    return this.columnUseScaffoldTagList5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagList6Column {
                get {
                    return this.columnUseScaffoldTagList6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagList7Column {
                get {
                    return this.columnUseScaffoldTagList7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList1RequiredColumn {
                get {
                    return this.columnScaffoldTagList1Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList2RequiredColumn {
                get {
                    return this.columnScaffoldTagList2Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList3RequiredColumn {
                get {
                    return this.columnScaffoldTagList3Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList4RequiredColumn {
                get {
                    return this.columnScaffoldTagList4Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList5RequiredColumn {
                get {
                    return this.columnScaffoldTagList5Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList6RequiredColumn {
                get {
                    return this.columnScaffoldTagList6Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagList7RequiredColumn {
                get {
                    return this.columnScaffoldTagList7Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagDate1Column {
                get {
                    return this.columnUseScaffoldTagDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagDate1LabelColumn {
                get {
                    return this.columnScaffoldTagDate1Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagDate1RequiredColumn {
                get {
                    return this.columnScaffoldTagDate1Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagDate2Column {
                get {
                    return this.columnUseScaffoldTagDate2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagDate2LabelColumn {
                get {
                    return this.columnScaffoldTagDate2Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagDate2RequiredColumn {
                get {
                    return this.columnScaffoldTagDate2Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagText1Column {
                get {
                    return this.columnUseScaffoldTagText1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagText1LabelColumn {
                get {
                    return this.columnScaffoldTagText1Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagText1RequiredColumn {
                get {
                    return this.columnScaffoldTagText1Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagText2Column {
                get {
                    return this.columnUseScaffoldTagText2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagText2LabelColumn {
                get {
                    return this.columnScaffoldTagText2Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagText2RequiredColumn {
                get {
                    return this.columnScaffoldTagText2Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagText3Column {
                get {
                    return this.columnUseScaffoldTagText3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagText3LabelColumn {
                get {
                    return this.columnScaffoldTagText3Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagText3RequiredColumn {
                get {
                    return this.columnScaffoldTagText3Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagYesNo1Column {
                get {
                    return this.columnUseScaffoldTagYesNo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagYesNo1LabelColumn {
                get {
                    return this.columnScaffoldTagYesNo1Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagYesNo2Column {
                get {
                    return this.columnUseScaffoldTagYesNo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagYesNo2LabelColumn {
                get {
                    return this.columnScaffoldTagYesNo2Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagActivityList1LabelColumn {
                get {
                    return this.columnScaffoldTagActivityList1Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagActivityList2LabelColumn {
                get {
                    return this.columnScaffoldTagActivityList2Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagActivityList3LabelColumn {
                get {
                    return this.columnScaffoldTagActivityList3Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagActivityText1LabelColumn {
                get {
                    return this.columnScaffoldTagActivityText1Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagActivityList1Column {
                get {
                    return this.columnUseScaffoldTagActivityList1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagActivityList2Column {
                get {
                    return this.columnUseScaffoldTagActivityList2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagActivityList3Column {
                get {
                    return this.columnUseScaffoldTagActivityList3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagActivityText1Column {
                get {
                    return this.columnUseScaffoldTagActivityText1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagActivityList1RequiredColumn {
                get {
                    return this.columnScaffoldTagActivityList1Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagActivityList2RequiredColumn {
                get {
                    return this.columnScaffoldTagActivityList2Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagActivityList3RequiredColumn {
                get {
                    return this.columnScaffoldTagActivityList3Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldTagActivityText1RequiredColumn {
                get {
                    return this.columnScaffoldTagActivityText1Required;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackScaffoldTagInspectionsColumn {
                get {
                    return this.columnTrackScaffoldTagInspections;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InspectionFrequencyColumn {
                get {
                    return this.columnInspectionFrequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseInspectionShiftsColumn {
                get {
                    return this.columnUseInspectionShifts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseScaffoldTagActivitiesColumn {
                get {
                    return this.columnUseScaffoldTagActivities;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnforceOffRentColumn {
                get {
                    return this.columnEnforceOffRent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ScaffoldStopRentRequiredColumn {
                get {
                    return this.columnScaffoldStopRentRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsRentStoppedColumn {
                get {
                    return this.columnIsRentStopped;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastInvoicedColumn {
                get {
                    return this.columnLastInvoiced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackContractsColumn {
                get {
                    return this.columnTrackContracts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionStampColumn {
                get {
                    return this.columnVersionStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRow this[int index] {
                get {
                    return ((StockingLocationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockingLocationRowChangeEventHandler StockingLocationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockingLocationRowChangeEventHandler StockingLocationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockingLocationRowChangeEventHandler StockingLocationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockingLocationRowChangeEventHandler StockingLocationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStockingLocationRow(StockingLocationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRow AddStockingLocationRow(
                        System.Guid StockingLocationID, 
                        string Number, 
                        bool ReceiveTransferCount, 
                        bool ReceiveReturnCount, 
                        bool ReceiveDeliveryCount, 
                        bool RequireRequestProducts, 
                        bool TrackRequests, 
                        bool CreateNewFromShortage, 
                        bool HideQuantities, 
                        double UtilizationGoal, 
                        string List1Label, 
                        string List2Label, 
                        string List3Label, 
                        bool ShowList1, 
                        bool ShowList2, 
                        bool ShowList3, 
                        bool IsBillable, 
                        bool IsToolCrib, 
                        bool TrackScaffoldTags, 
                        bool DefaultShipmentToBillable, 
                        bool IncludeInProductHistory, 
                        System.Guid HistoryRateProfileID, 
                        short InvoiceOption, 
                        System.Guid DefaultRateProfileID, 
                        short BillingMethod, 
                        System.Guid BillingUserID, 
                        short ArrearsBillingCycle, 
                        short CycleDaysArrears, 
                        short MinimumDaysFata, 
                        short CycleDaysAdvanced, 
                        short MinimumDaysAdvanced, 
                        System.Guid OrderID, 
                        bool IncludeUnitPricesOnMinimum, 
                        bool ConsumablesEnabled, 
                        short MonthlyBillingCycle, 
                        short DayOfMonth, 
                        System.DateTime FirstInvoiceDate, 
                        System.DateTime AwcFirstInvoiceDate, 
                        bool AdvanceIsCycled, 
                        System.DateTime CycleBeginDate, 
                        System.DateTime CycleEndDate, 
                        System.DateTime CycleEndDateOverride, 
                        bool HideZeroInvoiceItems, 
                        short GracePeriod, 
                        bool AwcIssueEarlyReturnCredits, 
                        bool AllowMinimumDayOverride, 
                        bool RentIsTaxable, 
                        bool ConsumablesTaxable, 
                        bool DeliveryChargesTaxable, 
                        bool ContractBillingTaxable, 
                        bool ServiceTicketDamageChargeTaxable, 
                        System.Guid JobTax1ID, 
                        System.Guid JobTax2ID, 
                        System.DateTime StartDate, 
                        System.DateTime StopDate, 
                        System.DateTime LastDateForRent, 
                        System.DateTime JobDate1, 
                        System.DateTime JobDate2, 
                        System.Guid JobEmployee1ID, 
                        System.Guid JobEmployee2ID, 
                        System.Guid JobEmployee3ID, 
                        System.Guid JobCustomerContact1ID, 
                        System.Guid JobCustomerContact2ID, 
                        string JobText1, 
                        string JobText2, 
                        bool JobYesNo1, 
                        bool JobYesNo2, 
                        JobList1Row parentJobList1RowByFK_StockingLocation_JobList1ID_ListID, 
                        JobList2Row parentJobList2RowByFK_StockingLocation_JobList2ID_List2D, 
                        bool ReceiveRequireInspection, 
                        bool ReceiveOutOfService, 
                        double RentalDiscount, 
                        short RentalDiscountType, 
                        System.Guid MarkupUnitPriceID, 
                        bool AllowKioskDamaged, 
                        bool AllowKioskDamagedBeyondRepair, 
                        bool AllowKioskLostMissing, 
                        string InvoiceNotes, 
                        string ScaffoldTagList1Label, 
                        string ScaffoldTagList2Label, 
                        string ScaffoldTagList3Label, 
                        string ScaffoldTagList4Label, 
                        string ScaffoldTagList5Label, 
                        string ScaffoldTagList6Label, 
                        string ScaffoldTagList7Label, 
                        bool UseScaffoldTagList1, 
                        bool UseScaffoldTagList2, 
                        bool UseScaffoldTagList3, 
                        bool UseScaffoldTagList4, 
                        bool UseScaffoldTagList5, 
                        bool UseScaffoldTagList6, 
                        bool UseScaffoldTagList7, 
                        bool ScaffoldTagList1Required, 
                        bool ScaffoldTagList2Required, 
                        bool ScaffoldTagList3Required, 
                        bool ScaffoldTagList4Required, 
                        bool ScaffoldTagList5Required, 
                        bool ScaffoldTagList6Required, 
                        bool ScaffoldTagList7Required, 
                        bool UseScaffoldTagDate1, 
                        string ScaffoldTagDate1Label, 
                        bool ScaffoldTagDate1Required, 
                        bool UseScaffoldTagDate2, 
                        string ScaffoldTagDate2Label, 
                        bool ScaffoldTagDate2Required, 
                        bool UseScaffoldTagText1, 
                        string ScaffoldTagText1Label, 
                        bool ScaffoldTagText1Required, 
                        bool UseScaffoldTagText2, 
                        string ScaffoldTagText2Label, 
                        bool ScaffoldTagText2Required, 
                        bool UseScaffoldTagText3, 
                        string ScaffoldTagText3Label, 
                        bool ScaffoldTagText3Required, 
                        bool UseScaffoldTagYesNo1, 
                        string ScaffoldTagYesNo1Label, 
                        bool UseScaffoldTagYesNo2, 
                        string ScaffoldTagYesNo2Label, 
                        string ScaffoldTagActivityList1Label, 
                        string ScaffoldTagActivityList2Label, 
                        string ScaffoldTagActivityList3Label, 
                        string ScaffoldTagActivityText1Label, 
                        bool UseScaffoldTagActivityList1, 
                        bool UseScaffoldTagActivityList2, 
                        bool UseScaffoldTagActivityList3, 
                        bool UseScaffoldTagActivityText1, 
                        bool ScaffoldTagActivityList1Required, 
                        bool ScaffoldTagActivityList2Required, 
                        bool ScaffoldTagActivityList3Required, 
                        bool ScaffoldTagActivityText1Required, 
                        bool TrackScaffoldTagInspections, 
                        short InspectionFrequency, 
                        bool UseInspectionShifts, 
                        bool UseScaffoldTagActivities, 
                        bool EnforceOffRent, 
                        bool ScaffoldStopRentRequired, 
                        bool IsRentStopped, 
                        System.DateTime LastInvoiced, 
                        bool TrackContracts, 
                        byte[] VersionStamp) {
                StockingLocationRow rowStockingLocationRow = ((StockingLocationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StockingLocationID,
                        Number,
                        ReceiveTransferCount,
                        ReceiveReturnCount,
                        ReceiveDeliveryCount,
                        RequireRequestProducts,
                        TrackRequests,
                        CreateNewFromShortage,
                        HideQuantities,
                        UtilizationGoal,
                        List1Label,
                        List2Label,
                        List3Label,
                        ShowList1,
                        ShowList2,
                        ShowList3,
                        IsBillable,
                        IsToolCrib,
                        TrackScaffoldTags,
                        DefaultShipmentToBillable,
                        IncludeInProductHistory,
                        HistoryRateProfileID,
                        InvoiceOption,
                        DefaultRateProfileID,
                        BillingMethod,
                        BillingUserID,
                        ArrearsBillingCycle,
                        CycleDaysArrears,
                        MinimumDaysFata,
                        CycleDaysAdvanced,
                        MinimumDaysAdvanced,
                        OrderID,
                        IncludeUnitPricesOnMinimum,
                        ConsumablesEnabled,
                        MonthlyBillingCycle,
                        DayOfMonth,
                        FirstInvoiceDate,
                        AwcFirstInvoiceDate,
                        AdvanceIsCycled,
                        CycleBeginDate,
                        CycleEndDate,
                        CycleEndDateOverride,
                        HideZeroInvoiceItems,
                        GracePeriod,
                        AwcIssueEarlyReturnCredits,
                        AllowMinimumDayOverride,
                        RentIsTaxable,
                        ConsumablesTaxable,
                        DeliveryChargesTaxable,
                        ContractBillingTaxable,
                        ServiceTicketDamageChargeTaxable,
                        JobTax1ID,
                        JobTax2ID,
                        StartDate,
                        StopDate,
                        LastDateForRent,
                        JobDate1,
                        JobDate2,
                        JobEmployee1ID,
                        JobEmployee2ID,
                        JobEmployee3ID,
                        JobCustomerContact1ID,
                        JobCustomerContact2ID,
                        JobText1,
                        JobText2,
                        JobYesNo1,
                        JobYesNo2,
                        null,
                        null,
                        ReceiveRequireInspection,
                        ReceiveOutOfService,
                        RentalDiscount,
                        RentalDiscountType,
                        MarkupUnitPriceID,
                        AllowKioskDamaged,
                        AllowKioskDamagedBeyondRepair,
                        AllowKioskLostMissing,
                        InvoiceNotes,
                        ScaffoldTagList1Label,
                        ScaffoldTagList2Label,
                        ScaffoldTagList3Label,
                        ScaffoldTagList4Label,
                        ScaffoldTagList5Label,
                        ScaffoldTagList6Label,
                        ScaffoldTagList7Label,
                        UseScaffoldTagList1,
                        UseScaffoldTagList2,
                        UseScaffoldTagList3,
                        UseScaffoldTagList4,
                        UseScaffoldTagList5,
                        UseScaffoldTagList6,
                        UseScaffoldTagList7,
                        ScaffoldTagList1Required,
                        ScaffoldTagList2Required,
                        ScaffoldTagList3Required,
                        ScaffoldTagList4Required,
                        ScaffoldTagList5Required,
                        ScaffoldTagList6Required,
                        ScaffoldTagList7Required,
                        UseScaffoldTagDate1,
                        ScaffoldTagDate1Label,
                        ScaffoldTagDate1Required,
                        UseScaffoldTagDate2,
                        ScaffoldTagDate2Label,
                        ScaffoldTagDate2Required,
                        UseScaffoldTagText1,
                        ScaffoldTagText1Label,
                        ScaffoldTagText1Required,
                        UseScaffoldTagText2,
                        ScaffoldTagText2Label,
                        ScaffoldTagText2Required,
                        UseScaffoldTagText3,
                        ScaffoldTagText3Label,
                        ScaffoldTagText3Required,
                        UseScaffoldTagYesNo1,
                        ScaffoldTagYesNo1Label,
                        UseScaffoldTagYesNo2,
                        ScaffoldTagYesNo2Label,
                        ScaffoldTagActivityList1Label,
                        ScaffoldTagActivityList2Label,
                        ScaffoldTagActivityList3Label,
                        ScaffoldTagActivityText1Label,
                        UseScaffoldTagActivityList1,
                        UseScaffoldTagActivityList2,
                        UseScaffoldTagActivityList3,
                        UseScaffoldTagActivityText1,
                        ScaffoldTagActivityList1Required,
                        ScaffoldTagActivityList2Required,
                        ScaffoldTagActivityList3Required,
                        ScaffoldTagActivityText1Required,
                        TrackScaffoldTagInspections,
                        InspectionFrequency,
                        UseInspectionShifts,
                        UseScaffoldTagActivities,
                        EnforceOffRent,
                        ScaffoldStopRentRequired,
                        IsRentStopped,
                        LastInvoiced,
                        TrackContracts,
                        VersionStamp};
                if ((parentJobList1RowByFK_StockingLocation_JobList1ID_ListID != null)) {
                    columnValuesArray[67] = parentJobList1RowByFK_StockingLocation_JobList1ID_ListID[0];
                }
                if ((parentJobList2RowByFK_StockingLocation_JobList2ID_List2D != null)) {
                    columnValuesArray[68] = parentJobList2RowByFK_StockingLocation_JobList2ID_List2D[0];
                }
                rowStockingLocationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockingLocationRow);
                return rowStockingLocationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRow FindByStockingLocationID(System.Guid StockingLocationID) {
                return ((StockingLocationRow)(this.Rows.Find(new object[] {
                            StockingLocationID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StockingLocationDataTable cln = ((StockingLocationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockingLocationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStockingLocationID = base.Columns["StockingLocationID"];
                this.columnNumber = base.Columns["Number"];
                this.columnReceiveTransferCount = base.Columns["ReceiveTransferCount"];
                this.columnReceiveReturnCount = base.Columns["ReceiveReturnCount"];
                this.columnReceiveDeliveryCount = base.Columns["ReceiveDeliveryCount"];
                this.columnRequireRequestProducts = base.Columns["RequireRequestProducts"];
                this.columnTrackRequests = base.Columns["TrackRequests"];
                this.columnCreateNewFromShortage = base.Columns["CreateNewFromShortage"];
                this.columnHideQuantities = base.Columns["HideQuantities"];
                this.columnUtilizationGoal = base.Columns["UtilizationGoal"];
                this.columnList1Label = base.Columns["List1Label"];
                this.columnList2Label = base.Columns["List2Label"];
                this.columnList3Label = base.Columns["List3Label"];
                this.columnShowList1 = base.Columns["ShowList1"];
                this.columnShowList2 = base.Columns["ShowList2"];
                this.columnShowList3 = base.Columns["ShowList3"];
                this.columnIsBillable = base.Columns["IsBillable"];
                this.columnIsToolCrib = base.Columns["IsToolCrib"];
                this.columnTrackScaffoldTags = base.Columns["TrackScaffoldTags"];
                this.columnDefaultShipmentToBillable = base.Columns["DefaultShipmentToBillable"];
                this.columnIncludeInProductHistory = base.Columns["IncludeInProductHistory"];
                this.columnHistoryRateProfileID = base.Columns["HistoryRateProfileID"];
                this.columnInvoiceOption = base.Columns["InvoiceOption"];
                this.columnDefaultRateProfileID = base.Columns["DefaultRateProfileID"];
                this.columnBillingMethod = base.Columns["BillingMethod"];
                this.columnBillingUserID = base.Columns["BillingUserID"];
                this.columnArrearsBillingCycle = base.Columns["ArrearsBillingCycle"];
                this.columnCycleDaysArrears = base.Columns["CycleDaysArrears"];
                this.columnMinimumDaysFata = base.Columns["MinimumDaysFata"];
                this.columnCycleDaysAdvanced = base.Columns["CycleDaysAdvanced"];
                this.columnMinimumDaysAdvanced = base.Columns["MinimumDaysAdvanced"];
                this.columnOrderID = base.Columns["OrderID"];
                this.columnIncludeUnitPricesOnMinimum = base.Columns["IncludeUnitPricesOnMinimum"];
                this.columnConsumablesEnabled = base.Columns["ConsumablesEnabled"];
                this.columnMonthlyBillingCycle = base.Columns["MonthlyBillingCycle"];
                this.columnDayOfMonth = base.Columns["DayOfMonth"];
                this.columnFirstInvoiceDate = base.Columns["FirstInvoiceDate"];
                this.columnAwcFirstInvoiceDate = base.Columns["AwcFirstInvoiceDate"];
                this.columnAdvanceIsCycled = base.Columns["AdvanceIsCycled"];
                this.columnCycleBeginDate = base.Columns["CycleBeginDate"];
                this.columnCycleEndDate = base.Columns["CycleEndDate"];
                this.columnCycleEndDateOverride = base.Columns["CycleEndDateOverride"];
                this.columnHideZeroInvoiceItems = base.Columns["HideZeroInvoiceItems"];
                this.columnGracePeriod = base.Columns["GracePeriod"];
                this.columnAwcIssueEarlyReturnCredits = base.Columns["AwcIssueEarlyReturnCredits"];
                this.columnAllowMinimumDayOverride = base.Columns["AllowMinimumDayOverride"];
                this.columnRentIsTaxable = base.Columns["RentIsTaxable"];
                this.columnConsumablesTaxable = base.Columns["ConsumablesTaxable"];
                this.columnDeliveryChargesTaxable = base.Columns["DeliveryChargesTaxable"];
                this.columnContractBillingTaxable = base.Columns["ContractBillingTaxable"];
                this.columnServiceTicketDamageChargeTaxable = base.Columns["ServiceTicketDamageChargeTaxable"];
                this.columnJobTax1ID = base.Columns["JobTax1ID"];
                this.columnJobTax2ID = base.Columns["JobTax2ID"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnStopDate = base.Columns["StopDate"];
                this.columnLastDateForRent = base.Columns["LastDateForRent"];
                this.columnJobDate1 = base.Columns["JobDate1"];
                this.columnJobDate2 = base.Columns["JobDate2"];
                this.columnJobEmployee1ID = base.Columns["JobEmployee1ID"];
                this.columnJobEmployee2ID = base.Columns["JobEmployee2ID"];
                this.columnJobEmployee3ID = base.Columns["JobEmployee3ID"];
                this.columnJobCustomerContact1ID = base.Columns["JobCustomerContact1ID"];
                this.columnJobCustomerContact2ID = base.Columns["JobCustomerContact2ID"];
                this.columnJobText1 = base.Columns["JobText1"];
                this.columnJobText2 = base.Columns["JobText2"];
                this.columnJobYesNo1 = base.Columns["JobYesNo1"];
                this.columnJobYesNo2 = base.Columns["JobYesNo2"];
                this.columnJobList1ID = base.Columns["JobList1ID"];
                this.columnJobList2ID = base.Columns["JobList2ID"];
                this.columnReceiveRequireInspection = base.Columns["ReceiveRequireInspection"];
                this.columnReceiveOutOfService = base.Columns["ReceiveOutOfService"];
                this.columnRentalDiscount = base.Columns["RentalDiscount"];
                this.columnRentalDiscountType = base.Columns["RentalDiscountType"];
                this.columnMarkupUnitPriceID = base.Columns["MarkupUnitPriceID"];
                this.columnAllowKioskDamaged = base.Columns["AllowKioskDamaged"];
                this.columnAllowKioskDamagedBeyondRepair = base.Columns["AllowKioskDamagedBeyondRepair"];
                this.columnAllowKioskLostMissing = base.Columns["AllowKioskLostMissing"];
                this.columnInvoiceNotes = base.Columns["InvoiceNotes"];
                this.columnScaffoldTagList1Label = base.Columns["ScaffoldTagList1Label"];
                this.columnScaffoldTagList2Label = base.Columns["ScaffoldTagList2Label"];
                this.columnScaffoldTagList3Label = base.Columns["ScaffoldTagList3Label"];
                this.columnScaffoldTagList4Label = base.Columns["ScaffoldTagList4Label"];
                this.columnScaffoldTagList5Label = base.Columns["ScaffoldTagList5Label"];
                this.columnScaffoldTagList6Label = base.Columns["ScaffoldTagList6Label"];
                this.columnScaffoldTagList7Label = base.Columns["ScaffoldTagList7Label"];
                this.columnUseScaffoldTagList1 = base.Columns["UseScaffoldTagList1"];
                this.columnUseScaffoldTagList2 = base.Columns["UseScaffoldTagList2"];
                this.columnUseScaffoldTagList3 = base.Columns["UseScaffoldTagList3"];
                this.columnUseScaffoldTagList4 = base.Columns["UseScaffoldTagList4"];
                this.columnUseScaffoldTagList5 = base.Columns["UseScaffoldTagList5"];
                this.columnUseScaffoldTagList6 = base.Columns["UseScaffoldTagList6"];
                this.columnUseScaffoldTagList7 = base.Columns["UseScaffoldTagList7"];
                this.columnScaffoldTagList1Required = base.Columns["ScaffoldTagList1Required"];
                this.columnScaffoldTagList2Required = base.Columns["ScaffoldTagList2Required"];
                this.columnScaffoldTagList3Required = base.Columns["ScaffoldTagList3Required"];
                this.columnScaffoldTagList4Required = base.Columns["ScaffoldTagList4Required"];
                this.columnScaffoldTagList5Required = base.Columns["ScaffoldTagList5Required"];
                this.columnScaffoldTagList6Required = base.Columns["ScaffoldTagList6Required"];
                this.columnScaffoldTagList7Required = base.Columns["ScaffoldTagList7Required"];
                this.columnUseScaffoldTagDate1 = base.Columns["UseScaffoldTagDate1"];
                this.columnScaffoldTagDate1Label = base.Columns["ScaffoldTagDate1Label"];
                this.columnScaffoldTagDate1Required = base.Columns["ScaffoldTagDate1Required"];
                this.columnUseScaffoldTagDate2 = base.Columns["UseScaffoldTagDate2"];
                this.columnScaffoldTagDate2Label = base.Columns["ScaffoldTagDate2Label"];
                this.columnScaffoldTagDate2Required = base.Columns["ScaffoldTagDate2Required"];
                this.columnUseScaffoldTagText1 = base.Columns["UseScaffoldTagText1"];
                this.columnScaffoldTagText1Label = base.Columns["ScaffoldTagText1Label"];
                this.columnScaffoldTagText1Required = base.Columns["ScaffoldTagText1Required"];
                this.columnUseScaffoldTagText2 = base.Columns["UseScaffoldTagText2"];
                this.columnScaffoldTagText2Label = base.Columns["ScaffoldTagText2Label"];
                this.columnScaffoldTagText2Required = base.Columns["ScaffoldTagText2Required"];
                this.columnUseScaffoldTagText3 = base.Columns["UseScaffoldTagText3"];
                this.columnScaffoldTagText3Label = base.Columns["ScaffoldTagText3Label"];
                this.columnScaffoldTagText3Required = base.Columns["ScaffoldTagText3Required"];
                this.columnUseScaffoldTagYesNo1 = base.Columns["UseScaffoldTagYesNo1"];
                this.columnScaffoldTagYesNo1Label = base.Columns["ScaffoldTagYesNo1Label"];
                this.columnUseScaffoldTagYesNo2 = base.Columns["UseScaffoldTagYesNo2"];
                this.columnScaffoldTagYesNo2Label = base.Columns["ScaffoldTagYesNo2Label"];
                this.columnScaffoldTagActivityList1Label = base.Columns["ScaffoldTagActivityList1Label"];
                this.columnScaffoldTagActivityList2Label = base.Columns["ScaffoldTagActivityList2Label"];
                this.columnScaffoldTagActivityList3Label = base.Columns["ScaffoldTagActivityList3Label"];
                this.columnScaffoldTagActivityText1Label = base.Columns["ScaffoldTagActivityText1Label"];
                this.columnUseScaffoldTagActivityList1 = base.Columns["UseScaffoldTagActivityList1"];
                this.columnUseScaffoldTagActivityList2 = base.Columns["UseScaffoldTagActivityList2"];
                this.columnUseScaffoldTagActivityList3 = base.Columns["UseScaffoldTagActivityList3"];
                this.columnUseScaffoldTagActivityText1 = base.Columns["UseScaffoldTagActivityText1"];
                this.columnScaffoldTagActivityList1Required = base.Columns["ScaffoldTagActivityList1Required"];
                this.columnScaffoldTagActivityList2Required = base.Columns["ScaffoldTagActivityList2Required"];
                this.columnScaffoldTagActivityList3Required = base.Columns["ScaffoldTagActivityList3Required"];
                this.columnScaffoldTagActivityText1Required = base.Columns["ScaffoldTagActivityText1Required"];
                this.columnTrackScaffoldTagInspections = base.Columns["TrackScaffoldTagInspections"];
                this.columnInspectionFrequency = base.Columns["InspectionFrequency"];
                this.columnUseInspectionShifts = base.Columns["UseInspectionShifts"];
                this.columnUseScaffoldTagActivities = base.Columns["UseScaffoldTagActivities"];
                this.columnEnforceOffRent = base.Columns["EnforceOffRent"];
                this.columnScaffoldStopRentRequired = base.Columns["ScaffoldStopRentRequired"];
                this.columnIsRentStopped = base.Columns["IsRentStopped"];
                this.columnLastInvoiced = base.Columns["LastInvoiced"];
                this.columnTrackContracts = base.Columns["TrackContracts"];
                this.columnVersionStamp = base.Columns["VersionStamp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStockingLocationID = new global::System.Data.DataColumn("StockingLocationID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockingLocationID);
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnReceiveTransferCount = new global::System.Data.DataColumn("ReceiveTransferCount", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveTransferCount);
                this.columnReceiveReturnCount = new global::System.Data.DataColumn("ReceiveReturnCount", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveReturnCount);
                this.columnReceiveDeliveryCount = new global::System.Data.DataColumn("ReceiveDeliveryCount", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveDeliveryCount);
                this.columnRequireRequestProducts = new global::System.Data.DataColumn("RequireRequestProducts", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequireRequestProducts);
                this.columnTrackRequests = new global::System.Data.DataColumn("TrackRequests", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackRequests);
                this.columnCreateNewFromShortage = new global::System.Data.DataColumn("CreateNewFromShortage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateNewFromShortage);
                this.columnHideQuantities = new global::System.Data.DataColumn("HideQuantities", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHideQuantities);
                this.columnUtilizationGoal = new global::System.Data.DataColumn("UtilizationGoal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilizationGoal);
                this.columnList1Label = new global::System.Data.DataColumn("List1Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnList1Label);
                this.columnList2Label = new global::System.Data.DataColumn("List2Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnList2Label);
                this.columnList3Label = new global::System.Data.DataColumn("List3Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnList3Label);
                this.columnShowList1 = new global::System.Data.DataColumn("ShowList1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowList1);
                this.columnShowList2 = new global::System.Data.DataColumn("ShowList2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowList2);
                this.columnShowList3 = new global::System.Data.DataColumn("ShowList3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowList3);
                this.columnIsBillable = new global::System.Data.DataColumn("IsBillable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBillable);
                this.columnIsToolCrib = new global::System.Data.DataColumn("IsToolCrib", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsToolCrib);
                this.columnTrackScaffoldTags = new global::System.Data.DataColumn("TrackScaffoldTags", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackScaffoldTags);
                this.columnDefaultShipmentToBillable = new global::System.Data.DataColumn("DefaultShipmentToBillable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultShipmentToBillable);
                this.columnIncludeInProductHistory = new global::System.Data.DataColumn("IncludeInProductHistory", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncludeInProductHistory);
                this.columnHistoryRateProfileID = new global::System.Data.DataColumn("HistoryRateProfileID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryRateProfileID);
                this.columnInvoiceOption = new global::System.Data.DataColumn("InvoiceOption", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceOption);
                this.columnDefaultRateProfileID = new global::System.Data.DataColumn("DefaultRateProfileID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultRateProfileID);
                this.columnBillingMethod = new global::System.Data.DataColumn("BillingMethod", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingMethod);
                this.columnBillingUserID = new global::System.Data.DataColumn("BillingUserID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingUserID);
                this.columnArrearsBillingCycle = new global::System.Data.DataColumn("ArrearsBillingCycle", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrearsBillingCycle);
                this.columnCycleDaysArrears = new global::System.Data.DataColumn("CycleDaysArrears", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDaysArrears);
                this.columnMinimumDaysFata = new global::System.Data.DataColumn("MinimumDaysFata", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimumDaysFata);
                this.columnCycleDaysAdvanced = new global::System.Data.DataColumn("CycleDaysAdvanced", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleDaysAdvanced);
                this.columnMinimumDaysAdvanced = new global::System.Data.DataColumn("MinimumDaysAdvanced", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimumDaysAdvanced);
                this.columnOrderID = new global::System.Data.DataColumn("OrderID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderID);
                this.columnIncludeUnitPricesOnMinimum = new global::System.Data.DataColumn("IncludeUnitPricesOnMinimum", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncludeUnitPricesOnMinimum);
                this.columnConsumablesEnabled = new global::System.Data.DataColumn("ConsumablesEnabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumablesEnabled);
                this.columnMonthlyBillingCycle = new global::System.Data.DataColumn("MonthlyBillingCycle", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthlyBillingCycle);
                this.columnDayOfMonth = new global::System.Data.DataColumn("DayOfMonth", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayOfMonth);
                this.columnFirstInvoiceDate = new global::System.Data.DataColumn("FirstInvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstInvoiceDate);
                this.columnAwcFirstInvoiceDate = new global::System.Data.DataColumn("AwcFirstInvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAwcFirstInvoiceDate);
                this.columnAdvanceIsCycled = new global::System.Data.DataColumn("AdvanceIsCycled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvanceIsCycled);
                this.columnCycleBeginDate = new global::System.Data.DataColumn("CycleBeginDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleBeginDate);
                this.columnCycleEndDate = new global::System.Data.DataColumn("CycleEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleEndDate);
                this.columnCycleEndDateOverride = new global::System.Data.DataColumn("CycleEndDateOverride", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCycleEndDateOverride);
                this.columnHideZeroInvoiceItems = new global::System.Data.DataColumn("HideZeroInvoiceItems", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHideZeroInvoiceItems);
                this.columnGracePeriod = new global::System.Data.DataColumn("GracePeriod", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGracePeriod);
                this.columnAwcIssueEarlyReturnCredits = new global::System.Data.DataColumn("AwcIssueEarlyReturnCredits", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAwcIssueEarlyReturnCredits);
                this.columnAllowMinimumDayOverride = new global::System.Data.DataColumn("AllowMinimumDayOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowMinimumDayOverride);
                this.columnRentIsTaxable = new global::System.Data.DataColumn("RentIsTaxable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRentIsTaxable);
                this.columnConsumablesTaxable = new global::System.Data.DataColumn("ConsumablesTaxable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumablesTaxable);
                this.columnDeliveryChargesTaxable = new global::System.Data.DataColumn("DeliveryChargesTaxable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryChargesTaxable);
                this.columnContractBillingTaxable = new global::System.Data.DataColumn("ContractBillingTaxable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractBillingTaxable);
                this.columnServiceTicketDamageChargeTaxable = new global::System.Data.DataColumn("ServiceTicketDamageChargeTaxable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceTicketDamageChargeTaxable);
                this.columnJobTax1ID = new global::System.Data.DataColumn("JobTax1ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobTax1ID);
                this.columnJobTax2ID = new global::System.Data.DataColumn("JobTax2ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobTax2ID);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnStopDate = new global::System.Data.DataColumn("StopDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStopDate);
                this.columnLastDateForRent = new global::System.Data.DataColumn("LastDateForRent", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastDateForRent);
                this.columnJobDate1 = new global::System.Data.DataColumn("JobDate1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobDate1);
                this.columnJobDate2 = new global::System.Data.DataColumn("JobDate2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobDate2);
                this.columnJobEmployee1ID = new global::System.Data.DataColumn("JobEmployee1ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobEmployee1ID);
                this.columnJobEmployee2ID = new global::System.Data.DataColumn("JobEmployee2ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobEmployee2ID);
                this.columnJobEmployee3ID = new global::System.Data.DataColumn("JobEmployee3ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobEmployee3ID);
                this.columnJobCustomerContact1ID = new global::System.Data.DataColumn("JobCustomerContact1ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobCustomerContact1ID);
                this.columnJobCustomerContact2ID = new global::System.Data.DataColumn("JobCustomerContact2ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobCustomerContact2ID);
                this.columnJobText1 = new global::System.Data.DataColumn("JobText1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobText1);
                this.columnJobText2 = new global::System.Data.DataColumn("JobText2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobText2);
                this.columnJobYesNo1 = new global::System.Data.DataColumn("JobYesNo1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobYesNo1);
                this.columnJobYesNo2 = new global::System.Data.DataColumn("JobYesNo2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobYesNo2);
                this.columnJobList1ID = new global::System.Data.DataColumn("JobList1ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobList1ID);
                this.columnJobList2ID = new global::System.Data.DataColumn("JobList2ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobList2ID);
                this.columnReceiveRequireInspection = new global::System.Data.DataColumn("ReceiveRequireInspection", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveRequireInspection);
                this.columnReceiveOutOfService = new global::System.Data.DataColumn("ReceiveOutOfService", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveOutOfService);
                this.columnRentalDiscount = new global::System.Data.DataColumn("RentalDiscount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRentalDiscount);
                this.columnRentalDiscountType = new global::System.Data.DataColumn("RentalDiscountType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRentalDiscountType);
                this.columnMarkupUnitPriceID = new global::System.Data.DataColumn("MarkupUnitPriceID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkupUnitPriceID);
                this.columnAllowKioskDamaged = new global::System.Data.DataColumn("AllowKioskDamaged", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowKioskDamaged);
                this.columnAllowKioskDamagedBeyondRepair = new global::System.Data.DataColumn("AllowKioskDamagedBeyondRepair", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowKioskDamagedBeyondRepair);
                this.columnAllowKioskLostMissing = new global::System.Data.DataColumn("AllowKioskLostMissing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowKioskLostMissing);
                this.columnInvoiceNotes = new global::System.Data.DataColumn("InvoiceNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNotes);
                this.columnScaffoldTagList1Label = new global::System.Data.DataColumn("ScaffoldTagList1Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList1Label);
                this.columnScaffoldTagList2Label = new global::System.Data.DataColumn("ScaffoldTagList2Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList2Label);
                this.columnScaffoldTagList3Label = new global::System.Data.DataColumn("ScaffoldTagList3Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList3Label);
                this.columnScaffoldTagList4Label = new global::System.Data.DataColumn("ScaffoldTagList4Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList4Label);
                this.columnScaffoldTagList5Label = new global::System.Data.DataColumn("ScaffoldTagList5Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList5Label);
                this.columnScaffoldTagList6Label = new global::System.Data.DataColumn("ScaffoldTagList6Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList6Label);
                this.columnScaffoldTagList7Label = new global::System.Data.DataColumn("ScaffoldTagList7Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList7Label);
                this.columnUseScaffoldTagList1 = new global::System.Data.DataColumn("UseScaffoldTagList1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagList1);
                this.columnUseScaffoldTagList2 = new global::System.Data.DataColumn("UseScaffoldTagList2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagList2);
                this.columnUseScaffoldTagList3 = new global::System.Data.DataColumn("UseScaffoldTagList3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagList3);
                this.columnUseScaffoldTagList4 = new global::System.Data.DataColumn("UseScaffoldTagList4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagList4);
                this.columnUseScaffoldTagList5 = new global::System.Data.DataColumn("UseScaffoldTagList5", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagList5);
                this.columnUseScaffoldTagList6 = new global::System.Data.DataColumn("UseScaffoldTagList6", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagList6);
                this.columnUseScaffoldTagList7 = new global::System.Data.DataColumn("UseScaffoldTagList7", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagList7);
                this.columnScaffoldTagList1Required = new global::System.Data.DataColumn("ScaffoldTagList1Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList1Required);
                this.columnScaffoldTagList2Required = new global::System.Data.DataColumn("ScaffoldTagList2Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList2Required);
                this.columnScaffoldTagList3Required = new global::System.Data.DataColumn("ScaffoldTagList3Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList3Required);
                this.columnScaffoldTagList4Required = new global::System.Data.DataColumn("ScaffoldTagList4Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList4Required);
                this.columnScaffoldTagList5Required = new global::System.Data.DataColumn("ScaffoldTagList5Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList5Required);
                this.columnScaffoldTagList6Required = new global::System.Data.DataColumn("ScaffoldTagList6Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList6Required);
                this.columnScaffoldTagList7Required = new global::System.Data.DataColumn("ScaffoldTagList7Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagList7Required);
                this.columnUseScaffoldTagDate1 = new global::System.Data.DataColumn("UseScaffoldTagDate1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagDate1);
                this.columnScaffoldTagDate1Label = new global::System.Data.DataColumn("ScaffoldTagDate1Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagDate1Label);
                this.columnScaffoldTagDate1Required = new global::System.Data.DataColumn("ScaffoldTagDate1Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagDate1Required);
                this.columnUseScaffoldTagDate2 = new global::System.Data.DataColumn("UseScaffoldTagDate2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagDate2);
                this.columnScaffoldTagDate2Label = new global::System.Data.DataColumn("ScaffoldTagDate2Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagDate2Label);
                this.columnScaffoldTagDate2Required = new global::System.Data.DataColumn("ScaffoldTagDate2Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagDate2Required);
                this.columnUseScaffoldTagText1 = new global::System.Data.DataColumn("UseScaffoldTagText1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagText1);
                this.columnScaffoldTagText1Label = new global::System.Data.DataColumn("ScaffoldTagText1Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagText1Label);
                this.columnScaffoldTagText1Required = new global::System.Data.DataColumn("ScaffoldTagText1Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagText1Required);
                this.columnUseScaffoldTagText2 = new global::System.Data.DataColumn("UseScaffoldTagText2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagText2);
                this.columnScaffoldTagText2Label = new global::System.Data.DataColumn("ScaffoldTagText2Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagText2Label);
                this.columnScaffoldTagText2Required = new global::System.Data.DataColumn("ScaffoldTagText2Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagText2Required);
                this.columnUseScaffoldTagText3 = new global::System.Data.DataColumn("UseScaffoldTagText3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagText3);
                this.columnScaffoldTagText3Label = new global::System.Data.DataColumn("ScaffoldTagText3Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagText3Label);
                this.columnScaffoldTagText3Required = new global::System.Data.DataColumn("ScaffoldTagText3Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagText3Required);
                this.columnUseScaffoldTagYesNo1 = new global::System.Data.DataColumn("UseScaffoldTagYesNo1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagYesNo1);
                this.columnScaffoldTagYesNo1Label = new global::System.Data.DataColumn("ScaffoldTagYesNo1Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagYesNo1Label);
                this.columnUseScaffoldTagYesNo2 = new global::System.Data.DataColumn("UseScaffoldTagYesNo2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagYesNo2);
                this.columnScaffoldTagYesNo2Label = new global::System.Data.DataColumn("ScaffoldTagYesNo2Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagYesNo2Label);
                this.columnScaffoldTagActivityList1Label = new global::System.Data.DataColumn("ScaffoldTagActivityList1Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagActivityList1Label);
                this.columnScaffoldTagActivityList2Label = new global::System.Data.DataColumn("ScaffoldTagActivityList2Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagActivityList2Label);
                this.columnScaffoldTagActivityList3Label = new global::System.Data.DataColumn("ScaffoldTagActivityList3Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagActivityList3Label);
                this.columnScaffoldTagActivityText1Label = new global::System.Data.DataColumn("ScaffoldTagActivityText1Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagActivityText1Label);
                this.columnUseScaffoldTagActivityList1 = new global::System.Data.DataColumn("UseScaffoldTagActivityList1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagActivityList1);
                this.columnUseScaffoldTagActivityList2 = new global::System.Data.DataColumn("UseScaffoldTagActivityList2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagActivityList2);
                this.columnUseScaffoldTagActivityList3 = new global::System.Data.DataColumn("UseScaffoldTagActivityList3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagActivityList3);
                this.columnUseScaffoldTagActivityText1 = new global::System.Data.DataColumn("UseScaffoldTagActivityText1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagActivityText1);
                this.columnScaffoldTagActivityList1Required = new global::System.Data.DataColumn("ScaffoldTagActivityList1Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagActivityList1Required);
                this.columnScaffoldTagActivityList2Required = new global::System.Data.DataColumn("ScaffoldTagActivityList2Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagActivityList2Required);
                this.columnScaffoldTagActivityList3Required = new global::System.Data.DataColumn("ScaffoldTagActivityList3Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagActivityList3Required);
                this.columnScaffoldTagActivityText1Required = new global::System.Data.DataColumn("ScaffoldTagActivityText1Required", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldTagActivityText1Required);
                this.columnTrackScaffoldTagInspections = new global::System.Data.DataColumn("TrackScaffoldTagInspections", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackScaffoldTagInspections);
                this.columnInspectionFrequency = new global::System.Data.DataColumn("InspectionFrequency", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspectionFrequency);
                this.columnUseInspectionShifts = new global::System.Data.DataColumn("UseInspectionShifts", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseInspectionShifts);
                this.columnUseScaffoldTagActivities = new global::System.Data.DataColumn("UseScaffoldTagActivities", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseScaffoldTagActivities);
                this.columnEnforceOffRent = new global::System.Data.DataColumn("EnforceOffRent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnforceOffRent);
                this.columnScaffoldStopRentRequired = new global::System.Data.DataColumn("ScaffoldStopRentRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScaffoldStopRentRequired);
                this.columnIsRentStopped = new global::System.Data.DataColumn("IsRentStopped", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRentStopped);
                this.columnLastInvoiced = new global::System.Data.DataColumn("LastInvoiced", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastInvoiced);
                this.columnTrackContracts = new global::System.Data.DataColumn("TrackContracts", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackContracts);
                this.columnVersionStamp = new global::System.Data.DataColumn("VersionStamp", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersionStamp);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStockingLocationID}, true));
                this.columnStockingLocationID.AllowDBNull = false;
                this.columnStockingLocationID.Unique = true;
                this.columnNumber.MaxLength = 50;
                this.columnReceiveTransferCount.AllowDBNull = false;
                this.columnReceiveReturnCount.AllowDBNull = false;
                this.columnReceiveDeliveryCount.AllowDBNull = false;
                this.columnRequireRequestProducts.AllowDBNull = false;
                this.columnTrackRequests.AllowDBNull = false;
                this.columnCreateNewFromShortage.AllowDBNull = false;
                this.columnHideQuantities.AllowDBNull = false;
                this.columnList1Label.AllowDBNull = false;
                this.columnList1Label.MaxLength = 50;
                this.columnList2Label.AllowDBNull = false;
                this.columnList2Label.MaxLength = 50;
                this.columnList3Label.AllowDBNull = false;
                this.columnList3Label.MaxLength = 50;
                this.columnShowList1.AllowDBNull = false;
                this.columnShowList2.AllowDBNull = false;
                this.columnShowList3.AllowDBNull = false;
                this.columnIsBillable.AllowDBNull = false;
                this.columnIsToolCrib.AllowDBNull = false;
                this.columnTrackScaffoldTags.AllowDBNull = false;
                this.columnIncludeInProductHistory.AllowDBNull = false;
                this.columnInvoiceOption.AllowDBNull = false;
                this.columnIncludeUnitPricesOnMinimum.AllowDBNull = false;
                this.columnConsumablesEnabled.AllowDBNull = false;
                this.columnAwcIssueEarlyReturnCredits.AllowDBNull = false;
                this.columnAllowMinimumDayOverride.AllowDBNull = false;
                this.columnJobText1.MaxLength = 50;
                this.columnJobText2.MaxLength = 50;
                this.columnReceiveRequireInspection.AllowDBNull = false;
                this.columnReceiveOutOfService.AllowDBNull = false;
                this.columnRentalDiscountType.AllowDBNull = false;
                this.columnAllowKioskDamaged.AllowDBNull = false;
                this.columnAllowKioskDamagedBeyondRepair.AllowDBNull = false;
                this.columnAllowKioskLostMissing.AllowDBNull = false;
                this.columnInvoiceNotes.MaxLength = 2000;
                this.columnScaffoldTagList1Label.MaxLength = 50;
                this.columnScaffoldTagList2Label.MaxLength = 50;
                this.columnScaffoldTagList3Label.MaxLength = 50;
                this.columnScaffoldTagList4Label.MaxLength = 50;
                this.columnScaffoldTagList5Label.MaxLength = 50;
                this.columnScaffoldTagList6Label.MaxLength = 50;
                this.columnScaffoldTagList7Label.MaxLength = 50;
                this.columnUseScaffoldTagList1.AllowDBNull = false;
                this.columnUseScaffoldTagList2.AllowDBNull = false;
                this.columnUseScaffoldTagList3.AllowDBNull = false;
                this.columnUseScaffoldTagList4.AllowDBNull = false;
                this.columnUseScaffoldTagList5.AllowDBNull = false;
                this.columnUseScaffoldTagList6.AllowDBNull = false;
                this.columnUseScaffoldTagList7.AllowDBNull = false;
                this.columnScaffoldTagList1Required.AllowDBNull = false;
                this.columnScaffoldTagList2Required.AllowDBNull = false;
                this.columnScaffoldTagList3Required.AllowDBNull = false;
                this.columnScaffoldTagList4Required.AllowDBNull = false;
                this.columnScaffoldTagList5Required.AllowDBNull = false;
                this.columnScaffoldTagList6Required.AllowDBNull = false;
                this.columnScaffoldTagList7Required.AllowDBNull = false;
                this.columnUseScaffoldTagDate1.AllowDBNull = false;
                this.columnScaffoldTagDate1Label.MaxLength = 50;
                this.columnScaffoldTagDate1Required.AllowDBNull = false;
                this.columnUseScaffoldTagDate2.AllowDBNull = false;
                this.columnScaffoldTagDate2Label.MaxLength = 50;
                this.columnScaffoldTagDate2Required.AllowDBNull = false;
                this.columnUseScaffoldTagText1.AllowDBNull = false;
                this.columnScaffoldTagText1Label.MaxLength = 50;
                this.columnScaffoldTagText1Required.AllowDBNull = false;
                this.columnUseScaffoldTagText2.AllowDBNull = false;
                this.columnScaffoldTagText2Label.MaxLength = 50;
                this.columnScaffoldTagText2Required.AllowDBNull = false;
                this.columnUseScaffoldTagText3.AllowDBNull = false;
                this.columnScaffoldTagText3Label.MaxLength = 50;
                this.columnScaffoldTagText3Required.AllowDBNull = false;
                this.columnUseScaffoldTagYesNo1.AllowDBNull = false;
                this.columnScaffoldTagYesNo1Label.MaxLength = 50;
                this.columnUseScaffoldTagYesNo2.AllowDBNull = false;
                this.columnScaffoldTagYesNo2Label.MaxLength = 50;
                this.columnScaffoldTagActivityList1Label.MaxLength = 50;
                this.columnScaffoldTagActivityList2Label.MaxLength = 50;
                this.columnScaffoldTagActivityList3Label.MaxLength = 50;
                this.columnScaffoldTagActivityText1Label.MaxLength = 50;
                this.columnUseScaffoldTagActivityList1.AllowDBNull = false;
                this.columnUseScaffoldTagActivityList2.AllowDBNull = false;
                this.columnUseScaffoldTagActivityList3.AllowDBNull = false;
                this.columnUseScaffoldTagActivityText1.AllowDBNull = false;
                this.columnScaffoldTagActivityList1Required.AllowDBNull = false;
                this.columnScaffoldTagActivityList2Required.AllowDBNull = false;
                this.columnScaffoldTagActivityList3Required.AllowDBNull = false;
                this.columnScaffoldTagActivityText1Required.AllowDBNull = false;
                this.columnTrackScaffoldTagInspections.AllowDBNull = false;
                this.columnUseInspectionShifts.AllowDBNull = false;
                this.columnUseScaffoldTagActivities.AllowDBNull = false;
                this.columnEnforceOffRent.AllowDBNull = false;
                this.columnScaffoldStopRentRequired.AllowDBNull = false;
                this.columnIsRentStopped.AllowDBNull = false;
                this.columnLastInvoiced.AllowDBNull = false;
                this.columnTrackContracts.AllowDBNull = false;
                this.columnVersionStamp.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRow NewStockingLocationRow() {
                return ((StockingLocationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockingLocationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StockingLocationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockingLocationRowChanged != null)) {
                    this.StockingLocationRowChanged(this, new StockingLocationRowChangeEvent(((StockingLocationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockingLocationRowChanging != null)) {
                    this.StockingLocationRowChanging(this, new StockingLocationRowChangeEvent(((StockingLocationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockingLocationRowDeleted != null)) {
                    this.StockingLocationRowDeleted(this, new StockingLocationRowChangeEvent(((StockingLocationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockingLocationRowDeleting != null)) {
                    this.StockingLocationRowDeleting(this, new StockingLocationRowChangeEvent(((StockingLocationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStockingLocationRow(StockingLocationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsQuantify ds = new DsQuantify();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockingLocationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JobList1DataTable : global::System.Data.TypedTableBase<JobList1Row> {
            
            private global::System.Data.DataColumn columnJobList1ID;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList1DataTable() {
                this.TableName = "JobList1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JobList1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected JobList1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobList1IDColumn {
                get {
                    return this.columnJobList1ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList1Row this[int index] {
                get {
                    return ((JobList1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobList1RowChangeEventHandler JobList1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobList1RowChangeEventHandler JobList1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobList1RowChangeEventHandler JobList1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobList1RowChangeEventHandler JobList1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddJobList1Row(JobList1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList1Row AddJobList1Row(System.Guid JobList1ID, bool IsActive, string Name, string Description) {
                JobList1Row rowJobList1Row = ((JobList1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JobList1ID,
                        IsActive,
                        Name,
                        Description};
                rowJobList1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowJobList1Row);
                return rowJobList1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList1Row FindByJobList1ID(System.Guid JobList1ID) {
                return ((JobList1Row)(this.Rows.Find(new object[] {
                            JobList1ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                JobList1DataTable cln = ((JobList1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new JobList1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnJobList1ID = base.Columns["JobList1ID"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnName = base.Columns["Name"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnJobList1ID = new global::System.Data.DataColumn("JobList1ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobList1ID);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnJobList1ID}, true));
                this.columnJobList1ID.AllowDBNull = false;
                this.columnJobList1ID.Unique = true;
                this.columnIsActive.AllowDBNull = false;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
                this.columnDescription.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList1Row NewJobList1Row() {
                return ((JobList1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new JobList1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(JobList1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JobList1RowChanged != null)) {
                    this.JobList1RowChanged(this, new JobList1RowChangeEvent(((JobList1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JobList1RowChanging != null)) {
                    this.JobList1RowChanging(this, new JobList1RowChangeEvent(((JobList1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JobList1RowDeleted != null)) {
                    this.JobList1RowDeleted(this, new JobList1RowChangeEvent(((JobList1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JobList1RowDeleting != null)) {
                    this.JobList1RowDeleting(this, new JobList1RowChangeEvent(((JobList1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveJobList1Row(JobList1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsQuantify ds = new DsQuantify();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JobList1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JobList2DataTable : global::System.Data.TypedTableBase<JobList2Row> {
            
            private global::System.Data.DataColumn columnJobList2ID;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList2DataTable() {
                this.TableName = "JobList2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JobList2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected JobList2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobList2IDColumn {
                get {
                    return this.columnJobList2ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList2Row this[int index] {
                get {
                    return ((JobList2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobList2RowChangeEventHandler JobList2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobList2RowChangeEventHandler JobList2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobList2RowChangeEventHandler JobList2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobList2RowChangeEventHandler JobList2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddJobList2Row(JobList2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList2Row AddJobList2Row(System.Guid JobList2ID, bool IsActive, string Name, string Description) {
                JobList2Row rowJobList2Row = ((JobList2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JobList2ID,
                        IsActive,
                        Name,
                        Description};
                rowJobList2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowJobList2Row);
                return rowJobList2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList2Row FindByJobList2ID(System.Guid JobList2ID) {
                return ((JobList2Row)(this.Rows.Find(new object[] {
                            JobList2ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                JobList2DataTable cln = ((JobList2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new JobList2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnJobList2ID = base.Columns["JobList2ID"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnName = base.Columns["Name"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnJobList2ID = new global::System.Data.DataColumn("JobList2ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobList2ID);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnJobList2ID}, true));
                this.columnJobList2ID.AllowDBNull = false;
                this.columnJobList2ID.Unique = true;
                this.columnIsActive.AllowDBNull = false;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
                this.columnDescription.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList2Row NewJobList2Row() {
                return ((JobList2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new JobList2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(JobList2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JobList2RowChanged != null)) {
                    this.JobList2RowChanged(this, new JobList2RowChangeEvent(((JobList2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JobList2RowChanging != null)) {
                    this.JobList2RowChanging(this, new JobList2RowChangeEvent(((JobList2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JobList2RowDeleted != null)) {
                    this.JobList2RowDeleted(this, new JobList2RowChangeEvent(((JobList2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JobList2RowDeleting != null)) {
                    this.JobList2RowDeleting(this, new JobList2RowChangeEvent(((JobList2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveJobList2Row(JobList2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsQuantify ds = new DsQuantify();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JobList2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ManufacturerDataTable : global::System.Data.TypedTableBase<ManufacturerRow> {
            
            private global::System.Data.DataColumn columnManufacturerID;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ManufacturerDataTable() {
                this.TableName = "Manufacturer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ManufacturerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ManufacturerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManufacturerIDColumn {
                get {
                    return this.columnManufacturerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ManufacturerRow this[int index] {
                get {
                    return ((ManufacturerRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ManufacturerRowChangeEventHandler ManufacturerRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ManufacturerRowChangeEventHandler ManufacturerRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ManufacturerRowChangeEventHandler ManufacturerRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ManufacturerRowChangeEventHandler ManufacturerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddManufacturerRow(ManufacturerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ManufacturerRow AddManufacturerRow(System.Guid ManufacturerID, bool IsActive, string Name, string Description) {
                ManufacturerRow rowManufacturerRow = ((ManufacturerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ManufacturerID,
                        IsActive,
                        Name,
                        Description};
                rowManufacturerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowManufacturerRow);
                return rowManufacturerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ManufacturerRow FindByManufacturerID(System.Guid ManufacturerID) {
                return ((ManufacturerRow)(this.Rows.Find(new object[] {
                            ManufacturerID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ManufacturerDataTable cln = ((ManufacturerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ManufacturerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnManufacturerID = base.Columns["ManufacturerID"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnName = base.Columns["Name"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnManufacturerID = new global::System.Data.DataColumn("ManufacturerID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturerID);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnManufacturerID}, true));
                this.columnManufacturerID.AllowDBNull = false;
                this.columnManufacturerID.Unique = true;
                this.columnIsActive.AllowDBNull = false;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
                this.columnDescription.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ManufacturerRow NewManufacturerRow() {
                return ((ManufacturerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ManufacturerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ManufacturerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ManufacturerRowChanged != null)) {
                    this.ManufacturerRowChanged(this, new ManufacturerRowChangeEvent(((ManufacturerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ManufacturerRowChanging != null)) {
                    this.ManufacturerRowChanging(this, new ManufacturerRowChangeEvent(((ManufacturerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ManufacturerRowDeleted != null)) {
                    this.ManufacturerRowDeleted(this, new ManufacturerRowChangeEvent(((ManufacturerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ManufacturerRowDeleting != null)) {
                    this.ManufacturerRowDeleting(this, new ManufacturerRowChangeEvent(((ManufacturerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveManufacturerRow(ManufacturerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsQuantify ds = new DsQuantify();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ManufacturerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockedProductExtensionDataTable : global::System.Data.TypedTableBase<StockedProductExtensionRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnShipmentID;
            
            private global::System.Data.DataColumn columnJobsiteID;
            
            private global::System.Data.DataColumn columnSerialNumberID;
            
            private global::System.Data.DataColumn columnBillingTransactionID;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnExtensionType;
            
            private global::System.Data.DataColumn columnExtensionStatus;
            
            private global::System.Data.DataColumn columnOutOfServiceStatus;
            
            private global::System.Data.DataColumn columnStockingLocationID;
            
            private global::System.Data.DataColumn columnBaseProductID;
            
            private global::System.Data.DataColumn columnArchivedDate;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnVersionStamp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductExtensionDataTable() {
                this.TableName = "StockedProductExtension";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StockedProductExtensionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StockedProductExtensionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShipmentIDColumn {
                get {
                    return this.columnShipmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobsiteIDColumn {
                get {
                    return this.columnJobsiteID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SerialNumberIDColumn {
                get {
                    return this.columnSerialNumberID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BillingTransactionIDColumn {
                get {
                    return this.columnBillingTransactionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtensionTypeColumn {
                get {
                    return this.columnExtensionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtensionStatusColumn {
                get {
                    return this.columnExtensionStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutOfServiceStatusColumn {
                get {
                    return this.columnOutOfServiceStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockingLocationIDColumn {
                get {
                    return this.columnStockingLocationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseProductIDColumn {
                get {
                    return this.columnBaseProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArchivedDateColumn {
                get {
                    return this.columnArchivedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionStampColumn {
                get {
                    return this.columnVersionStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductExtensionRow this[int index] {
                get {
                    return ((StockedProductExtensionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockedProductExtensionRowChangeEventHandler StockedProductExtensionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockedProductExtensionRowChangeEventHandler StockedProductExtensionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockedProductExtensionRowChangeEventHandler StockedProductExtensionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockedProductExtensionRowChangeEventHandler StockedProductExtensionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStockedProductExtensionRow(StockedProductExtensionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductExtensionRow AddStockedProductExtensionRow(System.Guid ID, System.Guid ShipmentID, StockingLocationRow parentStockingLocationRowByFK_StockedProductExtension_JobSiteID, System.Guid SerialNumberID, System.Guid BillingTransactionID, double Quantity, string Notes, short ExtensionType, short ExtensionStatus, short OutOfServiceStatus, StockingLocationRow parentStockingLocationRowByFK_StockedProductExtension_StockingLocationID, ProductRow parentProductRowByFK_StockedProductExtension_BaseProductID, System.DateTime ArchivedDate, System.DateTime CreatedDate, byte[] VersionStamp) {
                StockedProductExtensionRow rowStockedProductExtensionRow = ((StockedProductExtensionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        ShipmentID,
                        null,
                        SerialNumberID,
                        BillingTransactionID,
                        Quantity,
                        Notes,
                        ExtensionType,
                        ExtensionStatus,
                        OutOfServiceStatus,
                        null,
                        null,
                        ArchivedDate,
                        CreatedDate,
                        VersionStamp};
                if ((parentStockingLocationRowByFK_StockedProductExtension_JobSiteID != null)) {
                    columnValuesArray[2] = parentStockingLocationRowByFK_StockedProductExtension_JobSiteID[0];
                }
                if ((parentStockingLocationRowByFK_StockedProductExtension_StockingLocationID != null)) {
                    columnValuesArray[10] = parentStockingLocationRowByFK_StockedProductExtension_StockingLocationID[0];
                }
                if ((parentProductRowByFK_StockedProductExtension_BaseProductID != null)) {
                    columnValuesArray[11] = parentProductRowByFK_StockedProductExtension_BaseProductID[0];
                }
                rowStockedProductExtensionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockedProductExtensionRow);
                return rowStockedProductExtensionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductExtensionRow FindByID(System.Guid ID) {
                return ((StockedProductExtensionRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StockedProductExtensionDataTable cln = ((StockedProductExtensionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockedProductExtensionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnShipmentID = base.Columns["ShipmentID"];
                this.columnJobsiteID = base.Columns["JobsiteID"];
                this.columnSerialNumberID = base.Columns["SerialNumberID"];
                this.columnBillingTransactionID = base.Columns["BillingTransactionID"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnNotes = base.Columns["Notes"];
                this.columnExtensionType = base.Columns["ExtensionType"];
                this.columnExtensionStatus = base.Columns["ExtensionStatus"];
                this.columnOutOfServiceStatus = base.Columns["OutOfServiceStatus"];
                this.columnStockingLocationID = base.Columns["StockingLocationID"];
                this.columnBaseProductID = base.Columns["BaseProductID"];
                this.columnArchivedDate = base.Columns["ArchivedDate"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnVersionStamp = base.Columns["VersionStamp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnShipmentID = new global::System.Data.DataColumn("ShipmentID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentID);
                this.columnJobsiteID = new global::System.Data.DataColumn("JobsiteID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobsiteID);
                this.columnSerialNumberID = new global::System.Data.DataColumn("SerialNumberID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNumberID);
                this.columnBillingTransactionID = new global::System.Data.DataColumn("BillingTransactionID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingTransactionID);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnExtensionType = new global::System.Data.DataColumn("ExtensionType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtensionType);
                this.columnExtensionStatus = new global::System.Data.DataColumn("ExtensionStatus", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtensionStatus);
                this.columnOutOfServiceStatus = new global::System.Data.DataColumn("OutOfServiceStatus", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutOfServiceStatus);
                this.columnStockingLocationID = new global::System.Data.DataColumn("StockingLocationID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockingLocationID);
                this.columnBaseProductID = new global::System.Data.DataColumn("BaseProductID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseProductID);
                this.columnArchivedDate = new global::System.Data.DataColumn("ArchivedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArchivedDate);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnVersionStamp = new global::System.Data.DataColumn("VersionStamp", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersionStamp);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnNotes.MaxLength = 2000;
                this.columnExtensionStatus.AllowDBNull = false;
                this.columnOutOfServiceStatus.AllowDBNull = false;
                this.columnVersionStamp.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductExtensionRow NewStockedProductExtensionRow() {
                return ((StockedProductExtensionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockedProductExtensionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StockedProductExtensionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockedProductExtensionRowChanged != null)) {
                    this.StockedProductExtensionRowChanged(this, new StockedProductExtensionRowChangeEvent(((StockedProductExtensionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockedProductExtensionRowChanging != null)) {
                    this.StockedProductExtensionRowChanging(this, new StockedProductExtensionRowChangeEvent(((StockedProductExtensionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockedProductExtensionRowDeleted != null)) {
                    this.StockedProductExtensionRowDeleted(this, new StockedProductExtensionRowChangeEvent(((StockedProductExtensionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockedProductExtensionRowDeleting != null)) {
                    this.StockedProductExtensionRowDeleting(this, new StockedProductExtensionRowChangeEvent(((StockedProductExtensionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStockedProductExtensionRow(StockedProductExtensionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsQuantify ds = new DsQuantify();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockedProductExtensionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockingLocationRentalPeriodAdjustmentDataTable : global::System.Data.TypedTableBase<StockingLocationRentalPeriodAdjustmentRow> {
            
            private global::System.Data.DataColumn columnStockingLocationRentalPeriodAdjustmentID;
            
            private global::System.Data.DataColumn columnStockingLocationID;
            
            private global::System.Data.DataColumn columnRentalPeriodAdjustmentID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRentalPeriodAdjustmentDataTable() {
                this.TableName = "StockingLocationRentalPeriodAdjustment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StockingLocationRentalPeriodAdjustmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StockingLocationRentalPeriodAdjustmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockingLocationRentalPeriodAdjustmentIDColumn {
                get {
                    return this.columnStockingLocationRentalPeriodAdjustmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockingLocationIDColumn {
                get {
                    return this.columnStockingLocationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RentalPeriodAdjustmentIDColumn {
                get {
                    return this.columnRentalPeriodAdjustmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRentalPeriodAdjustmentRow this[int index] {
                get {
                    return ((StockingLocationRentalPeriodAdjustmentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockingLocationRentalPeriodAdjustmentRowChangeEventHandler StockingLocationRentalPeriodAdjustmentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockingLocationRentalPeriodAdjustmentRowChangeEventHandler StockingLocationRentalPeriodAdjustmentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockingLocationRentalPeriodAdjustmentRowChangeEventHandler StockingLocationRentalPeriodAdjustmentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockingLocationRentalPeriodAdjustmentRowChangeEventHandler StockingLocationRentalPeriodAdjustmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStockingLocationRentalPeriodAdjustmentRow(StockingLocationRentalPeriodAdjustmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRentalPeriodAdjustmentRow AddStockingLocationRentalPeriodAdjustmentRow(System.Guid StockingLocationRentalPeriodAdjustmentID, StockingLocationRow parentStockingLocationRowByFK_StockingLocationRentalPeriodAdjustment__StockingLocationID, System.Guid RentalPeriodAdjustmentID) {
                StockingLocationRentalPeriodAdjustmentRow rowStockingLocationRentalPeriodAdjustmentRow = ((StockingLocationRentalPeriodAdjustmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StockingLocationRentalPeriodAdjustmentID,
                        null,
                        RentalPeriodAdjustmentID};
                if ((parentStockingLocationRowByFK_StockingLocationRentalPeriodAdjustment__StockingLocationID != null)) {
                    columnValuesArray[1] = parentStockingLocationRowByFK_StockingLocationRentalPeriodAdjustment__StockingLocationID[0];
                }
                rowStockingLocationRentalPeriodAdjustmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockingLocationRentalPeriodAdjustmentRow);
                return rowStockingLocationRentalPeriodAdjustmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRentalPeriodAdjustmentRow FindByStockingLocationRentalPeriodAdjustmentID(System.Guid StockingLocationRentalPeriodAdjustmentID) {
                return ((StockingLocationRentalPeriodAdjustmentRow)(this.Rows.Find(new object[] {
                            StockingLocationRentalPeriodAdjustmentID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StockingLocationRentalPeriodAdjustmentDataTable cln = ((StockingLocationRentalPeriodAdjustmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockingLocationRentalPeriodAdjustmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStockingLocationRentalPeriodAdjustmentID = base.Columns["StockingLocationRentalPeriodAdjustmentID"];
                this.columnStockingLocationID = base.Columns["StockingLocationID"];
                this.columnRentalPeriodAdjustmentID = base.Columns["RentalPeriodAdjustmentID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStockingLocationRentalPeriodAdjustmentID = new global::System.Data.DataColumn("StockingLocationRentalPeriodAdjustmentID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockingLocationRentalPeriodAdjustmentID);
                this.columnStockingLocationID = new global::System.Data.DataColumn("StockingLocationID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockingLocationID);
                this.columnRentalPeriodAdjustmentID = new global::System.Data.DataColumn("RentalPeriodAdjustmentID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRentalPeriodAdjustmentID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStockingLocationRentalPeriodAdjustmentID}, true));
                this.columnStockingLocationRentalPeriodAdjustmentID.AllowDBNull = false;
                this.columnStockingLocationRentalPeriodAdjustmentID.Unique = true;
                this.columnStockingLocationID.AllowDBNull = false;
                this.columnRentalPeriodAdjustmentID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRentalPeriodAdjustmentRow NewStockingLocationRentalPeriodAdjustmentRow() {
                return ((StockingLocationRentalPeriodAdjustmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockingLocationRentalPeriodAdjustmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StockingLocationRentalPeriodAdjustmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockingLocationRentalPeriodAdjustmentRowChanged != null)) {
                    this.StockingLocationRentalPeriodAdjustmentRowChanged(this, new StockingLocationRentalPeriodAdjustmentRowChangeEvent(((StockingLocationRentalPeriodAdjustmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockingLocationRentalPeriodAdjustmentRowChanging != null)) {
                    this.StockingLocationRentalPeriodAdjustmentRowChanging(this, new StockingLocationRentalPeriodAdjustmentRowChangeEvent(((StockingLocationRentalPeriodAdjustmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockingLocationRentalPeriodAdjustmentRowDeleted != null)) {
                    this.StockingLocationRentalPeriodAdjustmentRowDeleted(this, new StockingLocationRentalPeriodAdjustmentRowChangeEvent(((StockingLocationRentalPeriodAdjustmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockingLocationRentalPeriodAdjustmentRowDeleting != null)) {
                    this.StockingLocationRentalPeriodAdjustmentRowDeleting(this, new StockingLocationRentalPeriodAdjustmentRowChangeEvent(((StockingLocationRentalPeriodAdjustmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStockingLocationRentalPeriodAdjustmentRow(StockingLocationRentalPeriodAdjustmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsQuantify ds = new DsQuantify();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockingLocationRentalPeriodAdjustmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockingLocationStatusDataTable : global::System.Data.TypedTableBase<StockingLocationStatusRow> {
            
            private global::System.Data.DataColumn columnStockingLocationStatusID;
            
            private global::System.Data.DataColumn columnRelatedID;
            
            private global::System.Data.DataColumn columnTypeID;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationStatusDataTable() {
                this.TableName = "StockingLocationStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StockingLocationStatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StockingLocationStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockingLocationStatusIDColumn {
                get {
                    return this.columnStockingLocationStatusID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelatedIDColumn {
                get {
                    return this.columnRelatedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeIDColumn {
                get {
                    return this.columnTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationStatusRow this[int index] {
                get {
                    return ((StockingLocationStatusRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockingLocationStatusRowChangeEventHandler StockingLocationStatusRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockingLocationStatusRowChangeEventHandler StockingLocationStatusRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockingLocationStatusRowChangeEventHandler StockingLocationStatusRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockingLocationStatusRowChangeEventHandler StockingLocationStatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStockingLocationStatusRow(StockingLocationStatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationStatusRow AddStockingLocationStatusRow(System.Guid StockingLocationStatusID, StockingLocationRow parentStockingLocationRowByfk_StockingLocationStatus_rid, int TypeID, bool IsActive, string Name, string Description) {
                StockingLocationStatusRow rowStockingLocationStatusRow = ((StockingLocationStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StockingLocationStatusID,
                        null,
                        TypeID,
                        IsActive,
                        Name,
                        Description};
                if ((parentStockingLocationRowByfk_StockingLocationStatus_rid != null)) {
                    columnValuesArray[1] = parentStockingLocationRowByfk_StockingLocationStatus_rid[0];
                }
                rowStockingLocationStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockingLocationStatusRow);
                return rowStockingLocationStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationStatusRow FindByStockingLocationStatusID(System.Guid StockingLocationStatusID) {
                return ((StockingLocationStatusRow)(this.Rows.Find(new object[] {
                            StockingLocationStatusID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StockingLocationStatusDataTable cln = ((StockingLocationStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockingLocationStatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStockingLocationStatusID = base.Columns["StockingLocationStatusID"];
                this.columnRelatedID = base.Columns["RelatedID"];
                this.columnTypeID = base.Columns["TypeID"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnName = base.Columns["Name"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStockingLocationStatusID = new global::System.Data.DataColumn("StockingLocationStatusID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockingLocationStatusID);
                this.columnRelatedID = new global::System.Data.DataColumn("RelatedID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelatedID);
                this.columnTypeID = new global::System.Data.DataColumn("TypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeID);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStockingLocationStatusID}, true));
                this.columnStockingLocationStatusID.AllowDBNull = false;
                this.columnStockingLocationStatusID.Unique = true;
                this.columnRelatedID.AllowDBNull = false;
                this.columnTypeID.AllowDBNull = false;
                this.columnIsActive.AllowDBNull = false;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 254;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationStatusRow NewStockingLocationStatusRow() {
                return ((StockingLocationStatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockingLocationStatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StockingLocationStatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockingLocationStatusRowChanged != null)) {
                    this.StockingLocationStatusRowChanged(this, new StockingLocationStatusRowChangeEvent(((StockingLocationStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockingLocationStatusRowChanging != null)) {
                    this.StockingLocationStatusRowChanging(this, new StockingLocationStatusRowChangeEvent(((StockingLocationStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockingLocationStatusRowDeleted != null)) {
                    this.StockingLocationStatusRowDeleted(this, new StockingLocationStatusRowChangeEvent(((StockingLocationStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockingLocationStatusRowDeleting != null)) {
                    this.StockingLocationStatusRowDeleting(this, new StockingLocationStatusRowChangeEvent(((StockingLocationStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStockingLocationStatusRow(StockingLocationStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsQuantify ds = new DsQuantify();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockingLocationStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockedProductDataTable : global::System.Data.TypedTableBase<StockedProductRow> {
            
            private global::System.Data.DataColumn columnStockedProductID;
            
            private global::System.Data.DataColumn columnStockingLocationID;
            
            private global::System.Data.DataColumn columnBaseProductID;
            
            private global::System.Data.DataColumn columnQForRent;
            
            private global::System.Data.DataColumn columnQInTransit;
            
            private global::System.Data.DataColumn columnQDiscrepancy;
            
            private global::System.Data.DataColumn columnQNew;
            
            private global::System.Data.DataColumn columnQOnRent;
            
            private global::System.Data.DataColumn columnQtyReserved;
            
            private global::System.Data.DataColumn columnOwnerTradingPartnerID;
            
            private global::System.Data.DataColumn columnQtyToBeInspected;
            
            private global::System.Data.DataColumn columnQOnOrder;
            
            private global::System.Data.DataColumn columnQBackOrdered;
            
            private global::System.Data.DataColumn columnQOnOrderNew;
            
            private global::System.Data.DataColumn columnQBackOrderedNew;
            
            private global::System.Data.DataColumn columnNextROPNotificationDate;
            
            private global::System.Data.DataColumn columnNextReRentNotificationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductDataTable() {
                this.TableName = "StockedProduct";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StockedProductDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StockedProductDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockedProductIDColumn {
                get {
                    return this.columnStockedProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockingLocationIDColumn {
                get {
                    return this.columnStockingLocationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseProductIDColumn {
                get {
                    return this.columnBaseProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QForRentColumn {
                get {
                    return this.columnQForRent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QInTransitColumn {
                get {
                    return this.columnQInTransit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QDiscrepancyColumn {
                get {
                    return this.columnQDiscrepancy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QNewColumn {
                get {
                    return this.columnQNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QOnRentColumn {
                get {
                    return this.columnQOnRent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QtyReservedColumn {
                get {
                    return this.columnQtyReserved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OwnerTradingPartnerIDColumn {
                get {
                    return this.columnOwnerTradingPartnerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QtyToBeInspectedColumn {
                get {
                    return this.columnQtyToBeInspected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QOnOrderColumn {
                get {
                    return this.columnQOnOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QBackOrderedColumn {
                get {
                    return this.columnQBackOrdered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QOnOrderNewColumn {
                get {
                    return this.columnQOnOrderNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QBackOrderedNewColumn {
                get {
                    return this.columnQBackOrderedNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NextROPNotificationDateColumn {
                get {
                    return this.columnNextROPNotificationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NextReRentNotificationDateColumn {
                get {
                    return this.columnNextReRentNotificationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductRow this[int index] {
                get {
                    return ((StockedProductRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockedProductRowChangeEventHandler StockedProductRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockedProductRowChangeEventHandler StockedProductRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockedProductRowChangeEventHandler StockedProductRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StockedProductRowChangeEventHandler StockedProductRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStockedProductRow(StockedProductRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductRow AddStockedProductRow(
                        System.Guid StockedProductID, 
                        System.Guid StockingLocationID, 
                        System.Guid BaseProductID, 
                        double QForRent, 
                        double QInTransit, 
                        double QDiscrepancy, 
                        double QNew, 
                        double QOnRent, 
                        double QtyReserved, 
                        System.Guid OwnerTradingPartnerID, 
                        double QtyToBeInspected, 
                        double QOnOrder, 
                        double QBackOrdered, 
                        double QOnOrderNew, 
                        double QBackOrderedNew, 
                        System.DateTime NextROPNotificationDate, 
                        System.DateTime NextReRentNotificationDate) {
                StockedProductRow rowStockedProductRow = ((StockedProductRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StockedProductID,
                        StockingLocationID,
                        BaseProductID,
                        QForRent,
                        QInTransit,
                        QDiscrepancy,
                        QNew,
                        QOnRent,
                        QtyReserved,
                        OwnerTradingPartnerID,
                        QtyToBeInspected,
                        QOnOrder,
                        QBackOrdered,
                        QOnOrderNew,
                        QBackOrderedNew,
                        NextROPNotificationDate,
                        NextReRentNotificationDate};
                rowStockedProductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockedProductRow);
                return rowStockedProductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StockedProductDataTable cln = ((StockedProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockedProductDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStockedProductID = base.Columns["StockedProductID"];
                this.columnStockingLocationID = base.Columns["StockingLocationID"];
                this.columnBaseProductID = base.Columns["BaseProductID"];
                this.columnQForRent = base.Columns["QForRent"];
                this.columnQInTransit = base.Columns["QInTransit"];
                this.columnQDiscrepancy = base.Columns["QDiscrepancy"];
                this.columnQNew = base.Columns["QNew"];
                this.columnQOnRent = base.Columns["QOnRent"];
                this.columnQtyReserved = base.Columns["QtyReserved"];
                this.columnOwnerTradingPartnerID = base.Columns["OwnerTradingPartnerID"];
                this.columnQtyToBeInspected = base.Columns["QtyToBeInspected"];
                this.columnQOnOrder = base.Columns["QOnOrder"];
                this.columnQBackOrdered = base.Columns["QBackOrdered"];
                this.columnQOnOrderNew = base.Columns["QOnOrderNew"];
                this.columnQBackOrderedNew = base.Columns["QBackOrderedNew"];
                this.columnNextROPNotificationDate = base.Columns["NextROPNotificationDate"];
                this.columnNextReRentNotificationDate = base.Columns["NextReRentNotificationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStockedProductID = new global::System.Data.DataColumn("StockedProductID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockedProductID);
                this.columnStockingLocationID = new global::System.Data.DataColumn("StockingLocationID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockingLocationID);
                this.columnBaseProductID = new global::System.Data.DataColumn("BaseProductID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseProductID);
                this.columnQForRent = new global::System.Data.DataColumn("QForRent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQForRent);
                this.columnQInTransit = new global::System.Data.DataColumn("QInTransit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQInTransit);
                this.columnQDiscrepancy = new global::System.Data.DataColumn("QDiscrepancy", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQDiscrepancy);
                this.columnQNew = new global::System.Data.DataColumn("QNew", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQNew);
                this.columnQOnRent = new global::System.Data.DataColumn("QOnRent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQOnRent);
                this.columnQtyReserved = new global::System.Data.DataColumn("QtyReserved", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyReserved);
                this.columnOwnerTradingPartnerID = new global::System.Data.DataColumn("OwnerTradingPartnerID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerTradingPartnerID);
                this.columnQtyToBeInspected = new global::System.Data.DataColumn("QtyToBeInspected", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyToBeInspected);
                this.columnQOnOrder = new global::System.Data.DataColumn("QOnOrder", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQOnOrder);
                this.columnQBackOrdered = new global::System.Data.DataColumn("QBackOrdered", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQBackOrdered);
                this.columnQOnOrderNew = new global::System.Data.DataColumn("QOnOrderNew", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQOnOrderNew);
                this.columnQBackOrderedNew = new global::System.Data.DataColumn("QBackOrderedNew", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQBackOrderedNew);
                this.columnNextROPNotificationDate = new global::System.Data.DataColumn("NextROPNotificationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextROPNotificationDate);
                this.columnNextReRentNotificationDate = new global::System.Data.DataColumn("NextReRentNotificationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextReRentNotificationDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStockingLocationID,
                                this.columnBaseProductID,
                                this.columnOwnerTradingPartnerID}, false));
                this.columnStockedProductID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductRow NewStockedProductRow() {
                return ((StockedProductRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockedProductRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StockedProductRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockedProductRowChanged != null)) {
                    this.StockedProductRowChanged(this, new StockedProductRowChangeEvent(((StockedProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockedProductRowChanging != null)) {
                    this.StockedProductRowChanging(this, new StockedProductRowChangeEvent(((StockedProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockedProductRowDeleted != null)) {
                    this.StockedProductRowDeleted(this, new StockedProductRowChangeEvent(((StockedProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockedProductRowDeleting != null)) {
                    this.StockedProductRowDeleting(this, new StockedProductRowChangeEvent(((StockedProductRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStockedProductRow(StockedProductRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsQuantify ds = new DsQuantify();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockedProductDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProductRow : global::System.Data.DataRow {
            
            private ProductDataTable tableProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProduct = ((ProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ProductID {
                get {
                    return ((global::System.Guid)(this[this.tableProduct.ProductIDColumn]));
                }
                set {
                    this[this.tableProduct.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PartNumber {
                get {
                    try {
                        return ((string)(this[this.tableProduct.PartNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartNumber\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.PartNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableProduct.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ModelNumber {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ModelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModelNumber\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ModelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UPCCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.UPCCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPCCode\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.UPCCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Weight {
                get {
                    try {
                        return ((double)(this[this.tableProduct.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Length {
                get {
                    try {
                        return ((double)(this[this.tableProduct.LengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Length\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.LengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Width {
                get {
                    try {
                        return ((double)(this[this.tableProduct.WidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Width\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.WidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Height {
                get {
                    try {
                        return ((double)(this[this.tableProduct.HeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Height\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.HeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UtilizationGoal {
                get {
                    try {
                        return ((double)(this[this.tableProduct.UtilizationGoalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilizationGoal\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.UtilizationGoalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ProductType {
                get {
                    return ((short)(this[this.tableProduct.ProductTypeColumn]));
                }
                set {
                    this[this.tableProduct.ProductTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DefaultList {
                get {
                    try {
                        return ((decimal)(this[this.tableProduct.DefaultListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultList\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid DefaultRentCalculatorID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProduct.DefaultRentCalculatorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultRentCalculatorID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultRentCalculatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid DefaultSellCalculatorID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProduct.DefaultSellCalculatorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultSellCalculatorID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultSellCalculatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DefaultRentRate {
                get {
                    try {
                        return ((decimal)(this[this.tableProduct.DefaultRentRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultRentRate\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultRentRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DefaultMinimumDayOverride {
                get {
                    try {
                        return ((short)(this[this.tableProduct.DefaultMinimumDayOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultMinimumDayOverride\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultMinimumDayOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DefaultSell {
                get {
                    try {
                        return ((decimal)(this[this.tableProduct.DefaultSellColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultSell\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultSellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DefaultReplacementCost {
                get {
                    try {
                        return ((decimal)(this[this.tableProduct.DefaultReplacementCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultReplacementCost\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultReplacementCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ManufacturerID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProduct.ManufacturerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManufacturerID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ManufacturerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ManufacturerNumber {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ManufacturerNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManufacturerNumber\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ManufacturerNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid DefaultFactorID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProduct.DefaultFactorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultFactorID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultFactorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ProductCategoryID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProduct.ProductCategoryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCategoryID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ProductCategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid UomID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableProduct.UomIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UomID\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.UomIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DefaultAverageCost {
                get {
                    try {
                        return ((decimal)(this[this.tableProduct.DefaultAverageCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultAverageCost\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultAverageCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DefaultCost {
                get {
                    try {
                        return ((decimal)(this[this.tableProduct.DefaultCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultCost\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DefaultLastCost {
                get {
                    try {
                        return ((decimal)(this[this.tableProduct.DefaultLastCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultLastCost\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultLastCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DefaultStandardCost {
                get {
                    try {
                        return ((decimal)(this[this.tableProduct.DefaultStandardCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultStandardCost\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultStandardCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DefaultROP {
                get {
                    try {
                        return ((double)(this[this.tableProduct.DefaultROPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultROP\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultROPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DefaultROQ {
                get {
                    try {
                        return ((double)(this[this.tableProduct.DefaultROQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultROQ\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DefaultROQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Custom1 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Custom1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Custom1\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Custom1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Custom2 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Custom2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Custom2\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Custom2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Custom3 {
                get {
                    try {
                        return ((string)(this[this.tableProduct.Custom3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Custom3\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.Custom3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableProduct.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DefaultInspection {
                get {
                    return ((bool)(this[this.tableProduct.DefaultInspectionColumn]));
                }
                set {
                    this[this.tableProduct.DefaultInspectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableProduct.RowVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'Product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.RowVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ManufacturerRow ManufacturerRow {
                get {
                    return ((ManufacturerRow)(this.GetParentRow(this.Table.ParentRelations["FK_Product_ManufacturerID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Product_ManufacturerID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPartNumberNull() {
                return this.IsNull(this.tableProduct.PartNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPartNumberNull() {
                this[this.tableProduct.PartNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableProduct.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableProduct.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModelNumberNull() {
                return this.IsNull(this.tableProduct.ModelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModelNumberNull() {
                this[this.tableProduct.ModelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUPCCodeNull() {
                return this.IsNull(this.tableProduct.UPCCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUPCCodeNull() {
                this[this.tableProduct.UPCCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWeightNull() {
                return this.IsNull(this.tableProduct.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWeightNull() {
                this[this.tableProduct.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLengthNull() {
                return this.IsNull(this.tableProduct.LengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLengthNull() {
                this[this.tableProduct.LengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWidthNull() {
                return this.IsNull(this.tableProduct.WidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWidthNull() {
                this[this.tableProduct.WidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeightNull() {
                return this.IsNull(this.tableProduct.HeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeightNull() {
                this[this.tableProduct.HeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUtilizationGoalNull() {
                return this.IsNull(this.tableProduct.UtilizationGoalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUtilizationGoalNull() {
                this[this.tableProduct.UtilizationGoalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultListNull() {
                return this.IsNull(this.tableProduct.DefaultListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultListNull() {
                this[this.tableProduct.DefaultListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultRentCalculatorIDNull() {
                return this.IsNull(this.tableProduct.DefaultRentCalculatorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultRentCalculatorIDNull() {
                this[this.tableProduct.DefaultRentCalculatorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultSellCalculatorIDNull() {
                return this.IsNull(this.tableProduct.DefaultSellCalculatorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultSellCalculatorIDNull() {
                this[this.tableProduct.DefaultSellCalculatorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultRentRateNull() {
                return this.IsNull(this.tableProduct.DefaultRentRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultRentRateNull() {
                this[this.tableProduct.DefaultRentRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultMinimumDayOverrideNull() {
                return this.IsNull(this.tableProduct.DefaultMinimumDayOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultMinimumDayOverrideNull() {
                this[this.tableProduct.DefaultMinimumDayOverrideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultSellNull() {
                return this.IsNull(this.tableProduct.DefaultSellColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultSellNull() {
                this[this.tableProduct.DefaultSellColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultReplacementCostNull() {
                return this.IsNull(this.tableProduct.DefaultReplacementCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultReplacementCostNull() {
                this[this.tableProduct.DefaultReplacementCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManufacturerIDNull() {
                return this.IsNull(this.tableProduct.ManufacturerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManufacturerIDNull() {
                this[this.tableProduct.ManufacturerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManufacturerNumberNull() {
                return this.IsNull(this.tableProduct.ManufacturerNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManufacturerNumberNull() {
                this[this.tableProduct.ManufacturerNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultFactorIDNull() {
                return this.IsNull(this.tableProduct.DefaultFactorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultFactorIDNull() {
                this[this.tableProduct.DefaultFactorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductCategoryIDNull() {
                return this.IsNull(this.tableProduct.ProductCategoryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProductCategoryIDNull() {
                this[this.tableProduct.ProductCategoryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUomIDNull() {
                return this.IsNull(this.tableProduct.UomIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUomIDNull() {
                this[this.tableProduct.UomIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultAverageCostNull() {
                return this.IsNull(this.tableProduct.DefaultAverageCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultAverageCostNull() {
                this[this.tableProduct.DefaultAverageCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultCostNull() {
                return this.IsNull(this.tableProduct.DefaultCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultCostNull() {
                this[this.tableProduct.DefaultCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultLastCostNull() {
                return this.IsNull(this.tableProduct.DefaultLastCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultLastCostNull() {
                this[this.tableProduct.DefaultLastCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultStandardCostNull() {
                return this.IsNull(this.tableProduct.DefaultStandardCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultStandardCostNull() {
                this[this.tableProduct.DefaultStandardCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultROPNull() {
                return this.IsNull(this.tableProduct.DefaultROPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultROPNull() {
                this[this.tableProduct.DefaultROPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultROQNull() {
                return this.IsNull(this.tableProduct.DefaultROQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultROQNull() {
                this[this.tableProduct.DefaultROQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustom1Null() {
                return this.IsNull(this.tableProduct.Custom1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustom1Null() {
                this[this.tableProduct.Custom1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustom2Null() {
                return this.IsNull(this.tableProduct.Custom2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustom2Null() {
                this[this.tableProduct.Custom2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustom3Null() {
                return this.IsNull(this.tableProduct.Custom3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustom3Null() {
                this[this.tableProduct.Custom3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull() {
                return this.IsNull(this.tableProduct.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentNull() {
                this[this.tableProduct.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableProduct.RowVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowVersionNull() {
                this[this.tableProduct.RowVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductExtensionRow[] GetStockedProductExtensionRows() {
                if ((this.Table.ChildRelations["FK_StockedProductExtension_BaseProductID"] == null)) {
                    return new StockedProductExtensionRow[0];
                }
                else {
                    return ((StockedProductExtensionRow[])(base.GetChildRows(this.Table.ChildRelations["FK_StockedProductExtension_BaseProductID"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StockingLocationRow : global::System.Data.DataRow {
            
            private StockingLocationDataTable tableStockingLocation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StockingLocationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockingLocation = ((StockingLocationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StockingLocationID {
                get {
                    return ((global::System.Guid)(this[this.tableStockingLocation.StockingLocationIDColumn]));
                }
                set {
                    this[this.tableStockingLocation.StockingLocationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Number {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Number\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ReceiveTransferCount {
                get {
                    return ((bool)(this[this.tableStockingLocation.ReceiveTransferCountColumn]));
                }
                set {
                    this[this.tableStockingLocation.ReceiveTransferCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ReceiveReturnCount {
                get {
                    return ((bool)(this[this.tableStockingLocation.ReceiveReturnCountColumn]));
                }
                set {
                    this[this.tableStockingLocation.ReceiveReturnCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ReceiveDeliveryCount {
                get {
                    return ((bool)(this[this.tableStockingLocation.ReceiveDeliveryCountColumn]));
                }
                set {
                    this[this.tableStockingLocation.ReceiveDeliveryCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RequireRequestProducts {
                get {
                    return ((bool)(this[this.tableStockingLocation.RequireRequestProductsColumn]));
                }
                set {
                    this[this.tableStockingLocation.RequireRequestProductsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TrackRequests {
                get {
                    return ((bool)(this[this.tableStockingLocation.TrackRequestsColumn]));
                }
                set {
                    this[this.tableStockingLocation.TrackRequestsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CreateNewFromShortage {
                get {
                    return ((bool)(this[this.tableStockingLocation.CreateNewFromShortageColumn]));
                }
                set {
                    this[this.tableStockingLocation.CreateNewFromShortageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool HideQuantities {
                get {
                    return ((bool)(this[this.tableStockingLocation.HideQuantitiesColumn]));
                }
                set {
                    this[this.tableStockingLocation.HideQuantitiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UtilizationGoal {
                get {
                    try {
                        return ((double)(this[this.tableStockingLocation.UtilizationGoalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UtilizationGoal\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.UtilizationGoalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string List1Label {
                get {
                    return ((string)(this[this.tableStockingLocation.List1LabelColumn]));
                }
                set {
                    this[this.tableStockingLocation.List1LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string List2Label {
                get {
                    return ((string)(this[this.tableStockingLocation.List2LabelColumn]));
                }
                set {
                    this[this.tableStockingLocation.List2LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string List3Label {
                get {
                    return ((string)(this[this.tableStockingLocation.List3LabelColumn]));
                }
                set {
                    this[this.tableStockingLocation.List3LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ShowList1 {
                get {
                    return ((bool)(this[this.tableStockingLocation.ShowList1Column]));
                }
                set {
                    this[this.tableStockingLocation.ShowList1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ShowList2 {
                get {
                    return ((bool)(this[this.tableStockingLocation.ShowList2Column]));
                }
                set {
                    this[this.tableStockingLocation.ShowList2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ShowList3 {
                get {
                    return ((bool)(this[this.tableStockingLocation.ShowList3Column]));
                }
                set {
                    this[this.tableStockingLocation.ShowList3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBillable {
                get {
                    return ((bool)(this[this.tableStockingLocation.IsBillableColumn]));
                }
                set {
                    this[this.tableStockingLocation.IsBillableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToolCrib {
                get {
                    return ((bool)(this[this.tableStockingLocation.IsToolCribColumn]));
                }
                set {
                    this[this.tableStockingLocation.IsToolCribColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TrackScaffoldTags {
                get {
                    return ((bool)(this[this.tableStockingLocation.TrackScaffoldTagsColumn]));
                }
                set {
                    this[this.tableStockingLocation.TrackScaffoldTagsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DefaultShipmentToBillable {
                get {
                    try {
                        return ((bool)(this[this.tableStockingLocation.DefaultShipmentToBillableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultShipmentToBillable\' in table \'StockingLocation\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.DefaultShipmentToBillableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IncludeInProductHistory {
                get {
                    return ((bool)(this[this.tableStockingLocation.IncludeInProductHistoryColumn]));
                }
                set {
                    this[this.tableStockingLocation.IncludeInProductHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid HistoryRateProfileID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.HistoryRateProfileIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryRateProfileID\' in table \'StockingLocation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.HistoryRateProfileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short InvoiceOption {
                get {
                    return ((short)(this[this.tableStockingLocation.InvoiceOptionColumn]));
                }
                set {
                    this[this.tableStockingLocation.InvoiceOptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid DefaultRateProfileID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.DefaultRateProfileIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultRateProfileID\' in table \'StockingLocation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.DefaultRateProfileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BillingMethod {
                get {
                    try {
                        return ((short)(this[this.tableStockingLocation.BillingMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingMethod\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.BillingMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid BillingUserID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.BillingUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingUserID\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.BillingUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ArrearsBillingCycle {
                get {
                    try {
                        return ((short)(this[this.tableStockingLocation.ArrearsBillingCycleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrearsBillingCycle\' in table \'StockingLocation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ArrearsBillingCycleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short CycleDaysArrears {
                get {
                    try {
                        return ((short)(this[this.tableStockingLocation.CycleDaysArrearsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDaysArrears\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.CycleDaysArrearsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short MinimumDaysFata {
                get {
                    try {
                        return ((short)(this[this.tableStockingLocation.MinimumDaysFataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinimumDaysFata\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.MinimumDaysFataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short CycleDaysAdvanced {
                get {
                    try {
                        return ((short)(this[this.tableStockingLocation.CycleDaysAdvancedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleDaysAdvanced\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.CycleDaysAdvancedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short MinimumDaysAdvanced {
                get {
                    try {
                        return ((short)(this[this.tableStockingLocation.MinimumDaysAdvancedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinimumDaysAdvanced\' in table \'StockingLocation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.MinimumDaysAdvancedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid OrderID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.OrderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderID\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.OrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IncludeUnitPricesOnMinimum {
                get {
                    return ((bool)(this[this.tableStockingLocation.IncludeUnitPricesOnMinimumColumn]));
                }
                set {
                    this[this.tableStockingLocation.IncludeUnitPricesOnMinimumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConsumablesEnabled {
                get {
                    return ((bool)(this[this.tableStockingLocation.ConsumablesEnabledColumn]));
                }
                set {
                    this[this.tableStockingLocation.ConsumablesEnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short MonthlyBillingCycle {
                get {
                    try {
                        return ((short)(this[this.tableStockingLocation.MonthlyBillingCycleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MonthlyBillingCycle\' in table \'StockingLocation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.MonthlyBillingCycleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DayOfMonth {
                get {
                    try {
                        return ((short)(this[this.tableStockingLocation.DayOfMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayOfMonth\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.DayOfMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FirstInvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockingLocation.FirstInvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstInvoiceDate\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.FirstInvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AwcFirstInvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockingLocation.AwcFirstInvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AwcFirstInvoiceDate\' in table \'StockingLocation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.AwcFirstInvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AdvanceIsCycled {
                get {
                    try {
                        return ((bool)(this[this.tableStockingLocation.AdvanceIsCycledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvanceIsCycled\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.AdvanceIsCycledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CycleBeginDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockingLocation.CycleBeginDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleBeginDate\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.CycleBeginDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CycleEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockingLocation.CycleEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleEndDate\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.CycleEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CycleEndDateOverride {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockingLocation.CycleEndDateOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CycleEndDateOverride\' in table \'StockingLocation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.CycleEndDateOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool HideZeroInvoiceItems {
                get {
                    try {
                        return ((bool)(this[this.tableStockingLocation.HideZeroInvoiceItemsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HideZeroInvoiceItems\' in table \'StockingLocation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.HideZeroInvoiceItemsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short GracePeriod {
                get {
                    try {
                        return ((short)(this[this.tableStockingLocation.GracePeriodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GracePeriod\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.GracePeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AwcIssueEarlyReturnCredits {
                get {
                    return ((bool)(this[this.tableStockingLocation.AwcIssueEarlyReturnCreditsColumn]));
                }
                set {
                    this[this.tableStockingLocation.AwcIssueEarlyReturnCreditsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AllowMinimumDayOverride {
                get {
                    return ((bool)(this[this.tableStockingLocation.AllowMinimumDayOverrideColumn]));
                }
                set {
                    this[this.tableStockingLocation.AllowMinimumDayOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RentIsTaxable {
                get {
                    try {
                        return ((bool)(this[this.tableStockingLocation.RentIsTaxableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RentIsTaxable\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.RentIsTaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ConsumablesTaxable {
                get {
                    try {
                        return ((bool)(this[this.tableStockingLocation.ConsumablesTaxableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsumablesTaxable\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ConsumablesTaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DeliveryChargesTaxable {
                get {
                    try {
                        return ((bool)(this[this.tableStockingLocation.DeliveryChargesTaxableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryChargesTaxable\' in table \'StockingLocation\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.DeliveryChargesTaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ContractBillingTaxable {
                get {
                    try {
                        return ((bool)(this[this.tableStockingLocation.ContractBillingTaxableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractBillingTaxable\' in table \'StockingLocation\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ContractBillingTaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ServiceTicketDamageChargeTaxable {
                get {
                    try {
                        return ((bool)(this[this.tableStockingLocation.ServiceTicketDamageChargeTaxableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceTicketDamageChargeTaxable\' in table \'StockingLocatio" +
                                "n\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ServiceTicketDamageChargeTaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid JobTax1ID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.JobTax1IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobTax1ID\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobTax1IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid JobTax2ID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.JobTax2IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobTax2ID\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobTax2IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockingLocation.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime StopDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockingLocation.StopDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StopDate\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.StopDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastDateForRent {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockingLocation.LastDateForRentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastDateForRent\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.LastDateForRentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime JobDate1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockingLocation.JobDate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobDate1\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobDate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime JobDate2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockingLocation.JobDate2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobDate2\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobDate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid JobEmployee1ID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.JobEmployee1IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobEmployee1ID\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobEmployee1IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid JobEmployee2ID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.JobEmployee2IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobEmployee2ID\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobEmployee2IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid JobEmployee3ID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.JobEmployee3IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobEmployee3ID\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobEmployee3IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid JobCustomerContact1ID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.JobCustomerContact1IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobCustomerContact1ID\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobCustomerContact1IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid JobCustomerContact2ID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.JobCustomerContact2IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobCustomerContact2ID\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobCustomerContact2IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobText1 {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.JobText1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobText1\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobText1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobText2 {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.JobText2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobText2\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobText2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool JobYesNo1 {
                get {
                    try {
                        return ((bool)(this[this.tableStockingLocation.JobYesNo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobYesNo1\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobYesNo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool JobYesNo2 {
                get {
                    try {
                        return ((bool)(this[this.tableStockingLocation.JobYesNo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobYesNo2\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobYesNo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid JobList1ID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.JobList1IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobList1ID\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobList1IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid JobList2ID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.JobList2IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobList2ID\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.JobList2IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ReceiveRequireInspection {
                get {
                    return ((bool)(this[this.tableStockingLocation.ReceiveRequireInspectionColumn]));
                }
                set {
                    this[this.tableStockingLocation.ReceiveRequireInspectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ReceiveOutOfService {
                get {
                    return ((bool)(this[this.tableStockingLocation.ReceiveOutOfServiceColumn]));
                }
                set {
                    this[this.tableStockingLocation.ReceiveOutOfServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RentalDiscount {
                get {
                    try {
                        return ((double)(this[this.tableStockingLocation.RentalDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RentalDiscount\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.RentalDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short RentalDiscountType {
                get {
                    return ((short)(this[this.tableStockingLocation.RentalDiscountTypeColumn]));
                }
                set {
                    this[this.tableStockingLocation.RentalDiscountTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid MarkupUnitPriceID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockingLocation.MarkupUnitPriceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarkupUnitPriceID\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.MarkupUnitPriceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AllowKioskDamaged {
                get {
                    return ((bool)(this[this.tableStockingLocation.AllowKioskDamagedColumn]));
                }
                set {
                    this[this.tableStockingLocation.AllowKioskDamagedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AllowKioskDamagedBeyondRepair {
                get {
                    return ((bool)(this[this.tableStockingLocation.AllowKioskDamagedBeyondRepairColumn]));
                }
                set {
                    this[this.tableStockingLocation.AllowKioskDamagedBeyondRepairColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AllowKioskLostMissing {
                get {
                    return ((bool)(this[this.tableStockingLocation.AllowKioskLostMissingColumn]));
                }
                set {
                    this[this.tableStockingLocation.AllowKioskLostMissingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceNotes {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.InvoiceNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNotes\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.InvoiceNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagList1Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagList1LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagList1Label\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList1LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagList2Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagList2LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagList2Label\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList2LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagList3Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagList3LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagList3Label\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList3LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagList4Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagList4LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagList4Label\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList4LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagList5Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagList5LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagList5Label\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList5LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagList6Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagList6LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagList6Label\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList6LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagList7Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagList7LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagList7Label\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList7LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagList1 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagList1Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagList1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagList2 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagList2Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagList2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagList3 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagList3Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagList3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagList4 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagList4Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagList4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagList5 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagList5Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagList5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagList6 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagList6Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagList6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagList7 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagList7Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagList7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagList1Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagList1RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList1RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagList2Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagList2RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList2RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagList3Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagList3RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList3RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagList4Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagList4RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList4RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagList5Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagList5RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList5RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagList6Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagList6RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList6RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagList7Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagList7RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagList7RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagDate1 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagDate1Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagDate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagDate1Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagDate1LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagDate1Label\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagDate1LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagDate1Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagDate1RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagDate1RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagDate2 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagDate2Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagDate2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagDate2Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagDate2LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagDate2Label\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagDate2LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagDate2Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagDate2RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagDate2RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagText1 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagText1Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagText1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagText1Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagText1LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagText1Label\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagText1LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagText1Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagText1RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagText1RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagText2 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagText2Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagText2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagText2Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagText2LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagText2Label\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagText2LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagText2Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagText2RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagText2RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagText3 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagText3Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagText3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagText3Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagText3LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagText3Label\' in table \'StockingLocation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagText3LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagText3Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagText3RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagText3RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagYesNo1 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagYesNo1Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagYesNo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagYesNo1Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagYesNo1LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagYesNo1Label\' in table \'StockingLocation\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagYesNo1LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagYesNo2 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagYesNo2Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagYesNo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagYesNo2Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagYesNo2LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagYesNo2Label\' in table \'StockingLocation\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagYesNo2LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagActivityList1Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagActivityList1LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagActivityList1Label\' in table \'StockingLocation\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagActivityList1LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagActivityList2Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagActivityList2LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagActivityList2Label\' in table \'StockingLocation\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagActivityList2LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagActivityList3Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagActivityList3LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagActivityList3Label\' in table \'StockingLocation\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagActivityList3LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ScaffoldTagActivityText1Label {
                get {
                    try {
                        return ((string)(this[this.tableStockingLocation.ScaffoldTagActivityText1LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScaffoldTagActivityText1Label\' in table \'StockingLocation\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagActivityText1LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagActivityList1 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagActivityList1Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagActivityList1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagActivityList2 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagActivityList2Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagActivityList2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagActivityList3 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagActivityList3Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagActivityList3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagActivityText1 {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagActivityText1Column]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagActivityText1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagActivityList1Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagActivityList1RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagActivityList1RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagActivityList2Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagActivityList2RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagActivityList2RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagActivityList3Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagActivityList3RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagActivityList3RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldTagActivityText1Required {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldTagActivityText1RequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldTagActivityText1RequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TrackScaffoldTagInspections {
                get {
                    return ((bool)(this[this.tableStockingLocation.TrackScaffoldTagInspectionsColumn]));
                }
                set {
                    this[this.tableStockingLocation.TrackScaffoldTagInspectionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short InspectionFrequency {
                get {
                    try {
                        return ((short)(this[this.tableStockingLocation.InspectionFrequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InspectionFrequency\' in table \'StockingLocation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.InspectionFrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseInspectionShifts {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseInspectionShiftsColumn]));
                }
                set {
                    this[this.tableStockingLocation.UseInspectionShiftsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseScaffoldTagActivities {
                get {
                    return ((bool)(this[this.tableStockingLocation.UseScaffoldTagActivitiesColumn]));
                }
                set {
                    this[this.tableStockingLocation.UseScaffoldTagActivitiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool EnforceOffRent {
                get {
                    return ((bool)(this[this.tableStockingLocation.EnforceOffRentColumn]));
                }
                set {
                    this[this.tableStockingLocation.EnforceOffRentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ScaffoldStopRentRequired {
                get {
                    return ((bool)(this[this.tableStockingLocation.ScaffoldStopRentRequiredColumn]));
                }
                set {
                    this[this.tableStockingLocation.ScaffoldStopRentRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRentStopped {
                get {
                    return ((bool)(this[this.tableStockingLocation.IsRentStoppedColumn]));
                }
                set {
                    this[this.tableStockingLocation.IsRentStoppedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastInvoiced {
                get {
                    return ((global::System.DateTime)(this[this.tableStockingLocation.LastInvoicedColumn]));
                }
                set {
                    this[this.tableStockingLocation.LastInvoicedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TrackContracts {
                get {
                    return ((bool)(this[this.tableStockingLocation.TrackContractsColumn]));
                }
                set {
                    this[this.tableStockingLocation.TrackContractsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] VersionStamp {
                get {
                    try {
                        return ((byte[])(this[this.tableStockingLocation.VersionStampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VersionStamp\' in table \'StockingLocation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockingLocation.VersionStampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList1Row JobList1Row {
                get {
                    return ((JobList1Row)(this.GetParentRow(this.Table.ParentRelations["FK_StockingLocation_JobList1ID_ListID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_StockingLocation_JobList1ID_ListID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList2Row JobList2Row {
                get {
                    return ((JobList2Row)(this.GetParentRow(this.Table.ParentRelations["FK_StockingLocation_JobList2ID_List2D"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_StockingLocation_JobList2ID_List2D"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberNull() {
                return this.IsNull(this.tableStockingLocation.NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberNull() {
                this[this.tableStockingLocation.NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUtilizationGoalNull() {
                return this.IsNull(this.tableStockingLocation.UtilizationGoalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUtilizationGoalNull() {
                this[this.tableStockingLocation.UtilizationGoalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultShipmentToBillableNull() {
                return this.IsNull(this.tableStockingLocation.DefaultShipmentToBillableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultShipmentToBillableNull() {
                this[this.tableStockingLocation.DefaultShipmentToBillableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHistoryRateProfileIDNull() {
                return this.IsNull(this.tableStockingLocation.HistoryRateProfileIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHistoryRateProfileIDNull() {
                this[this.tableStockingLocation.HistoryRateProfileIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultRateProfileIDNull() {
                return this.IsNull(this.tableStockingLocation.DefaultRateProfileIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultRateProfileIDNull() {
                this[this.tableStockingLocation.DefaultRateProfileIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBillingMethodNull() {
                return this.IsNull(this.tableStockingLocation.BillingMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBillingMethodNull() {
                this[this.tableStockingLocation.BillingMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBillingUserIDNull() {
                return this.IsNull(this.tableStockingLocation.BillingUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBillingUserIDNull() {
                this[this.tableStockingLocation.BillingUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArrearsBillingCycleNull() {
                return this.IsNull(this.tableStockingLocation.ArrearsBillingCycleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArrearsBillingCycleNull() {
                this[this.tableStockingLocation.ArrearsBillingCycleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDaysArrearsNull() {
                return this.IsNull(this.tableStockingLocation.CycleDaysArrearsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDaysArrearsNull() {
                this[this.tableStockingLocation.CycleDaysArrearsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMinimumDaysFataNull() {
                return this.IsNull(this.tableStockingLocation.MinimumDaysFataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMinimumDaysFataNull() {
                this[this.tableStockingLocation.MinimumDaysFataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleDaysAdvancedNull() {
                return this.IsNull(this.tableStockingLocation.CycleDaysAdvancedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleDaysAdvancedNull() {
                this[this.tableStockingLocation.CycleDaysAdvancedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMinimumDaysAdvancedNull() {
                return this.IsNull(this.tableStockingLocation.MinimumDaysAdvancedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMinimumDaysAdvancedNull() {
                this[this.tableStockingLocation.MinimumDaysAdvancedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderIDNull() {
                return this.IsNull(this.tableStockingLocation.OrderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderIDNull() {
                this[this.tableStockingLocation.OrderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMonthlyBillingCycleNull() {
                return this.IsNull(this.tableStockingLocation.MonthlyBillingCycleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMonthlyBillingCycleNull() {
                this[this.tableStockingLocation.MonthlyBillingCycleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDayOfMonthNull() {
                return this.IsNull(this.tableStockingLocation.DayOfMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDayOfMonthNull() {
                this[this.tableStockingLocation.DayOfMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirstInvoiceDateNull() {
                return this.IsNull(this.tableStockingLocation.FirstInvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirstInvoiceDateNull() {
                this[this.tableStockingLocation.FirstInvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAwcFirstInvoiceDateNull() {
                return this.IsNull(this.tableStockingLocation.AwcFirstInvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAwcFirstInvoiceDateNull() {
                this[this.tableStockingLocation.AwcFirstInvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdvanceIsCycledNull() {
                return this.IsNull(this.tableStockingLocation.AdvanceIsCycledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdvanceIsCycledNull() {
                this[this.tableStockingLocation.AdvanceIsCycledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleBeginDateNull() {
                return this.IsNull(this.tableStockingLocation.CycleBeginDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleBeginDateNull() {
                this[this.tableStockingLocation.CycleBeginDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleEndDateNull() {
                return this.IsNull(this.tableStockingLocation.CycleEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleEndDateNull() {
                this[this.tableStockingLocation.CycleEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCycleEndDateOverrideNull() {
                return this.IsNull(this.tableStockingLocation.CycleEndDateOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCycleEndDateOverrideNull() {
                this[this.tableStockingLocation.CycleEndDateOverrideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHideZeroInvoiceItemsNull() {
                return this.IsNull(this.tableStockingLocation.HideZeroInvoiceItemsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHideZeroInvoiceItemsNull() {
                this[this.tableStockingLocation.HideZeroInvoiceItemsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGracePeriodNull() {
                return this.IsNull(this.tableStockingLocation.GracePeriodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGracePeriodNull() {
                this[this.tableStockingLocation.GracePeriodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRentIsTaxableNull() {
                return this.IsNull(this.tableStockingLocation.RentIsTaxableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRentIsTaxableNull() {
                this[this.tableStockingLocation.RentIsTaxableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsumablesTaxableNull() {
                return this.IsNull(this.tableStockingLocation.ConsumablesTaxableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConsumablesTaxableNull() {
                this[this.tableStockingLocation.ConsumablesTaxableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryChargesTaxableNull() {
                return this.IsNull(this.tableStockingLocation.DeliveryChargesTaxableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryChargesTaxableNull() {
                this[this.tableStockingLocation.DeliveryChargesTaxableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContractBillingTaxableNull() {
                return this.IsNull(this.tableStockingLocation.ContractBillingTaxableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContractBillingTaxableNull() {
                this[this.tableStockingLocation.ContractBillingTaxableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServiceTicketDamageChargeTaxableNull() {
                return this.IsNull(this.tableStockingLocation.ServiceTicketDamageChargeTaxableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServiceTicketDamageChargeTaxableNull() {
                this[this.tableStockingLocation.ServiceTicketDamageChargeTaxableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobTax1IDNull() {
                return this.IsNull(this.tableStockingLocation.JobTax1IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobTax1IDNull() {
                this[this.tableStockingLocation.JobTax1IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobTax2IDNull() {
                return this.IsNull(this.tableStockingLocation.JobTax2IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobTax2IDNull() {
                this[this.tableStockingLocation.JobTax2IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableStockingLocation.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStartDateNull() {
                this[this.tableStockingLocation.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStopDateNull() {
                return this.IsNull(this.tableStockingLocation.StopDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStopDateNull() {
                this[this.tableStockingLocation.StopDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastDateForRentNull() {
                return this.IsNull(this.tableStockingLocation.LastDateForRentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastDateForRentNull() {
                this[this.tableStockingLocation.LastDateForRentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobDate1Null() {
                return this.IsNull(this.tableStockingLocation.JobDate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobDate1Null() {
                this[this.tableStockingLocation.JobDate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobDate2Null() {
                return this.IsNull(this.tableStockingLocation.JobDate2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobDate2Null() {
                this[this.tableStockingLocation.JobDate2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobEmployee1IDNull() {
                return this.IsNull(this.tableStockingLocation.JobEmployee1IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobEmployee1IDNull() {
                this[this.tableStockingLocation.JobEmployee1IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobEmployee2IDNull() {
                return this.IsNull(this.tableStockingLocation.JobEmployee2IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobEmployee2IDNull() {
                this[this.tableStockingLocation.JobEmployee2IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobEmployee3IDNull() {
                return this.IsNull(this.tableStockingLocation.JobEmployee3IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobEmployee3IDNull() {
                this[this.tableStockingLocation.JobEmployee3IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobCustomerContact1IDNull() {
                return this.IsNull(this.tableStockingLocation.JobCustomerContact1IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobCustomerContact1IDNull() {
                this[this.tableStockingLocation.JobCustomerContact1IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobCustomerContact2IDNull() {
                return this.IsNull(this.tableStockingLocation.JobCustomerContact2IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobCustomerContact2IDNull() {
                this[this.tableStockingLocation.JobCustomerContact2IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobText1Null() {
                return this.IsNull(this.tableStockingLocation.JobText1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobText1Null() {
                this[this.tableStockingLocation.JobText1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobText2Null() {
                return this.IsNull(this.tableStockingLocation.JobText2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobText2Null() {
                this[this.tableStockingLocation.JobText2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobYesNo1Null() {
                return this.IsNull(this.tableStockingLocation.JobYesNo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobYesNo1Null() {
                this[this.tableStockingLocation.JobYesNo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobYesNo2Null() {
                return this.IsNull(this.tableStockingLocation.JobYesNo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobYesNo2Null() {
                this[this.tableStockingLocation.JobYesNo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobList1IDNull() {
                return this.IsNull(this.tableStockingLocation.JobList1IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobList1IDNull() {
                this[this.tableStockingLocation.JobList1IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobList2IDNull() {
                return this.IsNull(this.tableStockingLocation.JobList2IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobList2IDNull() {
                this[this.tableStockingLocation.JobList2IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRentalDiscountNull() {
                return this.IsNull(this.tableStockingLocation.RentalDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRentalDiscountNull() {
                this[this.tableStockingLocation.RentalDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarkupUnitPriceIDNull() {
                return this.IsNull(this.tableStockingLocation.MarkupUnitPriceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarkupUnitPriceIDNull() {
                this[this.tableStockingLocation.MarkupUnitPriceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceNotesNull() {
                return this.IsNull(this.tableStockingLocation.InvoiceNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceNotesNull() {
                this[this.tableStockingLocation.InvoiceNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagList1LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagList1LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagList1LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagList1LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagList2LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagList2LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagList2LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagList2LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagList3LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagList3LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagList3LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagList3LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagList4LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagList4LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagList4LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagList4LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagList5LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagList5LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagList5LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagList5LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagList6LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagList6LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagList6LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagList6LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagList7LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagList7LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagList7LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagList7LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagDate1LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagDate1LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagDate1LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagDate1LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagDate2LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagDate2LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagDate2LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagDate2LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagText1LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagText1LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagText1LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagText1LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagText2LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagText2LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagText2LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagText2LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagText3LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagText3LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagText3LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagText3LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagYesNo1LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagYesNo1LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagYesNo1LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagYesNo1LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagYesNo2LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagYesNo2LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagYesNo2LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagYesNo2LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagActivityList1LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagActivityList1LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagActivityList1LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagActivityList1LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagActivityList2LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagActivityList2LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagActivityList2LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagActivityList2LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagActivityList3LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagActivityList3LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagActivityList3LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagActivityList3LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsScaffoldTagActivityText1LabelNull() {
                return this.IsNull(this.tableStockingLocation.ScaffoldTagActivityText1LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetScaffoldTagActivityText1LabelNull() {
                this[this.tableStockingLocation.ScaffoldTagActivityText1LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInspectionFrequencyNull() {
                return this.IsNull(this.tableStockingLocation.InspectionFrequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInspectionFrequencyNull() {
                this[this.tableStockingLocation.InspectionFrequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVersionStampNull() {
                return this.IsNull(this.tableStockingLocation.VersionStampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVersionStampNull() {
                this[this.tableStockingLocation.VersionStampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductExtensionRow[] GetStockedProductExtensionRowsByFK_StockedProductExtension_JobSiteID() {
                if ((this.Table.ChildRelations["FK_StockedProductExtension_JobSiteID"] == null)) {
                    return new StockedProductExtensionRow[0];
                }
                else {
                    return ((StockedProductExtensionRow[])(base.GetChildRows(this.Table.ChildRelations["FK_StockedProductExtension_JobSiteID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductExtensionRow[] GetStockedProductExtensionRowsByFK_StockedProductExtension_StockingLocationID() {
                if ((this.Table.ChildRelations["FK_StockedProductExtension_StockingLocationID"] == null)) {
                    return new StockedProductExtensionRow[0];
                }
                else {
                    return ((StockedProductExtensionRow[])(base.GetChildRows(this.Table.ChildRelations["FK_StockedProductExtension_StockingLocationID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRentalPeriodAdjustmentRow[] GetStockingLocationRentalPeriodAdjustmentRows() {
                if ((this.Table.ChildRelations["FK_StockingLocationRentalPeriodAdjustment__StockingLocationID"] == null)) {
                    return new StockingLocationRentalPeriodAdjustmentRow[0];
                }
                else {
                    return ((StockingLocationRentalPeriodAdjustmentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_StockingLocationRentalPeriodAdjustment__StockingLocationID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationStatusRow[] GetStockingLocationStatusRows() {
                if ((this.Table.ChildRelations["fk_StockingLocationStatus_rid"] == null)) {
                    return new StockingLocationStatusRow[0];
                }
                else {
                    return ((StockingLocationStatusRow[])(base.GetChildRows(this.Table.ChildRelations["fk_StockingLocationStatus_rid"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class JobList1Row : global::System.Data.DataRow {
            
            private JobList1DataTable tableJobList1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JobList1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJobList1 = ((JobList1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid JobList1ID {
                get {
                    return ((global::System.Guid)(this[this.tableJobList1.JobList1IDColumn]));
                }
                set {
                    this[this.tableJobList1.JobList1IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableJobList1.IsActiveColumn]));
                }
                set {
                    this[this.tableJobList1.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableJobList1.NameColumn]));
                }
                set {
                    this[this.tableJobList1.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableJobList1.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'JobList1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobList1.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableJobList1.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableJobList1.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRow[] GetStockingLocationRows() {
                if ((this.Table.ChildRelations["FK_StockingLocation_JobList1ID_ListID"] == null)) {
                    return new StockingLocationRow[0];
                }
                else {
                    return ((StockingLocationRow[])(base.GetChildRows(this.Table.ChildRelations["FK_StockingLocation_JobList1ID_ListID"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class JobList2Row : global::System.Data.DataRow {
            
            private JobList2DataTable tableJobList2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JobList2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJobList2 = ((JobList2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid JobList2ID {
                get {
                    return ((global::System.Guid)(this[this.tableJobList2.JobList2IDColumn]));
                }
                set {
                    this[this.tableJobList2.JobList2IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableJobList2.IsActiveColumn]));
                }
                set {
                    this[this.tableJobList2.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableJobList2.NameColumn]));
                }
                set {
                    this[this.tableJobList2.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableJobList2.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'JobList2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobList2.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableJobList2.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableJobList2.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRow[] GetStockingLocationRows() {
                if ((this.Table.ChildRelations["FK_StockingLocation_JobList2ID_List2D"] == null)) {
                    return new StockingLocationRow[0];
                }
                else {
                    return ((StockingLocationRow[])(base.GetChildRows(this.Table.ChildRelations["FK_StockingLocation_JobList2ID_List2D"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ManufacturerRow : global::System.Data.DataRow {
            
            private ManufacturerDataTable tableManufacturer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ManufacturerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableManufacturer = ((ManufacturerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ManufacturerID {
                get {
                    return ((global::System.Guid)(this[this.tableManufacturer.ManufacturerIDColumn]));
                }
                set {
                    this[this.tableManufacturer.ManufacturerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableManufacturer.IsActiveColumn]));
                }
                set {
                    this[this.tableManufacturer.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableManufacturer.NameColumn]));
                }
                set {
                    this[this.tableManufacturer.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableManufacturer.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Manufacturer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableManufacturer.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableManufacturer.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableManufacturer.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow[] GetProductRows() {
                if ((this.Table.ChildRelations["FK_Product_ManufacturerID"] == null)) {
                    return new ProductRow[0];
                }
                else {
                    return ((ProductRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Product_ManufacturerID"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StockedProductExtensionRow : global::System.Data.DataRow {
            
            private StockedProductExtensionDataTable tableStockedProductExtension;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StockedProductExtensionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockedProductExtension = ((StockedProductExtensionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableStockedProductExtension.IDColumn]));
                }
                set {
                    this[this.tableStockedProductExtension.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ShipmentID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockedProductExtension.ShipmentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipmentID\' in table \'StockedProductExtension\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProductExtension.ShipmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid JobsiteID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockedProductExtension.JobsiteIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobsiteID\' in table \'StockedProductExtension\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProductExtension.JobsiteIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid SerialNumberID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockedProductExtension.SerialNumberIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialNumberID\' in table \'StockedProductExtension\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockedProductExtension.SerialNumberIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid BillingTransactionID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockedProductExtension.BillingTransactionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingTransactionID\' in table \'StockedProductExtension\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProductExtension.BillingTransactionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Quantity {
                get {
                    try {
                        return ((double)(this[this.tableStockedProductExtension.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'StockedProductExtension\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProductExtension.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tableStockedProductExtension.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'StockedProductExtension\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProductExtension.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ExtensionType {
                get {
                    try {
                        return ((short)(this[this.tableStockedProductExtension.ExtensionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtensionType\' in table \'StockedProductExtension\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStockedProductExtension.ExtensionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ExtensionStatus {
                get {
                    return ((short)(this[this.tableStockedProductExtension.ExtensionStatusColumn]));
                }
                set {
                    this[this.tableStockedProductExtension.ExtensionStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short OutOfServiceStatus {
                get {
                    return ((short)(this[this.tableStockedProductExtension.OutOfServiceStatusColumn]));
                }
                set {
                    this[this.tableStockedProductExtension.OutOfServiceStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StockingLocationID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockedProductExtension.StockingLocationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockingLocationID\' in table \'StockedProductExtension\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProductExtension.StockingLocationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid BaseProductID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockedProductExtension.BaseProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseProductID\' in table \'StockedProductExtension\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStockedProductExtension.BaseProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ArchivedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockedProductExtension.ArchivedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArchivedDate\' in table \'StockedProductExtension\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStockedProductExtension.ArchivedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockedProductExtension.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'StockedProductExtension\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProductExtension.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] VersionStamp {
                get {
                    try {
                        return ((byte[])(this[this.tableStockedProductExtension.VersionStampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VersionStamp\' in table \'StockedProductExtension\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStockedProductExtension.VersionStampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow ProductRow {
                get {
                    return ((ProductRow)(this.GetParentRow(this.Table.ParentRelations["FK_StockedProductExtension_BaseProductID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_StockedProductExtension_BaseProductID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRow StockingLocationRowByFK_StockedProductExtension_JobSiteID {
                get {
                    return ((StockingLocationRow)(this.GetParentRow(this.Table.ParentRelations["FK_StockedProductExtension_JobSiteID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_StockedProductExtension_JobSiteID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRow StockingLocationRowByFK_StockedProductExtension_StockingLocationID {
                get {
                    return ((StockingLocationRow)(this.GetParentRow(this.Table.ParentRelations["FK_StockedProductExtension_StockingLocationID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_StockedProductExtension_StockingLocationID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShipmentIDNull() {
                return this.IsNull(this.tableStockedProductExtension.ShipmentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShipmentIDNull() {
                this[this.tableStockedProductExtension.ShipmentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJobsiteIDNull() {
                return this.IsNull(this.tableStockedProductExtension.JobsiteIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJobsiteIDNull() {
                this[this.tableStockedProductExtension.JobsiteIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSerialNumberIDNull() {
                return this.IsNull(this.tableStockedProductExtension.SerialNumberIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSerialNumberIDNull() {
                this[this.tableStockedProductExtension.SerialNumberIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBillingTransactionIDNull() {
                return this.IsNull(this.tableStockedProductExtension.BillingTransactionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBillingTransactionIDNull() {
                this[this.tableStockedProductExtension.BillingTransactionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableStockedProductExtension.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityNull() {
                this[this.tableStockedProductExtension.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tableStockedProductExtension.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tableStockedProductExtension.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExtensionTypeNull() {
                return this.IsNull(this.tableStockedProductExtension.ExtensionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExtensionTypeNull() {
                this[this.tableStockedProductExtension.ExtensionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStockingLocationIDNull() {
                return this.IsNull(this.tableStockedProductExtension.StockingLocationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStockingLocationIDNull() {
                this[this.tableStockedProductExtension.StockingLocationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseProductIDNull() {
                return this.IsNull(this.tableStockedProductExtension.BaseProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseProductIDNull() {
                this[this.tableStockedProductExtension.BaseProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArchivedDateNull() {
                return this.IsNull(this.tableStockedProductExtension.ArchivedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArchivedDateNull() {
                this[this.tableStockedProductExtension.ArchivedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableStockedProductExtension.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatedDateNull() {
                this[this.tableStockedProductExtension.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVersionStampNull() {
                return this.IsNull(this.tableStockedProductExtension.VersionStampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVersionStampNull() {
                this[this.tableStockedProductExtension.VersionStampColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StockingLocationRentalPeriodAdjustmentRow : global::System.Data.DataRow {
            
            private StockingLocationRentalPeriodAdjustmentDataTable tableStockingLocationRentalPeriodAdjustment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StockingLocationRentalPeriodAdjustmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockingLocationRentalPeriodAdjustment = ((StockingLocationRentalPeriodAdjustmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StockingLocationRentalPeriodAdjustmentID {
                get {
                    return ((global::System.Guid)(this[this.tableStockingLocationRentalPeriodAdjustment.StockingLocationRentalPeriodAdjustmentIDColumn]));
                }
                set {
                    this[this.tableStockingLocationRentalPeriodAdjustment.StockingLocationRentalPeriodAdjustmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StockingLocationID {
                get {
                    return ((global::System.Guid)(this[this.tableStockingLocationRentalPeriodAdjustment.StockingLocationIDColumn]));
                }
                set {
                    this[this.tableStockingLocationRentalPeriodAdjustment.StockingLocationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RentalPeriodAdjustmentID {
                get {
                    return ((global::System.Guid)(this[this.tableStockingLocationRentalPeriodAdjustment.RentalPeriodAdjustmentIDColumn]));
                }
                set {
                    this[this.tableStockingLocationRentalPeriodAdjustment.RentalPeriodAdjustmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRow StockingLocationRow {
                get {
                    return ((StockingLocationRow)(this.GetParentRow(this.Table.ParentRelations["FK_StockingLocationRentalPeriodAdjustment__StockingLocationID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_StockingLocationRentalPeriodAdjustment__StockingLocationID"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StockingLocationStatusRow : global::System.Data.DataRow {
            
            private StockingLocationStatusDataTable tableStockingLocationStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StockingLocationStatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockingLocationStatus = ((StockingLocationStatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StockingLocationStatusID {
                get {
                    return ((global::System.Guid)(this[this.tableStockingLocationStatus.StockingLocationStatusIDColumn]));
                }
                set {
                    this[this.tableStockingLocationStatus.StockingLocationStatusIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid RelatedID {
                get {
                    return ((global::System.Guid)(this[this.tableStockingLocationStatus.RelatedIDColumn]));
                }
                set {
                    this[this.tableStockingLocationStatus.RelatedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeID {
                get {
                    return ((int)(this[this.tableStockingLocationStatus.TypeIDColumn]));
                }
                set {
                    this[this.tableStockingLocationStatus.TypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive {
                get {
                    return ((bool)(this[this.tableStockingLocationStatus.IsActiveColumn]));
                }
                set {
                    this[this.tableStockingLocationStatus.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableStockingLocationStatus.NameColumn]));
                }
                set {
                    this[this.tableStockingLocationStatus.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableStockingLocationStatus.DescriptionColumn]));
                }
                set {
                    this[this.tableStockingLocationStatus.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRow StockingLocationRow {
                get {
                    return ((StockingLocationRow)(this.GetParentRow(this.Table.ParentRelations["fk_StockingLocationStatus_rid"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_StockingLocationStatus_rid"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StockedProductRow : global::System.Data.DataRow {
            
            private StockedProductDataTable tableStockedProduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StockedProductRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockedProduct = ((StockedProductDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StockedProductID {
                get {
                    return ((global::System.Guid)(this[this.tableStockedProduct.StockedProductIDColumn]));
                }
                set {
                    this[this.tableStockedProduct.StockedProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid StockingLocationID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockedProduct.StockingLocationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockingLocationID\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.StockingLocationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid BaseProductID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockedProduct.BaseProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseProductID\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.BaseProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QForRent {
                get {
                    try {
                        return ((double)(this[this.tableStockedProduct.QForRentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QForRent\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.QForRentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QInTransit {
                get {
                    try {
                        return ((double)(this[this.tableStockedProduct.QInTransitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QInTransit\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.QInTransitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QDiscrepancy {
                get {
                    try {
                        return ((double)(this[this.tableStockedProduct.QDiscrepancyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QDiscrepancy\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.QDiscrepancyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QNew {
                get {
                    try {
                        return ((double)(this[this.tableStockedProduct.QNewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QNew\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.QNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QOnRent {
                get {
                    try {
                        return ((double)(this[this.tableStockedProduct.QOnRentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QOnRent\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.QOnRentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QtyReserved {
                get {
                    try {
                        return ((double)(this[this.tableStockedProduct.QtyReservedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyReserved\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.QtyReservedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid OwnerTradingPartnerID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockedProduct.OwnerTradingPartnerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerTradingPartnerID\' in table \'StockedProduct\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.OwnerTradingPartnerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QtyToBeInspected {
                get {
                    try {
                        return ((double)(this[this.tableStockedProduct.QtyToBeInspectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyToBeInspected\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.QtyToBeInspectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QOnOrder {
                get {
                    try {
                        return ((double)(this[this.tableStockedProduct.QOnOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QOnOrder\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.QOnOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QBackOrdered {
                get {
                    try {
                        return ((double)(this[this.tableStockedProduct.QBackOrderedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QBackOrdered\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.QBackOrderedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QOnOrderNew {
                get {
                    try {
                        return ((double)(this[this.tableStockedProduct.QOnOrderNewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QOnOrderNew\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.QOnOrderNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double QBackOrderedNew {
                get {
                    try {
                        return ((double)(this[this.tableStockedProduct.QBackOrderedNewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QBackOrderedNew\' in table \'StockedProduct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.QBackOrderedNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime NextROPNotificationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockedProduct.NextROPNotificationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextROPNotificationDate\' in table \'StockedProduct\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.NextROPNotificationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime NextReRentNotificationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockedProduct.NextReRentNotificationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextReRentNotificationDate\' in table \'StockedProduct\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableStockedProduct.NextReRentNotificationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStockingLocationIDNull() {
                return this.IsNull(this.tableStockedProduct.StockingLocationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStockingLocationIDNull() {
                this[this.tableStockedProduct.StockingLocationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseProductIDNull() {
                return this.IsNull(this.tableStockedProduct.BaseProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseProductIDNull() {
                this[this.tableStockedProduct.BaseProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQForRentNull() {
                return this.IsNull(this.tableStockedProduct.QForRentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQForRentNull() {
                this[this.tableStockedProduct.QForRentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQInTransitNull() {
                return this.IsNull(this.tableStockedProduct.QInTransitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQInTransitNull() {
                this[this.tableStockedProduct.QInTransitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQDiscrepancyNull() {
                return this.IsNull(this.tableStockedProduct.QDiscrepancyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQDiscrepancyNull() {
                this[this.tableStockedProduct.QDiscrepancyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQNewNull() {
                return this.IsNull(this.tableStockedProduct.QNewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQNewNull() {
                this[this.tableStockedProduct.QNewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQOnRentNull() {
                return this.IsNull(this.tableStockedProduct.QOnRentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQOnRentNull() {
                this[this.tableStockedProduct.QOnRentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQtyReservedNull() {
                return this.IsNull(this.tableStockedProduct.QtyReservedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQtyReservedNull() {
                this[this.tableStockedProduct.QtyReservedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOwnerTradingPartnerIDNull() {
                return this.IsNull(this.tableStockedProduct.OwnerTradingPartnerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOwnerTradingPartnerIDNull() {
                this[this.tableStockedProduct.OwnerTradingPartnerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQtyToBeInspectedNull() {
                return this.IsNull(this.tableStockedProduct.QtyToBeInspectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQtyToBeInspectedNull() {
                this[this.tableStockedProduct.QtyToBeInspectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQOnOrderNull() {
                return this.IsNull(this.tableStockedProduct.QOnOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQOnOrderNull() {
                this[this.tableStockedProduct.QOnOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQBackOrderedNull() {
                return this.IsNull(this.tableStockedProduct.QBackOrderedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQBackOrderedNull() {
                this[this.tableStockedProduct.QBackOrderedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQOnOrderNewNull() {
                return this.IsNull(this.tableStockedProduct.QOnOrderNewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQOnOrderNewNull() {
                this[this.tableStockedProduct.QOnOrderNewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQBackOrderedNewNull() {
                return this.IsNull(this.tableStockedProduct.QBackOrderedNewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQBackOrderedNewNull() {
                this[this.tableStockedProduct.QBackOrderedNewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNextROPNotificationDateNull() {
                return this.IsNull(this.tableStockedProduct.NextROPNotificationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNextROPNotificationDateNull() {
                this[this.tableStockedProduct.NextROPNotificationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNextReRentNotificationDateNull() {
                return this.IsNull(this.tableStockedProduct.NextReRentNotificationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNextReRentNotificationDateNull() {
                this[this.tableStockedProduct.NextReRentNotificationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProductRowChangeEvent : global::System.EventArgs {
            
            private ProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRowChangeEvent(ProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StockingLocationRowChangeEvent : global::System.EventArgs {
            
            private StockingLocationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRowChangeEvent(StockingLocationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class JobList1RowChangeEvent : global::System.EventArgs {
            
            private JobList1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList1RowChangeEvent(JobList1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class JobList2RowChangeEvent : global::System.EventArgs {
            
            private JobList2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList2RowChangeEvent(JobList2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobList2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ManufacturerRowChangeEvent : global::System.EventArgs {
            
            private ManufacturerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ManufacturerRowChangeEvent(ManufacturerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ManufacturerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StockedProductExtensionRowChangeEvent : global::System.EventArgs {
            
            private StockedProductExtensionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductExtensionRowChangeEvent(StockedProductExtensionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductExtensionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StockingLocationRentalPeriodAdjustmentRowChangeEvent : global::System.EventArgs {
            
            private StockingLocationRentalPeriodAdjustmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRentalPeriodAdjustmentRowChangeEvent(StockingLocationRentalPeriodAdjustmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationRentalPeriodAdjustmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StockingLocationStatusRowChangeEvent : global::System.EventArgs {
            
            private StockingLocationStatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationStatusRowChangeEvent(StockingLocationStatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockingLocationStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StockedProductRowChangeEvent : global::System.EventArgs {
            
            private StockedProductRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductRowChangeEvent(StockedProductRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StockedProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Quantify.API.DsQuantifyTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProductTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ProductTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Product";
            tableMapping.ColumnMappings.Add("ProductID", "ProductID");
            tableMapping.ColumnMappings.Add("PartNumber", "PartNumber");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("ModelNumber", "ModelNumber");
            tableMapping.ColumnMappings.Add("UPCCode", "UPCCode");
            tableMapping.ColumnMappings.Add("Weight", "Weight");
            tableMapping.ColumnMappings.Add("Length", "Length");
            tableMapping.ColumnMappings.Add("Width", "Width");
            tableMapping.ColumnMappings.Add("Height", "Height");
            tableMapping.ColumnMappings.Add("UtilizationGoal", "UtilizationGoal");
            tableMapping.ColumnMappings.Add("ProductType", "ProductType");
            tableMapping.ColumnMappings.Add("DefaultList", "DefaultList");
            tableMapping.ColumnMappings.Add("DefaultRentCalculatorID", "DefaultRentCalculatorID");
            tableMapping.ColumnMappings.Add("DefaultSellCalculatorID", "DefaultSellCalculatorID");
            tableMapping.ColumnMappings.Add("DefaultRentRate", "DefaultRentRate");
            tableMapping.ColumnMappings.Add("DefaultMinimumDayOverride", "DefaultMinimumDayOverride");
            tableMapping.ColumnMappings.Add("DefaultSell", "DefaultSell");
            tableMapping.ColumnMappings.Add("DefaultReplacementCost", "DefaultReplacementCost");
            tableMapping.ColumnMappings.Add("ManufacturerID", "ManufacturerID");
            tableMapping.ColumnMappings.Add("ManufacturerNumber", "ManufacturerNumber");
            tableMapping.ColumnMappings.Add("DefaultFactorID", "DefaultFactorID");
            tableMapping.ColumnMappings.Add("ProductCategoryID", "ProductCategoryID");
            tableMapping.ColumnMappings.Add("UomID", "UomID");
            tableMapping.ColumnMappings.Add("DefaultAverageCost", "DefaultAverageCost");
            tableMapping.ColumnMappings.Add("DefaultCost", "DefaultCost");
            tableMapping.ColumnMappings.Add("DefaultLastCost", "DefaultLastCost");
            tableMapping.ColumnMappings.Add("DefaultStandardCost", "DefaultStandardCost");
            tableMapping.ColumnMappings.Add("DefaultROP", "DefaultROP");
            tableMapping.ColumnMappings.Add("DefaultROQ", "DefaultROQ");
            tableMapping.ColumnMappings.Add("Custom1", "Custom1");
            tableMapping.ColumnMappings.Add("Custom2", "Custom2");
            tableMapping.ColumnMappings.Add("Custom3", "Custom3");
            tableMapping.ColumnMappings.Add("Comment", "Comment");
            tableMapping.ColumnMappings.Add("DefaultInspection", "DefaultInspection");
            tableMapping.ColumnMappings.Add("RowVersion", "RowVersion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Product] WHERE (([ProductID] = @Original_ProductID) AND ([RowV" +
                "ersion] = @Original_RowVersion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowVersion", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Product] ([ProductID], [PartNumber], [Description], [ModelNumb" +
                "er], [UPCCode], [Weight], [Length], [Width], [Height], [UtilizationGoal], [Produ" +
                "ctType], [DefaultList], [DefaultRentCalculatorID], [DefaultSellCalculatorID], [D" +
                "efaultRentRate], [DefaultMinimumDayOverride], [DefaultSell], [DefaultReplacement" +
                "Cost], [ManufacturerID], [ManufacturerNumber], [DefaultFactorID], [ProductCatego" +
                "ryID], [UomID], [DefaultAverageCost], [DefaultCost], [DefaultLastCost], [Default" +
                "StandardCost], [DefaultROP], [DefaultROQ], [Custom1], [Custom2], [Custom3], [Com" +
                "ment], [DefaultInspection]) VALUES (@ProductID, @PartNumber, @Description, @Mode" +
                "lNumber, @UPCCode, @Weight, @Length, @Width, @Height, @UtilizationGoal, @Product" +
                "Type, @DefaultList, @DefaultRentCalculatorID, @DefaultSellCalculatorID, @Default" +
                "RentRate, @DefaultMinimumDayOverride, @DefaultSell, @DefaultReplacementCost, @Ma" +
                "nufacturerID, @ManufacturerNumber, @DefaultFactorID, @ProductCategoryID, @UomID," +
                " @DefaultAverageCost, @DefaultCost, @DefaultLastCost, @DefaultStandardCost, @Def" +
                "aultROP, @DefaultROQ, @Custom1, @Custom2, @Custom3, @Comment, @DefaultInspection" +
                ");\r\nSELECT ProductID, PartNumber, Description, ModelNumber, UPCCode, Weight, Len" +
                "gth, Width, Height, UtilizationGoal, ProductType, DefaultList, DefaultRentCalcul" +
                "atorID, DefaultSellCalculatorID, DefaultRentRate, DefaultMinimumDayOverride, Def" +
                "aultSell, DefaultReplacementCost, ManufacturerID, ManufacturerNumber, DefaultFac" +
                "torID, ProductCategoryID, UomID, DefaultAverageCost, DefaultCost, DefaultLastCos" +
                "t, DefaultStandardCost, DefaultROP, DefaultROQ, Custom1, Custom2, Custom3, Comme" +
                "nt, DefaultInspection, RowVersion FROM Product WHERE (ProductID = @ProductID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PartNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PartNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModelNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModelNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPCCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPCCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Length", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Length", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Width", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Height", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Height", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UtilizationGoal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UtilizationGoal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultList", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultRentCalculatorID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultRentCalculatorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultSellCalculatorID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultSellCalculatorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultRentRate", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultRentRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultMinimumDayOverride", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultMinimumDayOverride", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultSell", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultSell", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultReplacementCost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultReplacementCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufacturerID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufacturerNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultFactorID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultFactorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductCategoryID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UomID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UomID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultAverageCost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultAverageCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultCost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultLastCost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultLastCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultStandardCost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultStandardCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultROP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultROP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultROQ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultROQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Custom1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Custom1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Custom2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Custom2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Custom3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Custom3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultInspection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultInspection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Product] SET [ProductID] = @ProductID, [PartNumber] = @PartNumber, " +
                "[Description] = @Description, [ModelNumber] = @ModelNumber, [UPCCode] = @UPCCode" +
                ", [Weight] = @Weight, [Length] = @Length, [Width] = @Width, [Height] = @Height, " +
                "[UtilizationGoal] = @UtilizationGoal, [ProductType] = @ProductType, [DefaultList" +
                "] = @DefaultList, [DefaultRentCalculatorID] = @DefaultRentCalculatorID, [Default" +
                "SellCalculatorID] = @DefaultSellCalculatorID, [DefaultRentRate] = @DefaultRentRa" +
                "te, [DefaultMinimumDayOverride] = @DefaultMinimumDayOverride, [DefaultSell] = @D" +
                "efaultSell, [DefaultReplacementCost] = @DefaultReplacementCost, [ManufacturerID]" +
                " = @ManufacturerID, [ManufacturerNumber] = @ManufacturerNumber, [DefaultFactorID" +
                "] = @DefaultFactorID, [ProductCategoryID] = @ProductCategoryID, [UomID] = @UomID" +
                ", [DefaultAverageCost] = @DefaultAverageCost, [DefaultCost] = @DefaultCost, [Def" +
                "aultLastCost] = @DefaultLastCost, [DefaultStandardCost] = @DefaultStandardCost, " +
                "[DefaultROP] = @DefaultROP, [DefaultROQ] = @DefaultROQ, [Custom1] = @Custom1, [C" +
                "ustom2] = @Custom2, [Custom3] = @Custom3, [Comment] = @Comment, [DefaultInspecti" +
                "on] = @DefaultInspection WHERE (([ProductID] = @Original_ProductID) AND ([RowVer" +
                "sion] = @Original_RowVersion));\r\nSELECT ProductID, PartNumber, Description, Mode" +
                "lNumber, UPCCode, Weight, Length, Width, Height, UtilizationGoal, ProductType, D" +
                "efaultList, DefaultRentCalculatorID, DefaultSellCalculatorID, DefaultRentRate, D" +
                "efaultMinimumDayOverride, DefaultSell, DefaultReplacementCost, ManufacturerID, M" +
                "anufacturerNumber, DefaultFactorID, ProductCategoryID, UomID, DefaultAverageCost" +
                ", DefaultCost, DefaultLastCost, DefaultStandardCost, DefaultROP, DefaultROQ, Cus" +
                "tom1, Custom2, Custom3, Comment, DefaultInspection, RowVersion FROM Product WHER" +
                "E (ProductID = @ProductID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PartNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PartNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModelNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModelNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPCCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPCCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Weight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Length", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Length", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Width", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Width", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Height", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Height", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UtilizationGoal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UtilizationGoal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultList", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultList", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultRentCalculatorID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultRentCalculatorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultSellCalculatorID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultSellCalculatorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultRentRate", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultRentRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultMinimumDayOverride", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultMinimumDayOverride", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultSell", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultSell", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultReplacementCost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultReplacementCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufacturerID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufacturerNumber", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultFactorID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultFactorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductCategoryID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductCategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UomID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UomID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultAverageCost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultAverageCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultCost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultLastCost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultLastCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultStandardCost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultStandardCost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultROP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultROP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultROQ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultROQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Custom1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Custom1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Custom2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Custom2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Custom3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Custom3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultInspection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultInspection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RowVersion", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RowVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Quantify.API.Properties.Settings.Default.ASIRentalManagerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ProductID, PartNumber, Description, ModelNumber, UPCCode, Weight, Length, Width, Height, UtilizationGoal, ProductType, DefaultList, DefaultRentCalculatorID, DefaultSellCalculatorID, DefaultRentRate, DefaultMinimumDayOverride, DefaultSell, DefaultReplacementCost, ManufacturerID, ManufacturerNumber, DefaultFactorID, ProductCategoryID, UomID, DefaultAverageCost, DefaultCost, DefaultLastCost, DefaultStandardCost, DefaultROP, DefaultROQ, Custom1, Custom2, Custom3, Comment, DefaultInspection, RowVersion FROM dbo.Product";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsQuantify.ProductDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsQuantify.ProductDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsQuantify.ProductDataTable dataTable = new DsQuantify.ProductDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify.ProductDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify dataSet) {
            return this.Adapter.Update(dataSet, "Product");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_ProductID, byte[] Original_RowVersion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_ProductID));
            if ((Original_RowVersion == null)) {
                throw new global::System.ArgumentNullException("Original_RowVersion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((byte[])(Original_RowVersion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Guid ProductID, 
                    string PartNumber, 
                    string Description, 
                    string ModelNumber, 
                    string UPCCode, 
                    global::System.Nullable<double> Weight, 
                    global::System.Nullable<double> Length, 
                    global::System.Nullable<double> Width, 
                    global::System.Nullable<double> Height, 
                    global::System.Nullable<double> UtilizationGoal, 
                    short ProductType, 
                    global::System.Nullable<decimal> DefaultList, 
                    global::System.Nullable<global::System.Guid> DefaultRentCalculatorID, 
                    global::System.Nullable<global::System.Guid> DefaultSellCalculatorID, 
                    global::System.Nullable<decimal> DefaultRentRate, 
                    global::System.Nullable<short> DefaultMinimumDayOverride, 
                    global::System.Nullable<decimal> DefaultSell, 
                    global::System.Nullable<decimal> DefaultReplacementCost, 
                    global::System.Nullable<global::System.Guid> ManufacturerID, 
                    string ManufacturerNumber, 
                    global::System.Nullable<global::System.Guid> DefaultFactorID, 
                    global::System.Nullable<global::System.Guid> ProductCategoryID, 
                    global::System.Nullable<global::System.Guid> UomID, 
                    global::System.Nullable<decimal> DefaultAverageCost, 
                    global::System.Nullable<decimal> DefaultCost, 
                    global::System.Nullable<decimal> DefaultLastCost, 
                    global::System.Nullable<decimal> DefaultStandardCost, 
                    global::System.Nullable<double> DefaultROP, 
                    global::System.Nullable<double> DefaultROQ, 
                    string Custom1, 
                    string Custom2, 
                    string Custom3, 
                    string Comment, 
                    bool DefaultInspection) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(ProductID));
            if ((PartNumber == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PartNumber));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Description));
            }
            if ((ModelNumber == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ModelNumber));
            }
            if ((UPCCode == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(UPCCode));
            }
            if ((Weight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Weight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Length.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Length.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Width.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Width.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Height.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Height.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((UtilizationGoal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(UtilizationGoal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((short)(ProductType));
            if ((DefaultList.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(DefaultList.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((DefaultRentCalculatorID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.Guid)(DefaultRentCalculatorID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((DefaultSellCalculatorID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.Guid)(DefaultSellCalculatorID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((DefaultRentRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(DefaultRentRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((DefaultMinimumDayOverride.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((short)(DefaultMinimumDayOverride.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((DefaultSell.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(DefaultSell.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((DefaultReplacementCost.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(DefaultReplacementCost.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ManufacturerID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.Guid)(ManufacturerID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ManufacturerNumber == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(ManufacturerNumber));
            }
            if ((DefaultFactorID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.Guid)(DefaultFactorID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ProductCategoryID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.Guid)(ProductCategoryID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((UomID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((System.Guid)(UomID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((DefaultAverageCost.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(DefaultAverageCost.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((DefaultCost.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(DefaultCost.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((DefaultLastCost.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(DefaultLastCost.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((DefaultStandardCost.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(DefaultStandardCost.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((DefaultROP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(DefaultROP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((DefaultROQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((double)(DefaultROQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Custom1 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Custom1));
            }
            if ((Custom2 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Custom2));
            }
            if ((Custom3 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Custom3));
            }
            if ((Comment == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(Comment));
            }
            this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(DefaultInspection));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid ProductID, 
                    string PartNumber, 
                    string Description, 
                    string ModelNumber, 
                    string UPCCode, 
                    global::System.Nullable<double> Weight, 
                    global::System.Nullable<double> Length, 
                    global::System.Nullable<double> Width, 
                    global::System.Nullable<double> Height, 
                    global::System.Nullable<double> UtilizationGoal, 
                    short ProductType, 
                    global::System.Nullable<decimal> DefaultList, 
                    global::System.Nullable<global::System.Guid> DefaultRentCalculatorID, 
                    global::System.Nullable<global::System.Guid> DefaultSellCalculatorID, 
                    global::System.Nullable<decimal> DefaultRentRate, 
                    global::System.Nullable<short> DefaultMinimumDayOverride, 
                    global::System.Nullable<decimal> DefaultSell, 
                    global::System.Nullable<decimal> DefaultReplacementCost, 
                    global::System.Nullable<global::System.Guid> ManufacturerID, 
                    string ManufacturerNumber, 
                    global::System.Nullable<global::System.Guid> DefaultFactorID, 
                    global::System.Nullable<global::System.Guid> ProductCategoryID, 
                    global::System.Nullable<global::System.Guid> UomID, 
                    global::System.Nullable<decimal> DefaultAverageCost, 
                    global::System.Nullable<decimal> DefaultCost, 
                    global::System.Nullable<decimal> DefaultLastCost, 
                    global::System.Nullable<decimal> DefaultStandardCost, 
                    global::System.Nullable<double> DefaultROP, 
                    global::System.Nullable<double> DefaultROQ, 
                    string Custom1, 
                    string Custom2, 
                    string Custom3, 
                    string Comment, 
                    bool DefaultInspection, 
                    System.Guid Original_ProductID, 
                    byte[] Original_RowVersion) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(ProductID));
            if ((PartNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PartNumber));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Description));
            }
            if ((ModelNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ModelNumber));
            }
            if ((UPCCode == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(UPCCode));
            }
            if ((Weight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Weight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Length.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Length.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Width.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Width.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Height.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Height.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((UtilizationGoal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(UtilizationGoal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((short)(ProductType));
            if ((DefaultList.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(DefaultList.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((DefaultRentCalculatorID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.Guid)(DefaultRentCalculatorID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((DefaultSellCalculatorID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.Guid)(DefaultSellCalculatorID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((DefaultRentRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(DefaultRentRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((DefaultMinimumDayOverride.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((short)(DefaultMinimumDayOverride.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((DefaultSell.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(DefaultSell.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((DefaultReplacementCost.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(DefaultReplacementCost.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ManufacturerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.Guid)(ManufacturerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ManufacturerNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(ManufacturerNumber));
            }
            if ((DefaultFactorID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.Guid)(DefaultFactorID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((ProductCategoryID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.Guid)(ProductCategoryID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((UomID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.Guid)(UomID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((DefaultAverageCost.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(DefaultAverageCost.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((DefaultCost.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(DefaultCost.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((DefaultLastCost.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(DefaultLastCost.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((DefaultStandardCost.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(DefaultStandardCost.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((DefaultROP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(DefaultROP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((DefaultROQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(DefaultROQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Custom1 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Custom1));
            }
            if ((Custom2 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Custom2));
            }
            if ((Custom3 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Custom3));
            }
            if ((Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Comment));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(DefaultInspection));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((System.Guid)(Original_ProductID));
            if ((Original_RowVersion == null)) {
                throw new global::System.ArgumentNullException("Original_RowVersion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((byte[])(Original_RowVersion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PartNumber, 
                    string Description, 
                    string ModelNumber, 
                    string UPCCode, 
                    global::System.Nullable<double> Weight, 
                    global::System.Nullable<double> Length, 
                    global::System.Nullable<double> Width, 
                    global::System.Nullable<double> Height, 
                    global::System.Nullable<double> UtilizationGoal, 
                    short ProductType, 
                    global::System.Nullable<decimal> DefaultList, 
                    global::System.Nullable<global::System.Guid> DefaultRentCalculatorID, 
                    global::System.Nullable<global::System.Guid> DefaultSellCalculatorID, 
                    global::System.Nullable<decimal> DefaultRentRate, 
                    global::System.Nullable<short> DefaultMinimumDayOverride, 
                    global::System.Nullable<decimal> DefaultSell, 
                    global::System.Nullable<decimal> DefaultReplacementCost, 
                    global::System.Nullable<global::System.Guid> ManufacturerID, 
                    string ManufacturerNumber, 
                    global::System.Nullable<global::System.Guid> DefaultFactorID, 
                    global::System.Nullable<global::System.Guid> ProductCategoryID, 
                    global::System.Nullable<global::System.Guid> UomID, 
                    global::System.Nullable<decimal> DefaultAverageCost, 
                    global::System.Nullable<decimal> DefaultCost, 
                    global::System.Nullable<decimal> DefaultLastCost, 
                    global::System.Nullable<decimal> DefaultStandardCost, 
                    global::System.Nullable<double> DefaultROP, 
                    global::System.Nullable<double> DefaultROQ, 
                    string Custom1, 
                    string Custom2, 
                    string Custom3, 
                    string Comment, 
                    bool DefaultInspection, 
                    System.Guid Original_ProductID, 
                    byte[] Original_RowVersion) {
            return this.Update(Original_ProductID, PartNumber, Description, ModelNumber, UPCCode, Weight, Length, Width, Height, UtilizationGoal, ProductType, DefaultList, DefaultRentCalculatorID, DefaultSellCalculatorID, DefaultRentRate, DefaultMinimumDayOverride, DefaultSell, DefaultReplacementCost, ManufacturerID, ManufacturerNumber, DefaultFactorID, ProductCategoryID, UomID, DefaultAverageCost, DefaultCost, DefaultLastCost, DefaultStandardCost, DefaultROP, DefaultROQ, Custom1, Custom2, Custom3, Comment, DefaultInspection, Original_ProductID, Original_RowVersion);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StockingLocationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StockingLocationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StockingLocation";
            tableMapping.ColumnMappings.Add("StockingLocationID", "StockingLocationID");
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("ReceiveTransferCount", "ReceiveTransferCount");
            tableMapping.ColumnMappings.Add("ReceiveReturnCount", "ReceiveReturnCount");
            tableMapping.ColumnMappings.Add("ReceiveDeliveryCount", "ReceiveDeliveryCount");
            tableMapping.ColumnMappings.Add("RequireRequestProducts", "RequireRequestProducts");
            tableMapping.ColumnMappings.Add("TrackRequests", "TrackRequests");
            tableMapping.ColumnMappings.Add("CreateNewFromShortage", "CreateNewFromShortage");
            tableMapping.ColumnMappings.Add("HideQuantities", "HideQuantities");
            tableMapping.ColumnMappings.Add("UtilizationGoal", "UtilizationGoal");
            tableMapping.ColumnMappings.Add("List1Label", "List1Label");
            tableMapping.ColumnMappings.Add("List2Label", "List2Label");
            tableMapping.ColumnMappings.Add("List3Label", "List3Label");
            tableMapping.ColumnMappings.Add("ShowList1", "ShowList1");
            tableMapping.ColumnMappings.Add("ShowList2", "ShowList2");
            tableMapping.ColumnMappings.Add("ShowList3", "ShowList3");
            tableMapping.ColumnMappings.Add("IsBillable", "IsBillable");
            tableMapping.ColumnMappings.Add("IsToolCrib", "IsToolCrib");
            tableMapping.ColumnMappings.Add("TrackScaffoldTags", "TrackScaffoldTags");
            tableMapping.ColumnMappings.Add("DefaultShipmentToBillable", "DefaultShipmentToBillable");
            tableMapping.ColumnMappings.Add("IncludeInProductHistory", "IncludeInProductHistory");
            tableMapping.ColumnMappings.Add("HistoryRateProfileID", "HistoryRateProfileID");
            tableMapping.ColumnMappings.Add("InvoiceOption", "InvoiceOption");
            tableMapping.ColumnMappings.Add("DefaultRateProfileID", "DefaultRateProfileID");
            tableMapping.ColumnMappings.Add("BillingMethod", "BillingMethod");
            tableMapping.ColumnMappings.Add("BillingUserID", "BillingUserID");
            tableMapping.ColumnMappings.Add("ArrearsBillingCycle", "ArrearsBillingCycle");
            tableMapping.ColumnMappings.Add("CycleDaysArrears", "CycleDaysArrears");
            tableMapping.ColumnMappings.Add("MinimumDaysFata", "MinimumDaysFata");
            tableMapping.ColumnMappings.Add("CycleDaysAdvanced", "CycleDaysAdvanced");
            tableMapping.ColumnMappings.Add("MinimumDaysAdvanced", "MinimumDaysAdvanced");
            tableMapping.ColumnMappings.Add("OrderID", "OrderID");
            tableMapping.ColumnMappings.Add("IncludeUnitPricesOnMinimum", "IncludeUnitPricesOnMinimum");
            tableMapping.ColumnMappings.Add("ConsumablesEnabled", "ConsumablesEnabled");
            tableMapping.ColumnMappings.Add("MonthlyBillingCycle", "MonthlyBillingCycle");
            tableMapping.ColumnMappings.Add("DayOfMonth", "DayOfMonth");
            tableMapping.ColumnMappings.Add("FirstInvoiceDate", "FirstInvoiceDate");
            tableMapping.ColumnMappings.Add("AwcFirstInvoiceDate", "AwcFirstInvoiceDate");
            tableMapping.ColumnMappings.Add("AdvanceIsCycled", "AdvanceIsCycled");
            tableMapping.ColumnMappings.Add("CycleBeginDate", "CycleBeginDate");
            tableMapping.ColumnMappings.Add("CycleEndDate", "CycleEndDate");
            tableMapping.ColumnMappings.Add("CycleEndDateOverride", "CycleEndDateOverride");
            tableMapping.ColumnMappings.Add("HideZeroInvoiceItems", "HideZeroInvoiceItems");
            tableMapping.ColumnMappings.Add("GracePeriod", "GracePeriod");
            tableMapping.ColumnMappings.Add("AwcIssueEarlyReturnCredits", "AwcIssueEarlyReturnCredits");
            tableMapping.ColumnMappings.Add("AllowMinimumDayOverride", "AllowMinimumDayOverride");
            tableMapping.ColumnMappings.Add("RentIsTaxable", "RentIsTaxable");
            tableMapping.ColumnMappings.Add("ConsumablesTaxable", "ConsumablesTaxable");
            tableMapping.ColumnMappings.Add("DeliveryChargesTaxable", "DeliveryChargesTaxable");
            tableMapping.ColumnMappings.Add("ContractBillingTaxable", "ContractBillingTaxable");
            tableMapping.ColumnMappings.Add("ServiceTicketDamageChargeTaxable", "ServiceTicketDamageChargeTaxable");
            tableMapping.ColumnMappings.Add("JobTax1ID", "JobTax1ID");
            tableMapping.ColumnMappings.Add("JobTax2ID", "JobTax2ID");
            tableMapping.ColumnMappings.Add("StartDate", "StartDate");
            tableMapping.ColumnMappings.Add("StopDate", "StopDate");
            tableMapping.ColumnMappings.Add("LastDateForRent", "LastDateForRent");
            tableMapping.ColumnMappings.Add("JobDate1", "JobDate1");
            tableMapping.ColumnMappings.Add("JobDate2", "JobDate2");
            tableMapping.ColumnMappings.Add("JobEmployee1ID", "JobEmployee1ID");
            tableMapping.ColumnMappings.Add("JobEmployee2ID", "JobEmployee2ID");
            tableMapping.ColumnMappings.Add("JobEmployee3ID", "JobEmployee3ID");
            tableMapping.ColumnMappings.Add("JobCustomerContact1ID", "JobCustomerContact1ID");
            tableMapping.ColumnMappings.Add("JobCustomerContact2ID", "JobCustomerContact2ID");
            tableMapping.ColumnMappings.Add("JobText1", "JobText1");
            tableMapping.ColumnMappings.Add("JobText2", "JobText2");
            tableMapping.ColumnMappings.Add("JobYesNo1", "JobYesNo1");
            tableMapping.ColumnMappings.Add("JobYesNo2", "JobYesNo2");
            tableMapping.ColumnMappings.Add("JobList1ID", "JobList1ID");
            tableMapping.ColumnMappings.Add("JobList2ID", "JobList2ID");
            tableMapping.ColumnMappings.Add("ReceiveRequireInspection", "ReceiveRequireInspection");
            tableMapping.ColumnMappings.Add("ReceiveOutOfService", "ReceiveOutOfService");
            tableMapping.ColumnMappings.Add("RentalDiscount", "RentalDiscount");
            tableMapping.ColumnMappings.Add("RentalDiscountType", "RentalDiscountType");
            tableMapping.ColumnMappings.Add("MarkupUnitPriceID", "MarkupUnitPriceID");
            tableMapping.ColumnMappings.Add("AllowKioskDamaged", "AllowKioskDamaged");
            tableMapping.ColumnMappings.Add("AllowKioskDamagedBeyondRepair", "AllowKioskDamagedBeyondRepair");
            tableMapping.ColumnMappings.Add("AllowKioskLostMissing", "AllowKioskLostMissing");
            tableMapping.ColumnMappings.Add("InvoiceNotes", "InvoiceNotes");
            tableMapping.ColumnMappings.Add("ScaffoldTagList1Label", "ScaffoldTagList1Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagList2Label", "ScaffoldTagList2Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagList3Label", "ScaffoldTagList3Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagList4Label", "ScaffoldTagList4Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagList5Label", "ScaffoldTagList5Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagList6Label", "ScaffoldTagList6Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagList7Label", "ScaffoldTagList7Label");
            tableMapping.ColumnMappings.Add("UseScaffoldTagList1", "UseScaffoldTagList1");
            tableMapping.ColumnMappings.Add("UseScaffoldTagList2", "UseScaffoldTagList2");
            tableMapping.ColumnMappings.Add("UseScaffoldTagList3", "UseScaffoldTagList3");
            tableMapping.ColumnMappings.Add("UseScaffoldTagList4", "UseScaffoldTagList4");
            tableMapping.ColumnMappings.Add("UseScaffoldTagList5", "UseScaffoldTagList5");
            tableMapping.ColumnMappings.Add("UseScaffoldTagList6", "UseScaffoldTagList6");
            tableMapping.ColumnMappings.Add("UseScaffoldTagList7", "UseScaffoldTagList7");
            tableMapping.ColumnMappings.Add("ScaffoldTagList1Required", "ScaffoldTagList1Required");
            tableMapping.ColumnMappings.Add("ScaffoldTagList2Required", "ScaffoldTagList2Required");
            tableMapping.ColumnMappings.Add("ScaffoldTagList3Required", "ScaffoldTagList3Required");
            tableMapping.ColumnMappings.Add("ScaffoldTagList4Required", "ScaffoldTagList4Required");
            tableMapping.ColumnMappings.Add("ScaffoldTagList5Required", "ScaffoldTagList5Required");
            tableMapping.ColumnMappings.Add("ScaffoldTagList6Required", "ScaffoldTagList6Required");
            tableMapping.ColumnMappings.Add("ScaffoldTagList7Required", "ScaffoldTagList7Required");
            tableMapping.ColumnMappings.Add("UseScaffoldTagDate1", "UseScaffoldTagDate1");
            tableMapping.ColumnMappings.Add("ScaffoldTagDate1Label", "ScaffoldTagDate1Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagDate1Required", "ScaffoldTagDate1Required");
            tableMapping.ColumnMappings.Add("UseScaffoldTagDate2", "UseScaffoldTagDate2");
            tableMapping.ColumnMappings.Add("ScaffoldTagDate2Label", "ScaffoldTagDate2Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagDate2Required", "ScaffoldTagDate2Required");
            tableMapping.ColumnMappings.Add("UseScaffoldTagText1", "UseScaffoldTagText1");
            tableMapping.ColumnMappings.Add("ScaffoldTagText1Label", "ScaffoldTagText1Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagText1Required", "ScaffoldTagText1Required");
            tableMapping.ColumnMappings.Add("UseScaffoldTagText2", "UseScaffoldTagText2");
            tableMapping.ColumnMappings.Add("ScaffoldTagText2Label", "ScaffoldTagText2Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagText2Required", "ScaffoldTagText2Required");
            tableMapping.ColumnMappings.Add("UseScaffoldTagText3", "UseScaffoldTagText3");
            tableMapping.ColumnMappings.Add("ScaffoldTagText3Label", "ScaffoldTagText3Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagText3Required", "ScaffoldTagText3Required");
            tableMapping.ColumnMappings.Add("UseScaffoldTagYesNo1", "UseScaffoldTagYesNo1");
            tableMapping.ColumnMappings.Add("ScaffoldTagYesNo1Label", "ScaffoldTagYesNo1Label");
            tableMapping.ColumnMappings.Add("UseScaffoldTagYesNo2", "UseScaffoldTagYesNo2");
            tableMapping.ColumnMappings.Add("ScaffoldTagYesNo2Label", "ScaffoldTagYesNo2Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagActivityList1Label", "ScaffoldTagActivityList1Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagActivityList2Label", "ScaffoldTagActivityList2Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagActivityList3Label", "ScaffoldTagActivityList3Label");
            tableMapping.ColumnMappings.Add("ScaffoldTagActivityText1Label", "ScaffoldTagActivityText1Label");
            tableMapping.ColumnMappings.Add("UseScaffoldTagActivityList1", "UseScaffoldTagActivityList1");
            tableMapping.ColumnMappings.Add("UseScaffoldTagActivityList2", "UseScaffoldTagActivityList2");
            tableMapping.ColumnMappings.Add("UseScaffoldTagActivityList3", "UseScaffoldTagActivityList3");
            tableMapping.ColumnMappings.Add("UseScaffoldTagActivityText1", "UseScaffoldTagActivityText1");
            tableMapping.ColumnMappings.Add("ScaffoldTagActivityList1Required", "ScaffoldTagActivityList1Required");
            tableMapping.ColumnMappings.Add("ScaffoldTagActivityList2Required", "ScaffoldTagActivityList2Required");
            tableMapping.ColumnMappings.Add("ScaffoldTagActivityList3Required", "ScaffoldTagActivityList3Required");
            tableMapping.ColumnMappings.Add("ScaffoldTagActivityText1Required", "ScaffoldTagActivityText1Required");
            tableMapping.ColumnMappings.Add("TrackScaffoldTagInspections", "TrackScaffoldTagInspections");
            tableMapping.ColumnMappings.Add("InspectionFrequency", "InspectionFrequency");
            tableMapping.ColumnMappings.Add("UseInspectionShifts", "UseInspectionShifts");
            tableMapping.ColumnMappings.Add("UseScaffoldTagActivities", "UseScaffoldTagActivities");
            tableMapping.ColumnMappings.Add("EnforceOffRent", "EnforceOffRent");
            tableMapping.ColumnMappings.Add("ScaffoldStopRentRequired", "ScaffoldStopRentRequired");
            tableMapping.ColumnMappings.Add("IsRentStopped", "IsRentStopped");
            tableMapping.ColumnMappings.Add("LastInvoiced", "LastInvoiced");
            tableMapping.ColumnMappings.Add("TrackContracts", "TrackContracts");
            tableMapping.ColumnMappings.Add("VersionStamp", "VersionStamp");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[StockingLocation] WHERE (([StockingLocationID] = @Original_Sto" +
                "ckingLocationID) AND ([VersionStamp] = @Original_VersionStamp))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VersionStamp", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VersionStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[StockingLocation] ([StockingLocationID], [Number], [ReceiveTra" +
                "nsferCount], [ReceiveReturnCount], [ReceiveDeliveryCount], [RequireRequestProduc" +
                "ts], [TrackRequests], [CreateNewFromShortage], [HideQuantities], [UtilizationGoa" +
                "l], [List1Label], [List2Label], [List3Label], [ShowList1], [ShowList2], [ShowLis" +
                "t3], [IsBillable], [IsToolCrib], [TrackScaffoldTags], [DefaultShipmentToBillable" +
                "], [IncludeInProductHistory], [HistoryRateProfileID], [InvoiceOption], [DefaultR" +
                "ateProfileID], [BillingMethod], [BillingUserID], [ArrearsBillingCycle], [CycleDa" +
                "ysArrears], [MinimumDaysFata], [CycleDaysAdvanced], [MinimumDaysAdvanced], [Orde" +
                "rID], [IncludeUnitPricesOnMinimum], [ConsumablesEnabled], [MonthlyBillingCycle]," +
                " [DayOfMonth], [FirstInvoiceDate], [AwcFirstInvoiceDate], [AdvanceIsCycled], [Cy" +
                "cleBeginDate], [CycleEndDate], [CycleEndDateOverride], [HideZeroInvoiceItems], [" +
                "GracePeriod], [AwcIssueEarlyReturnCredits], [AllowMinimumDayOverride], [RentIsTa" +
                "xable], [ConsumablesTaxable], [DeliveryChargesTaxable], [ContractBillingTaxable]" +
                ", [ServiceTicketDamageChargeTaxable], [JobTax1ID], [JobTax2ID], [StartDate], [St" +
                "opDate], [LastDateForRent], [JobDate1], [JobDate2], [JobEmployee1ID], [JobEmploy" +
                "ee2ID], [JobEmployee3ID], [JobCustomerContact1ID], [JobCustomerContact2ID], [Job" +
                "Text1], [JobText2], [JobYesNo1], [JobYesNo2], [JobList1ID], [JobList2ID], [Recei" +
                "veRequireInspection], [ReceiveOutOfService], [RentalDiscount], [RentalDiscountTy" +
                "pe], [MarkupUnitPriceID], [AllowKioskDamaged], [AllowKioskDamagedBeyondRepair], " +
                "[AllowKioskLostMissing], [InvoiceNotes], [ScaffoldTagList1Label], [ScaffoldTagLi" +
                "st2Label], [ScaffoldTagList3Label], [ScaffoldTagList4Label], [ScaffoldTagList5La" +
                "bel], [ScaffoldTagList6Label], [ScaffoldTagList7Label], [UseScaffoldTagList1], [" +
                "UseScaffoldTagList2], [UseScaffoldTagList3], [UseScaffoldTagList4], [UseScaffold" +
                "TagList5], [UseScaffoldTagList6], [UseScaffoldTagList7], [ScaffoldTagList1Requir" +
                "ed], [ScaffoldTagList2Required], [ScaffoldTagList3Required], [ScaffoldTagList4Re" +
                "quired], [ScaffoldTagList5Required], [ScaffoldTagList6Required], [ScaffoldTagLis" +
                "t7Required], [UseScaffoldTagDate1], [ScaffoldTagDate1Label], [ScaffoldTagDate1Re" +
                "quired], [UseScaffoldTagDate2], [ScaffoldTagDate2Label], [ScaffoldTagDate2Requir" +
                "ed], [UseScaffoldTagText1], [ScaffoldTagText1Label], [ScaffoldTagText1Required]," +
                " [UseScaffoldTagText2], [ScaffoldTagText2Label], [ScaffoldTagText2Required], [Us" +
                "eScaffoldTagText3], [ScaffoldTagText3Label], [ScaffoldTagText3Required], [UseSca" +
                "ffoldTagYesNo1], [ScaffoldTagYesNo1Label], [UseScaffoldTagYesNo2], [ScaffoldTagY" +
                "esNo2Label], [ScaffoldTagActivityList1Label], [ScaffoldTagActivityList2Label], [" +
                "ScaffoldTagActivityList3Label], [ScaffoldTagActivityText1Label], [UseScaffoldTag" +
                "ActivityList1], [UseScaffoldTagActivityList2], [UseScaffoldTagActivityList3], [U" +
                "seScaffoldTagActivityText1], [ScaffoldTagActivityList1Required], [ScaffoldTagAct" +
                "ivityList2Required], [ScaffoldTagActivityList3Required], [ScaffoldTagActivityTex" +
                "t1Required], [TrackScaffoldTagInspections], [InspectionFrequency], [UseInspectio" +
                "nShifts], [UseScaffoldTagActivities], [EnforceOffRent], [ScaffoldStopRentRequire" +
                "d], [IsRentStopped], [LastInvoiced], [TrackContracts]) VALUES (@StockingLocation" +
                "ID, @Number, @ReceiveTransferCount, @ReceiveReturnCount, @ReceiveDeliveryCount, " +
                "@RequireRequestProducts, @TrackRequests, @CreateNewFromShortage, @HideQuantities" +
                ", @UtilizationGoal, @List1Label, @List2Label, @List3Label, @ShowList1, @ShowList" +
                "2, @ShowList3, @IsBillable, @IsToolCrib, @TrackScaffoldTags, @DefaultShipmentToB" +
                "illable, @IncludeInProductHistory, @HistoryRateProfileID, @InvoiceOption, @Defau" +
                "ltRateProfileID, @BillingMethod, @BillingUserID, @ArrearsBillingCycle, @CycleDay" +
                "sArrears, @MinimumDaysFata, @CycleDaysAdvanced, @MinimumDaysAdvanced, @OrderID, " +
                "@IncludeUnitPricesOnMinimum, @ConsumablesEnabled, @MonthlyBillingCycle, @DayOfMo" +
                "nth, @FirstInvoiceDate, @AwcFirstInvoiceDate, @AdvanceIsCycled, @CycleBeginDate," +
                " @CycleEndDate, @CycleEndDateOverride, @HideZeroInvoiceItems, @GracePeriod, @Awc" +
                "IssueEarlyReturnCredits, @AllowMinimumDayOverride, @RentIsTaxable, @ConsumablesT" +
                "axable, @DeliveryChargesTaxable, @ContractBillingTaxable, @ServiceTicketDamageCh" +
                "argeTaxable, @JobTax1ID, @JobTax2ID, @StartDate, @StopDate, @LastDateForRent, @J" +
                "obDate1, @JobDate2, @JobEmployee1ID, @JobEmployee2ID, @JobEmployee3ID, @JobCusto" +
                "merContact1ID, @JobCustomerContact2ID, @JobText1, @JobText2, @JobYesNo1, @JobYes" +
                "No2, @JobList1ID, @JobList2ID, @ReceiveRequireInspection, @ReceiveOutOfService, " +
                "@RentalDiscount, @RentalDiscountType, @MarkupUnitPriceID, @AllowKioskDamaged, @A" +
                "llowKioskDamagedBeyondRepair, @AllowKioskLostMissing, @InvoiceNotes, @ScaffoldTa" +
                "gList1Label, @ScaffoldTagList2Label, @ScaffoldTagList3Label, @ScaffoldTagList4La" +
                "bel, @ScaffoldTagList5Label, @ScaffoldTagList6Label, @ScaffoldTagList7Label, @Us" +
                "eScaffoldTagList1, @UseScaffoldTagList2, @UseScaffoldTagList3, @UseScaffoldTagLi" +
                "st4, @UseScaffoldTagList5, @UseScaffoldTagList6, @UseScaffoldTagList7, @Scaffold" +
                "TagList1Required, @ScaffoldTagList2Required, @ScaffoldTagList3Required, @Scaffol" +
                "dTagList4Required, @ScaffoldTagList5Required, @ScaffoldTagList6Required, @Scaffo" +
                "ldTagList7Required, @UseScaffoldTagDate1, @ScaffoldTagDate1Label, @ScaffoldTagDa" +
                "te1Required, @UseScaffoldTagDate2, @ScaffoldTagDate2Label, @ScaffoldTagDate2Requ" +
                "ired, @UseScaffoldTagText1, @ScaffoldTagText1Label, @ScaffoldTagText1Required, @" +
                "UseScaffoldTagText2, @ScaffoldTagText2Label, @ScaffoldTagText2Required, @UseScaf" +
                "foldTagText3, @ScaffoldTagText3Label, @ScaffoldTagText3Required, @UseScaffoldTag" +
                "YesNo1, @ScaffoldTagYesNo1Label, @UseScaffoldTagYesNo2, @ScaffoldTagYesNo2Label," +
                " @ScaffoldTagActivityList1Label, @ScaffoldTagActivityList2Label, @ScaffoldTagAct" +
                "ivityList3Label, @ScaffoldTagActivityText1Label, @UseScaffoldTagActivityList1, @" +
                "UseScaffoldTagActivityList2, @UseScaffoldTagActivityList3, @UseScaffoldTagActivi" +
                "tyText1, @ScaffoldTagActivityList1Required, @ScaffoldTagActivityList2Required, @" +
                "ScaffoldTagActivityList3Required, @ScaffoldTagActivityText1Required, @TrackScaff" +
                "oldTagInspections, @InspectionFrequency, @UseInspectionShifts, @UseScaffoldTagAc" +
                "tivities, @EnforceOffRent, @ScaffoldStopRentRequired, @IsRentStopped, @LastInvoi" +
                "ced, @TrackContracts);\r\nSELECT StockingLocationID, Number, ReceiveTransferCount," +
                " ReceiveReturnCount, ReceiveDeliveryCount, RequireRequestProducts, TrackRequests" +
                ", CreateNewFromShortage, HideQuantities, UtilizationGoal, List1Label, List2Label" +
                ", List3Label, ShowList1, ShowList2, ShowList3, IsBillable, IsToolCrib, TrackScaf" +
                "foldTags, DefaultShipmentToBillable, IncludeInProductHistory, HistoryRateProfile" +
                "ID, InvoiceOption, DefaultRateProfileID, BillingMethod, BillingUserID, ArrearsBi" +
                "llingCycle, CycleDaysArrears, MinimumDaysFata, CycleDaysAdvanced, MinimumDaysAdv" +
                "anced, OrderID, IncludeUnitPricesOnMinimum, ConsumablesEnabled, MonthlyBillingCy" +
                "cle, DayOfMonth, FirstInvoiceDate, AwcFirstInvoiceDate, AdvanceIsCycled, CycleBe" +
                "ginDate, CycleEndDate, CycleEndDateOverride, HideZeroInvoiceItems, GracePeriod, " +
                "AwcIssueEarlyReturnCredits, AllowMinimumDayOverride, RentIsTaxable, ConsumablesT" +
                "axable, DeliveryChargesTaxable, ContractBillingTaxable, ServiceTicketDamageCharg" +
                "eTaxable, JobTax1ID, JobTax2ID, StartDate, StopDate, LastDateForRent, JobDate1, " +
                "JobDate2, JobEmployee1ID, JobEmployee2ID, JobEmployee3ID, JobCustomerContact1ID," +
                " JobCustomerContact2ID, JobText1, JobText2, JobYesNo1, JobYesNo2, JobList1ID, Jo" +
                "bList2ID, ReceiveRequireInspection, ReceiveOutOfService, RentalDiscount, RentalD" +
                "iscountType, MarkupUnitPriceID, AllowKioskDamaged, AllowKioskDamagedBeyondRepair" +
                ", AllowKioskLostMissing, InvoiceNotes, ScaffoldTagList1Label, ScaffoldTagList2La" +
                "bel, ScaffoldTagList3Label, ScaffoldTagList4Label, ScaffoldTagList5Label, Scaffo" +
                "ldTagList6Label, ScaffoldTagList7Label, UseScaffoldTagList1, UseScaffoldTagList2" +
                ", UseScaffoldTagList3, UseScaffoldTagList4, UseScaffoldTagList5, UseScaffoldTagL" +
                "ist6, UseScaffoldTagList7, ScaffoldTagList1Required, ScaffoldTagList2Required, S" +
                "caffoldTagList3Required, ScaffoldTagList4Required, ScaffoldTagList5Required, Sca" +
                "ffoldTagList6Required, ScaffoldTagList7Required, UseScaffoldTagDate1, ScaffoldTa" +
                "gDate1Label, ScaffoldTagDate1Required, UseScaffoldTagDate2, ScaffoldTagDate2Labe" +
                "l, ScaffoldTagDate2Required, UseScaffoldTagText1, ScaffoldTagText1Label, Scaffol" +
                "dTagText1Required, UseScaffoldTagText2, ScaffoldTagText2Label, ScaffoldTagText2R" +
                "equired, UseScaffoldTagText3, ScaffoldTagText3Label, ScaffoldTagText3Required, U" +
                "seScaffoldTagYesNo1, ScaffoldTagYesNo1Label, UseScaffoldTagYesNo2, ScaffoldTagYe" +
                "sNo2Label, ScaffoldTagActivityList1Label, ScaffoldTagActivityList2Label, Scaffol" +
                "dTagActivityList3Label, ScaffoldTagActivityText1Label, UseScaffoldTagActivityLis" +
                "t1, UseScaffoldTagActivityList2, UseScaffoldTagActivityList3, UseScaffoldTagActi" +
                "vityText1, ScaffoldTagActivityList1Required, ScaffoldTagActivityList2Required, S" +
                "caffoldTagActivityList3Required, ScaffoldTagActivityText1Required, TrackScaffold" +
                "TagInspections, InspectionFrequency, UseInspectionShifts, UseScaffoldTagActiviti" +
                "es, EnforceOffRent, ScaffoldStopRentRequired, IsRentStopped, LastInvoiced, Track" +
                "Contracts, VersionStamp FROM StockingLocation WHERE (StockingLocationID = @Stock" +
                "ingLocationID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Number", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveTransferCount", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveTransferCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveReturnCount", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveReturnCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveDeliveryCount", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveDeliveryCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequireRequestProducts", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequireRequestProducts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackRequests", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackRequests", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateNewFromShortage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateNewFromShortage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HideQuantities", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideQuantities", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UtilizationGoal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UtilizationGoal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@List1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "List1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@List2Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "List2Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@List3Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "List3Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShowList1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShowList1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShowList2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShowList2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShowList3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShowList3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsBillable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsBillable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsToolCrib", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsToolCrib", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackScaffoldTags", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackScaffoldTags", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultShipmentToBillable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultShipmentToBillable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IncludeInProductHistory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IncludeInProductHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HistoryRateProfileID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HistoryRateProfileID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceOption", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceOption", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultRateProfileID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultRateProfileID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillingMethod", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillingUserID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingUserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrearsBillingCycle", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrearsBillingCycle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleDaysArrears", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleDaysArrears", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinimumDaysFata", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinimumDaysFata", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleDaysAdvanced", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleDaysAdvanced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinimumDaysAdvanced", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinimumDaysAdvanced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IncludeUnitPricesOnMinimum", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IncludeUnitPricesOnMinimum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsumablesEnabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumablesEnabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthlyBillingCycle", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyBillingCycle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayOfMonth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayOfMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstInvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstInvoiceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AwcFirstInvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AwcFirstInvoiceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvanceIsCycled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvanceIsCycled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleBeginDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleBeginDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleEndDateOverride", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleEndDateOverride", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HideZeroInvoiceItems", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideZeroInvoiceItems", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GracePeriod", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GracePeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AwcIssueEarlyReturnCredits", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AwcIssueEarlyReturnCredits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowMinimumDayOverride", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowMinimumDayOverride", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentIsTaxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentIsTaxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsumablesTaxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumablesTaxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryChargesTaxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryChargesTaxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractBillingTaxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractBillingTaxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceTicketDamageChargeTaxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceTicketDamageChargeTaxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobTax1ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTax1ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobTax2ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTax2ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StopDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastDateForRent", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastDateForRent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDate1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDate2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobEmployee1ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobEmployee1ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobEmployee2ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobEmployee2ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobEmployee3ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobEmployee3ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobCustomerContact1ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobCustomerContact1ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobCustomerContact2ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobCustomerContact2ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobText1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobText1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobText2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobText2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobYesNo1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobYesNo1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobYesNo2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobYesNo2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobList1ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobList1ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobList2ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobList2ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveRequireInspection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveRequireInspection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveOutOfService", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveOutOfService", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentalDiscount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentalDiscountType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalDiscountType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarkupUnitPriceID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkupUnitPriceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowKioskDamaged", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowKioskDamaged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowKioskDamagedBeyondRepair", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowKioskDamagedBeyondRepair", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowKioskLostMissing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowKioskLostMissing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNotes", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNotes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList2Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList2Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList3Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList3Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList4Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList4Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList5Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList5Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList6Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList6Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList7Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList7Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList5", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList6", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList7", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList1Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList1Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList2Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList2Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList3Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList3Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList4Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList4Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList5Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList5Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList6Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList6Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList7Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList7Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagDate1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagDate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagDate1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagDate1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagDate1Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagDate1Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagDate2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagDate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagDate2Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagDate2Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagDate2Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagDate2Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagText1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagText1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagText1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagText1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagText1Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagText1Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagText2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagText2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagText2Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagText2Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagText2Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagText2Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagText3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagText3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagText3Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagText3Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagText3Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagText3Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagYesNo1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagYesNo1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagYesNo1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagYesNo1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagYesNo2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagYesNo2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagYesNo2Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagYesNo2Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityList1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityList1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityList2Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityList2Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityList3Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityList3Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityText1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityText1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagActivityList1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagActivityList1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagActivityList2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagActivityList2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagActivityList3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagActivityList3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagActivityText1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagActivityText1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityList1Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityList1Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityList2Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityList2Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityList3Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityList3Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityText1Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityText1Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackScaffoldTagInspections", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackScaffoldTagInspections", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InspectionFrequency", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InspectionFrequency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseInspectionShifts", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseInspectionShifts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagActivities", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagActivities", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnforceOffRent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnforceOffRent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldStopRentRequired", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldStopRentRequired", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsRentStopped", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRentStopped", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastInvoiced", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastInvoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackContracts", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackContracts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[StockingLocation] SET [StockingLocationID] = @StockingLocationID, [" +
                "Number] = @Number, [ReceiveTransferCount] = @ReceiveTransferCount, [ReceiveRetur" +
                "nCount] = @ReceiveReturnCount, [ReceiveDeliveryCount] = @ReceiveDeliveryCount, [" +
                "RequireRequestProducts] = @RequireRequestProducts, [TrackRequests] = @TrackReque" +
                "sts, [CreateNewFromShortage] = @CreateNewFromShortage, [HideQuantities] = @HideQ" +
                "uantities, [UtilizationGoal] = @UtilizationGoal, [List1Label] = @List1Label, [Li" +
                "st2Label] = @List2Label, [List3Label] = @List3Label, [ShowList1] = @ShowList1, [" +
                "ShowList2] = @ShowList2, [ShowList3] = @ShowList3, [IsBillable] = @IsBillable, [" +
                "IsToolCrib] = @IsToolCrib, [TrackScaffoldTags] = @TrackScaffoldTags, [DefaultShi" +
                "pmentToBillable] = @DefaultShipmentToBillable, [IncludeInProductHistory] = @Incl" +
                "udeInProductHistory, [HistoryRateProfileID] = @HistoryRateProfileID, [InvoiceOpt" +
                "ion] = @InvoiceOption, [DefaultRateProfileID] = @DefaultRateProfileID, [BillingM" +
                "ethod] = @BillingMethod, [BillingUserID] = @BillingUserID, [ArrearsBillingCycle]" +
                " = @ArrearsBillingCycle, [CycleDaysArrears] = @CycleDaysArrears, [MinimumDaysFat" +
                "a] = @MinimumDaysFata, [CycleDaysAdvanced] = @CycleDaysAdvanced, [MinimumDaysAdv" +
                "anced] = @MinimumDaysAdvanced, [OrderID] = @OrderID, [IncludeUnitPricesOnMinimum" +
                "] = @IncludeUnitPricesOnMinimum, [ConsumablesEnabled] = @ConsumablesEnabled, [Mo" +
                "nthlyBillingCycle] = @MonthlyBillingCycle, [DayOfMonth] = @DayOfMonth, [FirstInv" +
                "oiceDate] = @FirstInvoiceDate, [AwcFirstInvoiceDate] = @AwcFirstInvoiceDate, [Ad" +
                "vanceIsCycled] = @AdvanceIsCycled, [CycleBeginDate] = @CycleBeginDate, [CycleEnd" +
                "Date] = @CycleEndDate, [CycleEndDateOverride] = @CycleEndDateOverride, [HideZero" +
                "InvoiceItems] = @HideZeroInvoiceItems, [GracePeriod] = @GracePeriod, [AwcIssueEa" +
                "rlyReturnCredits] = @AwcIssueEarlyReturnCredits, [AllowMinimumDayOverride] = @Al" +
                "lowMinimumDayOverride, [RentIsTaxable] = @RentIsTaxable, [ConsumablesTaxable] = " +
                "@ConsumablesTaxable, [DeliveryChargesTaxable] = @DeliveryChargesTaxable, [Contra" +
                "ctBillingTaxable] = @ContractBillingTaxable, [ServiceTicketDamageChargeTaxable] " +
                "= @ServiceTicketDamageChargeTaxable, [JobTax1ID] = @JobTax1ID, [JobTax2ID] = @Jo" +
                "bTax2ID, [StartDate] = @StartDate, [StopDate] = @StopDate, [LastDateForRent] = @" +
                "LastDateForRent, [JobDate1] = @JobDate1, [JobDate2] = @JobDate2, [JobEmployee1ID" +
                "] = @JobEmployee1ID, [JobEmployee2ID] = @JobEmployee2ID, [JobEmployee3ID] = @Job" +
                "Employee3ID, [JobCustomerContact1ID] = @JobCustomerContact1ID, [JobCustomerConta" +
                "ct2ID] = @JobCustomerContact2ID, [JobText1] = @JobText1, [JobText2] = @JobText2," +
                " [JobYesNo1] = @JobYesNo1, [JobYesNo2] = @JobYesNo2, [JobList1ID] = @JobList1ID," +
                " [JobList2ID] = @JobList2ID, [ReceiveRequireInspection] = @ReceiveRequireInspect" +
                "ion, [ReceiveOutOfService] = @ReceiveOutOfService, [RentalDiscount] = @RentalDis" +
                "count, [RentalDiscountType] = @RentalDiscountType, [MarkupUnitPriceID] = @Markup" +
                "UnitPriceID, [AllowKioskDamaged] = @AllowKioskDamaged, [AllowKioskDamagedBeyondR" +
                "epair] = @AllowKioskDamagedBeyondRepair, [AllowKioskLostMissing] = @AllowKioskLo" +
                "stMissing, [InvoiceNotes] = @InvoiceNotes, [ScaffoldTagList1Label] = @ScaffoldTa" +
                "gList1Label, [ScaffoldTagList2Label] = @ScaffoldTagList2Label, [ScaffoldTagList3" +
                "Label] = @ScaffoldTagList3Label, [ScaffoldTagList4Label] = @ScaffoldTagList4Labe" +
                "l, [ScaffoldTagList5Label] = @ScaffoldTagList5Label, [ScaffoldTagList6Label] = @" +
                "ScaffoldTagList6Label, [ScaffoldTagList7Label] = @ScaffoldTagList7Label, [UseSca" +
                "ffoldTagList1] = @UseScaffoldTagList1, [UseScaffoldTagList2] = @UseScaffoldTagLi" +
                "st2, [UseScaffoldTagList3] = @UseScaffoldTagList3, [UseScaffoldTagList4] = @UseS" +
                "caffoldTagList4, [UseScaffoldTagList5] = @UseScaffoldTagList5, [UseScaffoldTagLi" +
                "st6] = @UseScaffoldTagList6, [UseScaffoldTagList7] = @UseScaffoldTagList7, [Scaf" +
                "foldTagList1Required] = @ScaffoldTagList1Required, [ScaffoldTagList2Required] = " +
                "@ScaffoldTagList2Required, [ScaffoldTagList3Required] = @ScaffoldTagList3Require" +
                "d, [ScaffoldTagList4Required] = @ScaffoldTagList4Required, [ScaffoldTagList5Requ" +
                "ired] = @ScaffoldTagList5Required, [ScaffoldTagList6Required] = @ScaffoldTagList" +
                "6Required, [ScaffoldTagList7Required] = @ScaffoldTagList7Required, [UseScaffoldT" +
                "agDate1] = @UseScaffoldTagDate1, [ScaffoldTagDate1Label] = @ScaffoldTagDate1Labe" +
                "l, [ScaffoldTagDate1Required] = @ScaffoldTagDate1Required, [UseScaffoldTagDate2]" +
                " = @UseScaffoldTagDate2, [ScaffoldTagDate2Label] = @ScaffoldTagDate2Label, [Scaf" +
                "foldTagDate2Required] = @ScaffoldTagDate2Required, [UseScaffoldTagText1] = @UseS" +
                "caffoldTagText1, [ScaffoldTagText1Label] = @ScaffoldTagText1Label, [ScaffoldTagT" +
                "ext1Required] = @ScaffoldTagText1Required, [UseScaffoldTagText2] = @UseScaffoldT" +
                "agText2, [ScaffoldTagText2Label] = @ScaffoldTagText2Label, [ScaffoldTagText2Requ" +
                "ired] = @ScaffoldTagText2Required, [UseScaffoldTagText3] = @UseScaffoldTagText3," +
                " [ScaffoldTagText3Label] = @ScaffoldTagText3Label, [ScaffoldTagText3Required] = " +
                "@ScaffoldTagText3Required, [UseScaffoldTagYesNo1] = @UseScaffoldTagYesNo1, [Scaf" +
                "foldTagYesNo1Label] = @ScaffoldTagYesNo1Label, [UseScaffoldTagYesNo2] = @UseScaf" +
                "foldTagYesNo2, [ScaffoldTagYesNo2Label] = @ScaffoldTagYesNo2Label, [ScaffoldTagA" +
                "ctivityList1Label] = @ScaffoldTagActivityList1Label, [ScaffoldTagActivityList2La" +
                "bel] = @ScaffoldTagActivityList2Label, [ScaffoldTagActivityList3Label] = @Scaffo" +
                "ldTagActivityList3Label, [ScaffoldTagActivityText1Label] = @ScaffoldTagActivityT" +
                "ext1Label, [UseScaffoldTagActivityList1] = @UseScaffoldTagActivityList1, [UseSca" +
                "ffoldTagActivityList2] = @UseScaffoldTagActivityList2, [UseScaffoldTagActivityLi" +
                "st3] = @UseScaffoldTagActivityList3, [UseScaffoldTagActivityText1] = @UseScaffol" +
                "dTagActivityText1, [ScaffoldTagActivityList1Required] = @ScaffoldTagActivityList" +
                "1Required, [ScaffoldTagActivityList2Required] = @ScaffoldTagActivityList2Require" +
                "d, [ScaffoldTagActivityList3Required] = @ScaffoldTagActivityList3Required, [Scaf" +
                "foldTagActivityText1Required] = @ScaffoldTagActivityText1Required, [TrackScaffol" +
                "dTagInspections] = @TrackScaffoldTagInspections, [InspectionFrequency] = @Inspec" +
                "tionFrequency, [UseInspectionShifts] = @UseInspectionShifts, [UseScaffoldTagActi" +
                "vities] = @UseScaffoldTagActivities, [EnforceOffRent] = @EnforceOffRent, [Scaffo" +
                "ldStopRentRequired] = @ScaffoldStopRentRequired, [IsRentStopped] = @IsRentStoppe" +
                "d, [LastInvoiced] = @LastInvoiced, [TrackContracts] = @TrackContracts WHERE (([S" +
                "tockingLocationID] = @Original_StockingLocationID) AND ([VersionStamp] = @Origin" +
                "al_VersionStamp));\r\nSELECT StockingLocationID, Number, ReceiveTransferCount, Rec" +
                "eiveReturnCount, ReceiveDeliveryCount, RequireRequestProducts, TrackRequests, Cr" +
                "eateNewFromShortage, HideQuantities, UtilizationGoal, List1Label, List2Label, Li" +
                "st3Label, ShowList1, ShowList2, ShowList3, IsBillable, IsToolCrib, TrackScaffold" +
                "Tags, DefaultShipmentToBillable, IncludeInProductHistory, HistoryRateProfileID, " +
                "InvoiceOption, DefaultRateProfileID, BillingMethod, BillingUserID, ArrearsBillin" +
                "gCycle, CycleDaysArrears, MinimumDaysFata, CycleDaysAdvanced, MinimumDaysAdvance" +
                "d, OrderID, IncludeUnitPricesOnMinimum, ConsumablesEnabled, MonthlyBillingCycle," +
                " DayOfMonth, FirstInvoiceDate, AwcFirstInvoiceDate, AdvanceIsCycled, CycleBeginD" +
                "ate, CycleEndDate, CycleEndDateOverride, HideZeroInvoiceItems, GracePeriod, AwcI" +
                "ssueEarlyReturnCredits, AllowMinimumDayOverride, RentIsTaxable, ConsumablesTaxab" +
                "le, DeliveryChargesTaxable, ContractBillingTaxable, ServiceTicketDamageChargeTax" +
                "able, JobTax1ID, JobTax2ID, StartDate, StopDate, LastDateForRent, JobDate1, JobD" +
                "ate2, JobEmployee1ID, JobEmployee2ID, JobEmployee3ID, JobCustomerContact1ID, Job" +
                "CustomerContact2ID, JobText1, JobText2, JobYesNo1, JobYesNo2, JobList1ID, JobLis" +
                "t2ID, ReceiveRequireInspection, ReceiveOutOfService, RentalDiscount, RentalDisco" +
                "untType, MarkupUnitPriceID, AllowKioskDamaged, AllowKioskDamagedBeyondRepair, Al" +
                "lowKioskLostMissing, InvoiceNotes, ScaffoldTagList1Label, ScaffoldTagList2Label," +
                " ScaffoldTagList3Label, ScaffoldTagList4Label, ScaffoldTagList5Label, ScaffoldTa" +
                "gList6Label, ScaffoldTagList7Label, UseScaffoldTagList1, UseScaffoldTagList2, Us" +
                "eScaffoldTagList3, UseScaffoldTagList4, UseScaffoldTagList5, UseScaffoldTagList6" +
                ", UseScaffoldTagList7, ScaffoldTagList1Required, ScaffoldTagList2Required, Scaff" +
                "oldTagList3Required, ScaffoldTagList4Required, ScaffoldTagList5Required, Scaffol" +
                "dTagList6Required, ScaffoldTagList7Required, UseScaffoldTagDate1, ScaffoldTagDat" +
                "e1Label, ScaffoldTagDate1Required, UseScaffoldTagDate2, ScaffoldTagDate2Label, S" +
                "caffoldTagDate2Required, UseScaffoldTagText1, ScaffoldTagText1Label, ScaffoldTag" +
                "Text1Required, UseScaffoldTagText2, ScaffoldTagText2Label, ScaffoldTagText2Requi" +
                "red, UseScaffoldTagText3, ScaffoldTagText3Label, ScaffoldTagText3Required, UseSc" +
                "affoldTagYesNo1, ScaffoldTagYesNo1Label, UseScaffoldTagYesNo2, ScaffoldTagYesNo2" +
                "Label, ScaffoldTagActivityList1Label, ScaffoldTagActivityList2Label, ScaffoldTag" +
                "ActivityList3Label, ScaffoldTagActivityText1Label, UseScaffoldTagActivityList1, " +
                "UseScaffoldTagActivityList2, UseScaffoldTagActivityList3, UseScaffoldTagActivity" +
                "Text1, ScaffoldTagActivityList1Required, ScaffoldTagActivityList2Required, Scaff" +
                "oldTagActivityList3Required, ScaffoldTagActivityText1Required, TrackScaffoldTagI" +
                "nspections, InspectionFrequency, UseInspectionShifts, UseScaffoldTagActivities, " +
                "EnforceOffRent, ScaffoldStopRentRequired, IsRentStopped, LastInvoiced, TrackCont" +
                "racts, VersionStamp FROM StockingLocation WHERE (StockingLocationID = @StockingL" +
                "ocationID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Number", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveTransferCount", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveTransferCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveReturnCount", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveReturnCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveDeliveryCount", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveDeliveryCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RequireRequestProducts", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RequireRequestProducts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackRequests", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackRequests", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateNewFromShortage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateNewFromShortage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HideQuantities", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideQuantities", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UtilizationGoal", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UtilizationGoal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@List1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "List1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@List2Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "List2Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@List3Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "List3Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShowList1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShowList1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShowList2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShowList2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShowList3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShowList3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsBillable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsBillable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsToolCrib", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsToolCrib", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackScaffoldTags", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackScaffoldTags", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultShipmentToBillable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultShipmentToBillable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IncludeInProductHistory", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IncludeInProductHistory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HistoryRateProfileID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HistoryRateProfileID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceOption", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceOption", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultRateProfileID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultRateProfileID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillingMethod", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillingUserID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingUserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrearsBillingCycle", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrearsBillingCycle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleDaysArrears", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleDaysArrears", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinimumDaysFata", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinimumDaysFata", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleDaysAdvanced", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleDaysAdvanced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinimumDaysAdvanced", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinimumDaysAdvanced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IncludeUnitPricesOnMinimum", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IncludeUnitPricesOnMinimum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsumablesEnabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumablesEnabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MonthlyBillingCycle", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MonthlyBillingCycle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayOfMonth", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayOfMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstInvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstInvoiceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AwcFirstInvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AwcFirstInvoiceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvanceIsCycled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvanceIsCycled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleBeginDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleBeginDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CycleEndDateOverride", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CycleEndDateOverride", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HideZeroInvoiceItems", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideZeroInvoiceItems", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GracePeriod", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GracePeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AwcIssueEarlyReturnCredits", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AwcIssueEarlyReturnCredits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowMinimumDayOverride", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowMinimumDayOverride", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentIsTaxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentIsTaxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsumablesTaxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumablesTaxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryChargesTaxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryChargesTaxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractBillingTaxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractBillingTaxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceTicketDamageChargeTaxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ServiceTicketDamageChargeTaxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobTax1ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTax1ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobTax2ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobTax2ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StopDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastDateForRent", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastDateForRent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDate1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobDate2", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobDate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobEmployee1ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobEmployee1ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobEmployee2ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobEmployee2ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobEmployee3ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobEmployee3ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobCustomerContact1ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobCustomerContact1ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobCustomerContact2ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobCustomerContact2ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobText1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobText1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobText2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobText2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobYesNo1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobYesNo1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobYesNo2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobYesNo2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobList1ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobList1ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobList2ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobList2ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveRequireInspection", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveRequireInspection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceiveOutOfService", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceiveOutOfService", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentalDiscount", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentalDiscountType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalDiscountType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarkupUnitPriceID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkupUnitPriceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowKioskDamaged", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowKioskDamaged", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowKioskDamagedBeyondRepair", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowKioskDamagedBeyondRepair", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowKioskLostMissing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AllowKioskLostMissing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNotes", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNotes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList2Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList2Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList3Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList3Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList4Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList4Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList5Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList5Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList6Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList6Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList7Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList7Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList5", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList6", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagList7", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagList7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList1Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList1Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList2Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList2Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList3Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList3Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList4Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList4Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList5Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList5Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList6Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList6Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagList7Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagList7Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagDate1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagDate1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagDate1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagDate1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagDate1Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagDate1Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagDate2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagDate2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagDate2Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagDate2Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagDate2Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagDate2Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagText1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagText1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagText1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagText1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagText1Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagText1Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagText2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagText2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagText2Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagText2Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagText2Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagText2Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagText3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagText3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagText3Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagText3Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagText3Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagText3Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagYesNo1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagYesNo1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagYesNo1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagYesNo1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagYesNo2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagYesNo2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagYesNo2Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagYesNo2Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityList1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityList1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityList2Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityList2Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityList3Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityList3Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityText1Label", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityText1Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagActivityList1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagActivityList1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagActivityList2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagActivityList2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagActivityList3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagActivityList3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagActivityText1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagActivityText1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityList1Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityList1Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityList2Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityList2Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityList3Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityList3Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldTagActivityText1Required", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldTagActivityText1Required", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackScaffoldTagInspections", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackScaffoldTagInspections", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InspectionFrequency", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InspectionFrequency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseInspectionShifts", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseInspectionShifts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseScaffoldTagActivities", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseScaffoldTagActivities", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnforceOffRent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnforceOffRent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScaffoldStopRentRequired", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScaffoldStopRentRequired", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsRentStopped", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRentStopped", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastInvoiced", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastInvoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrackContracts", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrackContracts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VersionStamp", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VersionStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Quantify.API.Properties.Settings.Default.ASIRentalManagerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT StockingLocationID, Number, ReceiveTransferCount, ReceiveReturnCount, Rece" +
                "iveDeliveryCount, RequireRequestProducts, TrackRequests, CreateNewFromShortage, " +
                "HideQuantities, UtilizationGoal, List1Label, List2Label, List3Label, ShowList1, " +
                "ShowList2, ShowList3, IsBillable, IsToolCrib, TrackScaffoldTags, DefaultShipment" +
                "ToBillable, IncludeInProductHistory, HistoryRateProfileID, InvoiceOption, Defaul" +
                "tRateProfileID, BillingMethod, BillingUserID, ArrearsBillingCycle, CycleDaysArre" +
                "ars, MinimumDaysFata, CycleDaysAdvanced, MinimumDaysAdvanced, OrderID, IncludeUn" +
                "itPricesOnMinimum, ConsumablesEnabled, MonthlyBillingCycle, DayOfMonth, FirstInv" +
                "oiceDate, AwcFirstInvoiceDate, AdvanceIsCycled, CycleBeginDate, CycleEndDate, Cy" +
                "cleEndDateOverride, HideZeroInvoiceItems, GracePeriod, AwcIssueEarlyReturnCredit" +
                "s, AllowMinimumDayOverride, RentIsTaxable, ConsumablesTaxable, DeliveryChargesTa" +
                "xable, ContractBillingTaxable, ServiceTicketDamageChargeTaxable, JobTax1ID, JobT" +
                "ax2ID, StartDate, StopDate, LastDateForRent, JobDate1, JobDate2, JobEmployee1ID," +
                " JobEmployee2ID, JobEmployee3ID, JobCustomerContact1ID, JobCustomerContact2ID, J" +
                "obText1, JobText2, JobYesNo1, JobYesNo2, JobList1ID, JobList2ID, ReceiveRequireI" +
                "nspection, ReceiveOutOfService, RentalDiscount, RentalDiscountType, MarkupUnitPr" +
                "iceID, AllowKioskDamaged, AllowKioskDamagedBeyondRepair, AllowKioskLostMissing, " +
                "InvoiceNotes, ScaffoldTagList1Label, ScaffoldTagList2Label, ScaffoldTagList3Labe" +
                "l, ScaffoldTagList4Label, ScaffoldTagList5Label, ScaffoldTagList6Label, Scaffold" +
                "TagList7Label, UseScaffoldTagList1, UseScaffoldTagList2, UseScaffoldTagList3, Us" +
                "eScaffoldTagList4, UseScaffoldTagList5, UseScaffoldTagList6, UseScaffoldTagList7" +
                ", ScaffoldTagList1Required, ScaffoldTagList2Required, ScaffoldTagList3Required, " +
                "ScaffoldTagList4Required, ScaffoldTagList5Required, ScaffoldTagList6Required, Sc" +
                "affoldTagList7Required, UseScaffoldTagDate1, ScaffoldTagDate1Label, ScaffoldTagD" +
                "ate1Required, UseScaffoldTagDate2, ScaffoldTagDate2Label, ScaffoldTagDate2Requir" +
                "ed, UseScaffoldTagText1, ScaffoldTagText1Label, ScaffoldTagText1Required, UseSca" +
                "ffoldTagText2, ScaffoldTagText2Label, ScaffoldTagText2Required, UseScaffoldTagTe" +
                "xt3, ScaffoldTagText3Label, ScaffoldTagText3Required, UseScaffoldTagYesNo1, Scaf" +
                "foldTagYesNo1Label, UseScaffoldTagYesNo2, ScaffoldTagYesNo2Label, ScaffoldTagAct" +
                "ivityList1Label, ScaffoldTagActivityList2Label, ScaffoldTagActivityList3Label, S" +
                "caffoldTagActivityText1Label, UseScaffoldTagActivityList1, UseScaffoldTagActivit" +
                "yList2, UseScaffoldTagActivityList3, UseScaffoldTagActivityText1, ScaffoldTagAct" +
                "ivityList1Required, ScaffoldTagActivityList2Required, ScaffoldTagActivityList3Re" +
                "quired, ScaffoldTagActivityText1Required, TrackScaffoldTagInspections, Inspectio" +
                "nFrequency, UseInspectionShifts, UseScaffoldTagActivities, EnforceOffRent, Scaff" +
                "oldStopRentRequired, IsRentStopped, LastInvoiced, TrackContracts, VersionStamp F" +
                "ROM dbo.StockingLocation";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsQuantify.StockingLocationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsQuantify.StockingLocationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsQuantify.StockingLocationDataTable dataTable = new DsQuantify.StockingLocationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify.StockingLocationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify dataSet) {
            return this.Adapter.Update(dataSet, "StockingLocation");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_StockingLocationID, byte[] Original_VersionStamp) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_StockingLocationID));
            if ((Original_VersionStamp == null)) {
                throw new global::System.ArgumentNullException("Original_VersionStamp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((byte[])(Original_VersionStamp));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Guid StockingLocationID, 
                    string Number, 
                    bool ReceiveTransferCount, 
                    bool ReceiveReturnCount, 
                    bool ReceiveDeliveryCount, 
                    bool RequireRequestProducts, 
                    bool TrackRequests, 
                    bool CreateNewFromShortage, 
                    bool HideQuantities, 
                    global::System.Nullable<double> UtilizationGoal, 
                    string List1Label, 
                    string List2Label, 
                    string List3Label, 
                    bool ShowList1, 
                    bool ShowList2, 
                    bool ShowList3, 
                    bool IsBillable, 
                    bool IsToolCrib, 
                    bool TrackScaffoldTags, 
                    global::System.Nullable<bool> DefaultShipmentToBillable, 
                    bool IncludeInProductHistory, 
                    global::System.Nullable<global::System.Guid> HistoryRateProfileID, 
                    short InvoiceOption, 
                    global::System.Nullable<global::System.Guid> DefaultRateProfileID, 
                    global::System.Nullable<short> BillingMethod, 
                    global::System.Nullable<global::System.Guid> BillingUserID, 
                    global::System.Nullable<short> ArrearsBillingCycle, 
                    global::System.Nullable<short> CycleDaysArrears, 
                    global::System.Nullable<short> MinimumDaysFata, 
                    global::System.Nullable<short> CycleDaysAdvanced, 
                    global::System.Nullable<short> MinimumDaysAdvanced, 
                    global::System.Nullable<global::System.Guid> OrderID, 
                    bool IncludeUnitPricesOnMinimum, 
                    bool ConsumablesEnabled, 
                    global::System.Nullable<short> MonthlyBillingCycle, 
                    global::System.Nullable<short> DayOfMonth, 
                    global::System.Nullable<global::System.DateTime> FirstInvoiceDate, 
                    global::System.Nullable<global::System.DateTime> AwcFirstInvoiceDate, 
                    global::System.Nullable<bool> AdvanceIsCycled, 
                    global::System.Nullable<global::System.DateTime> CycleBeginDate, 
                    global::System.Nullable<global::System.DateTime> CycleEndDate, 
                    global::System.Nullable<global::System.DateTime> CycleEndDateOverride, 
                    global::System.Nullable<bool> HideZeroInvoiceItems, 
                    global::System.Nullable<short> GracePeriod, 
                    bool AwcIssueEarlyReturnCredits, 
                    bool AllowMinimumDayOverride, 
                    global::System.Nullable<bool> RentIsTaxable, 
                    global::System.Nullable<bool> ConsumablesTaxable, 
                    global::System.Nullable<bool> DeliveryChargesTaxable, 
                    global::System.Nullable<bool> ContractBillingTaxable, 
                    global::System.Nullable<bool> ServiceTicketDamageChargeTaxable, 
                    global::System.Nullable<global::System.Guid> JobTax1ID, 
                    global::System.Nullable<global::System.Guid> JobTax2ID, 
                    global::System.Nullable<global::System.DateTime> StartDate, 
                    global::System.Nullable<global::System.DateTime> StopDate, 
                    global::System.Nullable<global::System.DateTime> LastDateForRent, 
                    global::System.Nullable<global::System.DateTime> JobDate1, 
                    global::System.Nullable<global::System.DateTime> JobDate2, 
                    global::System.Nullable<global::System.Guid> JobEmployee1ID, 
                    global::System.Nullable<global::System.Guid> JobEmployee2ID, 
                    global::System.Nullable<global::System.Guid> JobEmployee3ID, 
                    global::System.Nullable<global::System.Guid> JobCustomerContact1ID, 
                    global::System.Nullable<global::System.Guid> JobCustomerContact2ID, 
                    string JobText1, 
                    string JobText2, 
                    global::System.Nullable<bool> JobYesNo1, 
                    global::System.Nullable<bool> JobYesNo2, 
                    global::System.Nullable<global::System.Guid> JobList1ID, 
                    global::System.Nullable<global::System.Guid> JobList2ID, 
                    bool ReceiveRequireInspection, 
                    bool ReceiveOutOfService, 
                    global::System.Nullable<double> RentalDiscount, 
                    short RentalDiscountType, 
                    global::System.Nullable<global::System.Guid> MarkupUnitPriceID, 
                    bool AllowKioskDamaged, 
                    bool AllowKioskDamagedBeyondRepair, 
                    bool AllowKioskLostMissing, 
                    string InvoiceNotes, 
                    string ScaffoldTagList1Label, 
                    string ScaffoldTagList2Label, 
                    string ScaffoldTagList3Label, 
                    string ScaffoldTagList4Label, 
                    string ScaffoldTagList5Label, 
                    string ScaffoldTagList6Label, 
                    string ScaffoldTagList7Label, 
                    bool UseScaffoldTagList1, 
                    bool UseScaffoldTagList2, 
                    bool UseScaffoldTagList3, 
                    bool UseScaffoldTagList4, 
                    bool UseScaffoldTagList5, 
                    bool UseScaffoldTagList6, 
                    bool UseScaffoldTagList7, 
                    bool ScaffoldTagList1Required, 
                    bool ScaffoldTagList2Required, 
                    bool ScaffoldTagList3Required, 
                    bool ScaffoldTagList4Required, 
                    bool ScaffoldTagList5Required, 
                    bool ScaffoldTagList6Required, 
                    bool ScaffoldTagList7Required, 
                    bool UseScaffoldTagDate1, 
                    string ScaffoldTagDate1Label, 
                    bool ScaffoldTagDate1Required, 
                    bool UseScaffoldTagDate2, 
                    string ScaffoldTagDate2Label, 
                    bool ScaffoldTagDate2Required, 
                    bool UseScaffoldTagText1, 
                    string ScaffoldTagText1Label, 
                    bool ScaffoldTagText1Required, 
                    bool UseScaffoldTagText2, 
                    string ScaffoldTagText2Label, 
                    bool ScaffoldTagText2Required, 
                    bool UseScaffoldTagText3, 
                    string ScaffoldTagText3Label, 
                    bool ScaffoldTagText3Required, 
                    bool UseScaffoldTagYesNo1, 
                    string ScaffoldTagYesNo1Label, 
                    bool UseScaffoldTagYesNo2, 
                    string ScaffoldTagYesNo2Label, 
                    string ScaffoldTagActivityList1Label, 
                    string ScaffoldTagActivityList2Label, 
                    string ScaffoldTagActivityList3Label, 
                    string ScaffoldTagActivityText1Label, 
                    bool UseScaffoldTagActivityList1, 
                    bool UseScaffoldTagActivityList2, 
                    bool UseScaffoldTagActivityList3, 
                    bool UseScaffoldTagActivityText1, 
                    bool ScaffoldTagActivityList1Required, 
                    bool ScaffoldTagActivityList2Required, 
                    bool ScaffoldTagActivityList3Required, 
                    bool ScaffoldTagActivityText1Required, 
                    bool TrackScaffoldTagInspections, 
                    global::System.Nullable<short> InspectionFrequency, 
                    bool UseInspectionShifts, 
                    bool UseScaffoldTagActivities, 
                    bool EnforceOffRent, 
                    bool ScaffoldStopRentRequired, 
                    bool IsRentStopped, 
                    System.DateTime LastInvoiced, 
                    bool TrackContracts) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(StockingLocationID));
            if ((Number == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Number));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(ReceiveTransferCount));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(ReceiveReturnCount));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(ReceiveDeliveryCount));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(RequireRequestProducts));
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(TrackRequests));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(CreateNewFromShortage));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(HideQuantities));
            if ((UtilizationGoal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(UtilizationGoal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((List1Label == null)) {
                throw new global::System.ArgumentNullException("List1Label");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(List1Label));
            }
            if ((List2Label == null)) {
                throw new global::System.ArgumentNullException("List2Label");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(List2Label));
            }
            if ((List3Label == null)) {
                throw new global::System.ArgumentNullException("List3Label");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(List3Label));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(ShowList1));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(ShowList2));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(ShowList3));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(IsBillable));
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(IsToolCrib));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(TrackScaffoldTags));
            if ((DefaultShipmentToBillable.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(DefaultShipmentToBillable.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(IncludeInProductHistory));
            if ((HistoryRateProfileID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.Guid)(HistoryRateProfileID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((short)(InvoiceOption));
            if ((DefaultRateProfileID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.Guid)(DefaultRateProfileID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((BillingMethod.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((short)(BillingMethod.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((BillingUserID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.Guid)(BillingUserID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ArrearsBillingCycle.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((short)(ArrearsBillingCycle.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CycleDaysArrears.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((short)(CycleDaysArrears.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((MinimumDaysFata.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((short)(MinimumDaysFata.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CycleDaysAdvanced.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((short)(CycleDaysAdvanced.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((MinimumDaysAdvanced.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((short)(MinimumDaysAdvanced.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((OrderID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((System.Guid)(OrderID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(IncludeUnitPricesOnMinimum));
            this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(ConsumablesEnabled));
            if ((MonthlyBillingCycle.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((short)(MonthlyBillingCycle.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((DayOfMonth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((short)(DayOfMonth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((FirstInvoiceDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((System.DateTime)(FirstInvoiceDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((AwcFirstInvoiceDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(AwcFirstInvoiceDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((AdvanceIsCycled.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(AdvanceIsCycled.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((CycleBeginDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((System.DateTime)(CycleBeginDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((CycleEndDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(CycleEndDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((CycleEndDateOverride.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((System.DateTime)(CycleEndDateOverride.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((HideZeroInvoiceItems.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((bool)(HideZeroInvoiceItems.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((GracePeriod.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((short)(GracePeriod.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[44].Value = ((bool)(AwcIssueEarlyReturnCredits));
            this.Adapter.InsertCommand.Parameters[45].Value = ((bool)(AllowMinimumDayOverride));
            if ((RentIsTaxable.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(RentIsTaxable.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ConsumablesTaxable.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((bool)(ConsumablesTaxable.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((DeliveryChargesTaxable.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((bool)(DeliveryChargesTaxable.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((ContractBillingTaxable.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((bool)(ContractBillingTaxable.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((ServiceTicketDamageChargeTaxable.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((bool)(ServiceTicketDamageChargeTaxable.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((JobTax1ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.Guid)(JobTax1ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((JobTax2ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((System.Guid)(JobTax2ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((StartDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((System.DateTime)(StartDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((StopDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((System.DateTime)(StopDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((LastDateForRent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(LastDateForRent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((JobDate1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((System.DateTime)(JobDate1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((JobDate2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((System.DateTime)(JobDate2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((JobEmployee1ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((System.Guid)(JobEmployee1ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((JobEmployee2ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((System.Guid)(JobEmployee2ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((JobEmployee3ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((System.Guid)(JobEmployee3ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((JobCustomerContact1ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((System.Guid)(JobCustomerContact1ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((JobCustomerContact2ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((System.Guid)(JobCustomerContact2ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((JobText1 == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(JobText1));
            }
            if ((JobText2 == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(JobText2));
            }
            if ((JobYesNo1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((bool)(JobYesNo1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((JobYesNo2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((bool)(JobYesNo2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((JobList1ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((System.Guid)(JobList1ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((JobList2ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((System.Guid)(JobList2ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[69].Value = ((bool)(ReceiveRequireInspection));
            this.Adapter.InsertCommand.Parameters[70].Value = ((bool)(ReceiveOutOfService));
            if ((RentalDiscount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((double)(RentalDiscount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[72].Value = ((short)(RentalDiscountType));
            if ((MarkupUnitPriceID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((System.Guid)(MarkupUnitPriceID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[74].Value = ((bool)(AllowKioskDamaged));
            this.Adapter.InsertCommand.Parameters[75].Value = ((bool)(AllowKioskDamagedBeyondRepair));
            this.Adapter.InsertCommand.Parameters[76].Value = ((bool)(AllowKioskLostMissing));
            if ((InvoiceNotes == null)) {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(InvoiceNotes));
            }
            if ((ScaffoldTagList1Label == null)) {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = ((string)(ScaffoldTagList1Label));
            }
            if ((ScaffoldTagList2Label == null)) {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = ((string)(ScaffoldTagList2Label));
            }
            if ((ScaffoldTagList3Label == null)) {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((string)(ScaffoldTagList3Label));
            }
            if ((ScaffoldTagList4Label == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(ScaffoldTagList4Label));
            }
            if ((ScaffoldTagList5Label == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(ScaffoldTagList5Label));
            }
            if ((ScaffoldTagList6Label == null)) {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(ScaffoldTagList6Label));
            }
            if ((ScaffoldTagList7Label == null)) {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = ((string)(ScaffoldTagList7Label));
            }
            this.Adapter.InsertCommand.Parameters[85].Value = ((bool)(UseScaffoldTagList1));
            this.Adapter.InsertCommand.Parameters[86].Value = ((bool)(UseScaffoldTagList2));
            this.Adapter.InsertCommand.Parameters[87].Value = ((bool)(UseScaffoldTagList3));
            this.Adapter.InsertCommand.Parameters[88].Value = ((bool)(UseScaffoldTagList4));
            this.Adapter.InsertCommand.Parameters[89].Value = ((bool)(UseScaffoldTagList5));
            this.Adapter.InsertCommand.Parameters[90].Value = ((bool)(UseScaffoldTagList6));
            this.Adapter.InsertCommand.Parameters[91].Value = ((bool)(UseScaffoldTagList7));
            this.Adapter.InsertCommand.Parameters[92].Value = ((bool)(ScaffoldTagList1Required));
            this.Adapter.InsertCommand.Parameters[93].Value = ((bool)(ScaffoldTagList2Required));
            this.Adapter.InsertCommand.Parameters[94].Value = ((bool)(ScaffoldTagList3Required));
            this.Adapter.InsertCommand.Parameters[95].Value = ((bool)(ScaffoldTagList4Required));
            this.Adapter.InsertCommand.Parameters[96].Value = ((bool)(ScaffoldTagList5Required));
            this.Adapter.InsertCommand.Parameters[97].Value = ((bool)(ScaffoldTagList6Required));
            this.Adapter.InsertCommand.Parameters[98].Value = ((bool)(ScaffoldTagList7Required));
            this.Adapter.InsertCommand.Parameters[99].Value = ((bool)(UseScaffoldTagDate1));
            if ((ScaffoldTagDate1Label == null)) {
                this.Adapter.InsertCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[100].Value = ((string)(ScaffoldTagDate1Label));
            }
            this.Adapter.InsertCommand.Parameters[101].Value = ((bool)(ScaffoldTagDate1Required));
            this.Adapter.InsertCommand.Parameters[102].Value = ((bool)(UseScaffoldTagDate2));
            if ((ScaffoldTagDate2Label == null)) {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = ((string)(ScaffoldTagDate2Label));
            }
            this.Adapter.InsertCommand.Parameters[104].Value = ((bool)(ScaffoldTagDate2Required));
            this.Adapter.InsertCommand.Parameters[105].Value = ((bool)(UseScaffoldTagText1));
            if ((ScaffoldTagText1Label == null)) {
                this.Adapter.InsertCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[106].Value = ((string)(ScaffoldTagText1Label));
            }
            this.Adapter.InsertCommand.Parameters[107].Value = ((bool)(ScaffoldTagText1Required));
            this.Adapter.InsertCommand.Parameters[108].Value = ((bool)(UseScaffoldTagText2));
            if ((ScaffoldTagText2Label == null)) {
                this.Adapter.InsertCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[109].Value = ((string)(ScaffoldTagText2Label));
            }
            this.Adapter.InsertCommand.Parameters[110].Value = ((bool)(ScaffoldTagText2Required));
            this.Adapter.InsertCommand.Parameters[111].Value = ((bool)(UseScaffoldTagText3));
            if ((ScaffoldTagText3Label == null)) {
                this.Adapter.InsertCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[112].Value = ((string)(ScaffoldTagText3Label));
            }
            this.Adapter.InsertCommand.Parameters[113].Value = ((bool)(ScaffoldTagText3Required));
            this.Adapter.InsertCommand.Parameters[114].Value = ((bool)(UseScaffoldTagYesNo1));
            if ((ScaffoldTagYesNo1Label == null)) {
                this.Adapter.InsertCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[115].Value = ((string)(ScaffoldTagYesNo1Label));
            }
            this.Adapter.InsertCommand.Parameters[116].Value = ((bool)(UseScaffoldTagYesNo2));
            if ((ScaffoldTagYesNo2Label == null)) {
                this.Adapter.InsertCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[117].Value = ((string)(ScaffoldTagYesNo2Label));
            }
            if ((ScaffoldTagActivityList1Label == null)) {
                this.Adapter.InsertCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[118].Value = ((string)(ScaffoldTagActivityList1Label));
            }
            if ((ScaffoldTagActivityList2Label == null)) {
                this.Adapter.InsertCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[119].Value = ((string)(ScaffoldTagActivityList2Label));
            }
            if ((ScaffoldTagActivityList3Label == null)) {
                this.Adapter.InsertCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[120].Value = ((string)(ScaffoldTagActivityList3Label));
            }
            if ((ScaffoldTagActivityText1Label == null)) {
                this.Adapter.InsertCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[121].Value = ((string)(ScaffoldTagActivityText1Label));
            }
            this.Adapter.InsertCommand.Parameters[122].Value = ((bool)(UseScaffoldTagActivityList1));
            this.Adapter.InsertCommand.Parameters[123].Value = ((bool)(UseScaffoldTagActivityList2));
            this.Adapter.InsertCommand.Parameters[124].Value = ((bool)(UseScaffoldTagActivityList3));
            this.Adapter.InsertCommand.Parameters[125].Value = ((bool)(UseScaffoldTagActivityText1));
            this.Adapter.InsertCommand.Parameters[126].Value = ((bool)(ScaffoldTagActivityList1Required));
            this.Adapter.InsertCommand.Parameters[127].Value = ((bool)(ScaffoldTagActivityList2Required));
            this.Adapter.InsertCommand.Parameters[128].Value = ((bool)(ScaffoldTagActivityList3Required));
            this.Adapter.InsertCommand.Parameters[129].Value = ((bool)(ScaffoldTagActivityText1Required));
            this.Adapter.InsertCommand.Parameters[130].Value = ((bool)(TrackScaffoldTagInspections));
            if ((InspectionFrequency.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[131].Value = ((short)(InspectionFrequency.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[132].Value = ((bool)(UseInspectionShifts));
            this.Adapter.InsertCommand.Parameters[133].Value = ((bool)(UseScaffoldTagActivities));
            this.Adapter.InsertCommand.Parameters[134].Value = ((bool)(EnforceOffRent));
            this.Adapter.InsertCommand.Parameters[135].Value = ((bool)(ScaffoldStopRentRequired));
            this.Adapter.InsertCommand.Parameters[136].Value = ((bool)(IsRentStopped));
            this.Adapter.InsertCommand.Parameters[137].Value = ((System.DateTime)(LastInvoiced));
            this.Adapter.InsertCommand.Parameters[138].Value = ((bool)(TrackContracts));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid StockingLocationID, 
                    string Number, 
                    bool ReceiveTransferCount, 
                    bool ReceiveReturnCount, 
                    bool ReceiveDeliveryCount, 
                    bool RequireRequestProducts, 
                    bool TrackRequests, 
                    bool CreateNewFromShortage, 
                    bool HideQuantities, 
                    global::System.Nullable<double> UtilizationGoal, 
                    string List1Label, 
                    string List2Label, 
                    string List3Label, 
                    bool ShowList1, 
                    bool ShowList2, 
                    bool ShowList3, 
                    bool IsBillable, 
                    bool IsToolCrib, 
                    bool TrackScaffoldTags, 
                    global::System.Nullable<bool> DefaultShipmentToBillable, 
                    bool IncludeInProductHistory, 
                    global::System.Nullable<global::System.Guid> HistoryRateProfileID, 
                    short InvoiceOption, 
                    global::System.Nullable<global::System.Guid> DefaultRateProfileID, 
                    global::System.Nullable<short> BillingMethod, 
                    global::System.Nullable<global::System.Guid> BillingUserID, 
                    global::System.Nullable<short> ArrearsBillingCycle, 
                    global::System.Nullable<short> CycleDaysArrears, 
                    global::System.Nullable<short> MinimumDaysFata, 
                    global::System.Nullable<short> CycleDaysAdvanced, 
                    global::System.Nullable<short> MinimumDaysAdvanced, 
                    global::System.Nullable<global::System.Guid> OrderID, 
                    bool IncludeUnitPricesOnMinimum, 
                    bool ConsumablesEnabled, 
                    global::System.Nullable<short> MonthlyBillingCycle, 
                    global::System.Nullable<short> DayOfMonth, 
                    global::System.Nullable<global::System.DateTime> FirstInvoiceDate, 
                    global::System.Nullable<global::System.DateTime> AwcFirstInvoiceDate, 
                    global::System.Nullable<bool> AdvanceIsCycled, 
                    global::System.Nullable<global::System.DateTime> CycleBeginDate, 
                    global::System.Nullable<global::System.DateTime> CycleEndDate, 
                    global::System.Nullable<global::System.DateTime> CycleEndDateOverride, 
                    global::System.Nullable<bool> HideZeroInvoiceItems, 
                    global::System.Nullable<short> GracePeriod, 
                    bool AwcIssueEarlyReturnCredits, 
                    bool AllowMinimumDayOverride, 
                    global::System.Nullable<bool> RentIsTaxable, 
                    global::System.Nullable<bool> ConsumablesTaxable, 
                    global::System.Nullable<bool> DeliveryChargesTaxable, 
                    global::System.Nullable<bool> ContractBillingTaxable, 
                    global::System.Nullable<bool> ServiceTicketDamageChargeTaxable, 
                    global::System.Nullable<global::System.Guid> JobTax1ID, 
                    global::System.Nullable<global::System.Guid> JobTax2ID, 
                    global::System.Nullable<global::System.DateTime> StartDate, 
                    global::System.Nullable<global::System.DateTime> StopDate, 
                    global::System.Nullable<global::System.DateTime> LastDateForRent, 
                    global::System.Nullable<global::System.DateTime> JobDate1, 
                    global::System.Nullable<global::System.DateTime> JobDate2, 
                    global::System.Nullable<global::System.Guid> JobEmployee1ID, 
                    global::System.Nullable<global::System.Guid> JobEmployee2ID, 
                    global::System.Nullable<global::System.Guid> JobEmployee3ID, 
                    global::System.Nullable<global::System.Guid> JobCustomerContact1ID, 
                    global::System.Nullable<global::System.Guid> JobCustomerContact2ID, 
                    string JobText1, 
                    string JobText2, 
                    global::System.Nullable<bool> JobYesNo1, 
                    global::System.Nullable<bool> JobYesNo2, 
                    global::System.Nullable<global::System.Guid> JobList1ID, 
                    global::System.Nullable<global::System.Guid> JobList2ID, 
                    bool ReceiveRequireInspection, 
                    bool ReceiveOutOfService, 
                    global::System.Nullable<double> RentalDiscount, 
                    short RentalDiscountType, 
                    global::System.Nullable<global::System.Guid> MarkupUnitPriceID, 
                    bool AllowKioskDamaged, 
                    bool AllowKioskDamagedBeyondRepair, 
                    bool AllowKioskLostMissing, 
                    string InvoiceNotes, 
                    string ScaffoldTagList1Label, 
                    string ScaffoldTagList2Label, 
                    string ScaffoldTagList3Label, 
                    string ScaffoldTagList4Label, 
                    string ScaffoldTagList5Label, 
                    string ScaffoldTagList6Label, 
                    string ScaffoldTagList7Label, 
                    bool UseScaffoldTagList1, 
                    bool UseScaffoldTagList2, 
                    bool UseScaffoldTagList3, 
                    bool UseScaffoldTagList4, 
                    bool UseScaffoldTagList5, 
                    bool UseScaffoldTagList6, 
                    bool UseScaffoldTagList7, 
                    bool ScaffoldTagList1Required, 
                    bool ScaffoldTagList2Required, 
                    bool ScaffoldTagList3Required, 
                    bool ScaffoldTagList4Required, 
                    bool ScaffoldTagList5Required, 
                    bool ScaffoldTagList6Required, 
                    bool ScaffoldTagList7Required, 
                    bool UseScaffoldTagDate1, 
                    string ScaffoldTagDate1Label, 
                    bool ScaffoldTagDate1Required, 
                    bool UseScaffoldTagDate2, 
                    string ScaffoldTagDate2Label, 
                    bool ScaffoldTagDate2Required, 
                    bool UseScaffoldTagText1, 
                    string ScaffoldTagText1Label, 
                    bool ScaffoldTagText1Required, 
                    bool UseScaffoldTagText2, 
                    string ScaffoldTagText2Label, 
                    bool ScaffoldTagText2Required, 
                    bool UseScaffoldTagText3, 
                    string ScaffoldTagText3Label, 
                    bool ScaffoldTagText3Required, 
                    bool UseScaffoldTagYesNo1, 
                    string ScaffoldTagYesNo1Label, 
                    bool UseScaffoldTagYesNo2, 
                    string ScaffoldTagYesNo2Label, 
                    string ScaffoldTagActivityList1Label, 
                    string ScaffoldTagActivityList2Label, 
                    string ScaffoldTagActivityList3Label, 
                    string ScaffoldTagActivityText1Label, 
                    bool UseScaffoldTagActivityList1, 
                    bool UseScaffoldTagActivityList2, 
                    bool UseScaffoldTagActivityList3, 
                    bool UseScaffoldTagActivityText1, 
                    bool ScaffoldTagActivityList1Required, 
                    bool ScaffoldTagActivityList2Required, 
                    bool ScaffoldTagActivityList3Required, 
                    bool ScaffoldTagActivityText1Required, 
                    bool TrackScaffoldTagInspections, 
                    global::System.Nullable<short> InspectionFrequency, 
                    bool UseInspectionShifts, 
                    bool UseScaffoldTagActivities, 
                    bool EnforceOffRent, 
                    bool ScaffoldStopRentRequired, 
                    bool IsRentStopped, 
                    System.DateTime LastInvoiced, 
                    bool TrackContracts, 
                    System.Guid Original_StockingLocationID, 
                    byte[] Original_VersionStamp) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(StockingLocationID));
            if ((Number == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Number));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(ReceiveTransferCount));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(ReceiveReturnCount));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(ReceiveDeliveryCount));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(RequireRequestProducts));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(TrackRequests));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(CreateNewFromShortage));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(HideQuantities));
            if ((UtilizationGoal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(UtilizationGoal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((List1Label == null)) {
                throw new global::System.ArgumentNullException("List1Label");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(List1Label));
            }
            if ((List2Label == null)) {
                throw new global::System.ArgumentNullException("List2Label");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(List2Label));
            }
            if ((List3Label == null)) {
                throw new global::System.ArgumentNullException("List3Label");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(List3Label));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(ShowList1));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(ShowList2));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(ShowList3));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(IsBillable));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(IsToolCrib));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(TrackScaffoldTags));
            if ((DefaultShipmentToBillable.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(DefaultShipmentToBillable.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(IncludeInProductHistory));
            if ((HistoryRateProfileID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.Guid)(HistoryRateProfileID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((short)(InvoiceOption));
            if ((DefaultRateProfileID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.Guid)(DefaultRateProfileID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((BillingMethod.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((short)(BillingMethod.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((BillingUserID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.Guid)(BillingUserID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ArrearsBillingCycle.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((short)(ArrearsBillingCycle.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CycleDaysArrears.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((short)(CycleDaysArrears.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((MinimumDaysFata.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((short)(MinimumDaysFata.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((CycleDaysAdvanced.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((short)(CycleDaysAdvanced.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((MinimumDaysAdvanced.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((short)(MinimumDaysAdvanced.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((OrderID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.Guid)(OrderID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(IncludeUnitPricesOnMinimum));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(ConsumablesEnabled));
            if ((MonthlyBillingCycle.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((short)(MonthlyBillingCycle.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((DayOfMonth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((short)(DayOfMonth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((FirstInvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(FirstInvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((AwcFirstInvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(AwcFirstInvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((AdvanceIsCycled.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(AdvanceIsCycled.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((CycleBeginDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(CycleBeginDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((CycleEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(CycleEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((CycleEndDateOverride.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(CycleEndDateOverride.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((HideZeroInvoiceItems.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(HideZeroInvoiceItems.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((GracePeriod.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((short)(GracePeriod.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((bool)(AwcIssueEarlyReturnCredits));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((bool)(AllowMinimumDayOverride));
            if ((RentIsTaxable.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(RentIsTaxable.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((ConsumablesTaxable.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(ConsumablesTaxable.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((DeliveryChargesTaxable.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((bool)(DeliveryChargesTaxable.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((ContractBillingTaxable.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(ContractBillingTaxable.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((ServiceTicketDamageChargeTaxable.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(ServiceTicketDamageChargeTaxable.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((JobTax1ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.Guid)(JobTax1ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((JobTax2ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.Guid)(JobTax2ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((StartDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(StartDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((StopDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(StopDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((LastDateForRent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(LastDateForRent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((JobDate1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTime)(JobDate1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((JobDate2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(JobDate2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((JobEmployee1ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((System.Guid)(JobEmployee1ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((JobEmployee2ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((System.Guid)(JobEmployee2ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((JobEmployee3ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((System.Guid)(JobEmployee3ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((JobCustomerContact1ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((System.Guid)(JobCustomerContact1ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((JobCustomerContact2ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((System.Guid)(JobCustomerContact2ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((JobText1 == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(JobText1));
            }
            if ((JobText2 == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(JobText2));
            }
            if ((JobYesNo1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(JobYesNo1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((JobYesNo2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(JobYesNo2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((JobList1ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((System.Guid)(JobList1ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((JobList2ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((System.Guid)(JobList2ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(ReceiveRequireInspection));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(ReceiveOutOfService));
            if ((RentalDiscount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((double)(RentalDiscount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[72].Value = ((short)(RentalDiscountType));
            if ((MarkupUnitPriceID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((System.Guid)(MarkupUnitPriceID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((bool)(AllowKioskDamaged));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((bool)(AllowKioskDamagedBeyondRepair));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((bool)(AllowKioskLostMissing));
            if ((InvoiceNotes == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(InvoiceNotes));
            }
            if ((ScaffoldTagList1Label == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(ScaffoldTagList1Label));
            }
            if ((ScaffoldTagList2Label == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(ScaffoldTagList2Label));
            }
            if ((ScaffoldTagList3Label == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(ScaffoldTagList3Label));
            }
            if ((ScaffoldTagList4Label == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(ScaffoldTagList4Label));
            }
            if ((ScaffoldTagList5Label == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(ScaffoldTagList5Label));
            }
            if ((ScaffoldTagList6Label == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(ScaffoldTagList6Label));
            }
            if ((ScaffoldTagList7Label == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(ScaffoldTagList7Label));
            }
            this.Adapter.UpdateCommand.Parameters[85].Value = ((bool)(UseScaffoldTagList1));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((bool)(UseScaffoldTagList2));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((bool)(UseScaffoldTagList3));
            this.Adapter.UpdateCommand.Parameters[88].Value = ((bool)(UseScaffoldTagList4));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((bool)(UseScaffoldTagList5));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((bool)(UseScaffoldTagList6));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((bool)(UseScaffoldTagList7));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((bool)(ScaffoldTagList1Required));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((bool)(ScaffoldTagList2Required));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((bool)(ScaffoldTagList3Required));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((bool)(ScaffoldTagList4Required));
            this.Adapter.UpdateCommand.Parameters[96].Value = ((bool)(ScaffoldTagList5Required));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((bool)(ScaffoldTagList6Required));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((bool)(ScaffoldTagList7Required));
            this.Adapter.UpdateCommand.Parameters[99].Value = ((bool)(UseScaffoldTagDate1));
            if ((ScaffoldTagDate1Label == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(ScaffoldTagDate1Label));
            }
            this.Adapter.UpdateCommand.Parameters[101].Value = ((bool)(ScaffoldTagDate1Required));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((bool)(UseScaffoldTagDate2));
            if ((ScaffoldTagDate2Label == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(ScaffoldTagDate2Label));
            }
            this.Adapter.UpdateCommand.Parameters[104].Value = ((bool)(ScaffoldTagDate2Required));
            this.Adapter.UpdateCommand.Parameters[105].Value = ((bool)(UseScaffoldTagText1));
            if ((ScaffoldTagText1Label == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(ScaffoldTagText1Label));
            }
            this.Adapter.UpdateCommand.Parameters[107].Value = ((bool)(ScaffoldTagText1Required));
            this.Adapter.UpdateCommand.Parameters[108].Value = ((bool)(UseScaffoldTagText2));
            if ((ScaffoldTagText2Label == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(ScaffoldTagText2Label));
            }
            this.Adapter.UpdateCommand.Parameters[110].Value = ((bool)(ScaffoldTagText2Required));
            this.Adapter.UpdateCommand.Parameters[111].Value = ((bool)(UseScaffoldTagText3));
            if ((ScaffoldTagText3Label == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(ScaffoldTagText3Label));
            }
            this.Adapter.UpdateCommand.Parameters[113].Value = ((bool)(ScaffoldTagText3Required));
            this.Adapter.UpdateCommand.Parameters[114].Value = ((bool)(UseScaffoldTagYesNo1));
            if ((ScaffoldTagYesNo1Label == null)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(ScaffoldTagYesNo1Label));
            }
            this.Adapter.UpdateCommand.Parameters[116].Value = ((bool)(UseScaffoldTagYesNo2));
            if ((ScaffoldTagYesNo2Label == null)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(ScaffoldTagYesNo2Label));
            }
            if ((ScaffoldTagActivityList1Label == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(ScaffoldTagActivityList1Label));
            }
            if ((ScaffoldTagActivityList2Label == null)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(ScaffoldTagActivityList2Label));
            }
            if ((ScaffoldTagActivityList3Label == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((string)(ScaffoldTagActivityList3Label));
            }
            if ((ScaffoldTagActivityText1Label == null)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(ScaffoldTagActivityText1Label));
            }
            this.Adapter.UpdateCommand.Parameters[122].Value = ((bool)(UseScaffoldTagActivityList1));
            this.Adapter.UpdateCommand.Parameters[123].Value = ((bool)(UseScaffoldTagActivityList2));
            this.Adapter.UpdateCommand.Parameters[124].Value = ((bool)(UseScaffoldTagActivityList3));
            this.Adapter.UpdateCommand.Parameters[125].Value = ((bool)(UseScaffoldTagActivityText1));
            this.Adapter.UpdateCommand.Parameters[126].Value = ((bool)(ScaffoldTagActivityList1Required));
            this.Adapter.UpdateCommand.Parameters[127].Value = ((bool)(ScaffoldTagActivityList2Required));
            this.Adapter.UpdateCommand.Parameters[128].Value = ((bool)(ScaffoldTagActivityList3Required));
            this.Adapter.UpdateCommand.Parameters[129].Value = ((bool)(ScaffoldTagActivityText1Required));
            this.Adapter.UpdateCommand.Parameters[130].Value = ((bool)(TrackScaffoldTagInspections));
            if ((InspectionFrequency.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((short)(InspectionFrequency.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[132].Value = ((bool)(UseInspectionShifts));
            this.Adapter.UpdateCommand.Parameters[133].Value = ((bool)(UseScaffoldTagActivities));
            this.Adapter.UpdateCommand.Parameters[134].Value = ((bool)(EnforceOffRent));
            this.Adapter.UpdateCommand.Parameters[135].Value = ((bool)(ScaffoldStopRentRequired));
            this.Adapter.UpdateCommand.Parameters[136].Value = ((bool)(IsRentStopped));
            this.Adapter.UpdateCommand.Parameters[137].Value = ((System.DateTime)(LastInvoiced));
            this.Adapter.UpdateCommand.Parameters[138].Value = ((bool)(TrackContracts));
            this.Adapter.UpdateCommand.Parameters[139].Value = ((System.Guid)(Original_StockingLocationID));
            if ((Original_VersionStamp == null)) {
                throw new global::System.ArgumentNullException("Original_VersionStamp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((byte[])(Original_VersionStamp));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Number, 
                    bool ReceiveTransferCount, 
                    bool ReceiveReturnCount, 
                    bool ReceiveDeliveryCount, 
                    bool RequireRequestProducts, 
                    bool TrackRequests, 
                    bool CreateNewFromShortage, 
                    bool HideQuantities, 
                    global::System.Nullable<double> UtilizationGoal, 
                    string List1Label, 
                    string List2Label, 
                    string List3Label, 
                    bool ShowList1, 
                    bool ShowList2, 
                    bool ShowList3, 
                    bool IsBillable, 
                    bool IsToolCrib, 
                    bool TrackScaffoldTags, 
                    global::System.Nullable<bool> DefaultShipmentToBillable, 
                    bool IncludeInProductHistory, 
                    global::System.Nullable<global::System.Guid> HistoryRateProfileID, 
                    short InvoiceOption, 
                    global::System.Nullable<global::System.Guid> DefaultRateProfileID, 
                    global::System.Nullable<short> BillingMethod, 
                    global::System.Nullable<global::System.Guid> BillingUserID, 
                    global::System.Nullable<short> ArrearsBillingCycle, 
                    global::System.Nullable<short> CycleDaysArrears, 
                    global::System.Nullable<short> MinimumDaysFata, 
                    global::System.Nullable<short> CycleDaysAdvanced, 
                    global::System.Nullable<short> MinimumDaysAdvanced, 
                    global::System.Nullable<global::System.Guid> OrderID, 
                    bool IncludeUnitPricesOnMinimum, 
                    bool ConsumablesEnabled, 
                    global::System.Nullable<short> MonthlyBillingCycle, 
                    global::System.Nullable<short> DayOfMonth, 
                    global::System.Nullable<global::System.DateTime> FirstInvoiceDate, 
                    global::System.Nullable<global::System.DateTime> AwcFirstInvoiceDate, 
                    global::System.Nullable<bool> AdvanceIsCycled, 
                    global::System.Nullable<global::System.DateTime> CycleBeginDate, 
                    global::System.Nullable<global::System.DateTime> CycleEndDate, 
                    global::System.Nullable<global::System.DateTime> CycleEndDateOverride, 
                    global::System.Nullable<bool> HideZeroInvoiceItems, 
                    global::System.Nullable<short> GracePeriod, 
                    bool AwcIssueEarlyReturnCredits, 
                    bool AllowMinimumDayOverride, 
                    global::System.Nullable<bool> RentIsTaxable, 
                    global::System.Nullable<bool> ConsumablesTaxable, 
                    global::System.Nullable<bool> DeliveryChargesTaxable, 
                    global::System.Nullable<bool> ContractBillingTaxable, 
                    global::System.Nullable<bool> ServiceTicketDamageChargeTaxable, 
                    global::System.Nullable<global::System.Guid> JobTax1ID, 
                    global::System.Nullable<global::System.Guid> JobTax2ID, 
                    global::System.Nullable<global::System.DateTime> StartDate, 
                    global::System.Nullable<global::System.DateTime> StopDate, 
                    global::System.Nullable<global::System.DateTime> LastDateForRent, 
                    global::System.Nullable<global::System.DateTime> JobDate1, 
                    global::System.Nullable<global::System.DateTime> JobDate2, 
                    global::System.Nullable<global::System.Guid> JobEmployee1ID, 
                    global::System.Nullable<global::System.Guid> JobEmployee2ID, 
                    global::System.Nullable<global::System.Guid> JobEmployee3ID, 
                    global::System.Nullable<global::System.Guid> JobCustomerContact1ID, 
                    global::System.Nullable<global::System.Guid> JobCustomerContact2ID, 
                    string JobText1, 
                    string JobText2, 
                    global::System.Nullable<bool> JobYesNo1, 
                    global::System.Nullable<bool> JobYesNo2, 
                    global::System.Nullable<global::System.Guid> JobList1ID, 
                    global::System.Nullable<global::System.Guid> JobList2ID, 
                    bool ReceiveRequireInspection, 
                    bool ReceiveOutOfService, 
                    global::System.Nullable<double> RentalDiscount, 
                    short RentalDiscountType, 
                    global::System.Nullable<global::System.Guid> MarkupUnitPriceID, 
                    bool AllowKioskDamaged, 
                    bool AllowKioskDamagedBeyondRepair, 
                    bool AllowKioskLostMissing, 
                    string InvoiceNotes, 
                    string ScaffoldTagList1Label, 
                    string ScaffoldTagList2Label, 
                    string ScaffoldTagList3Label, 
                    string ScaffoldTagList4Label, 
                    string ScaffoldTagList5Label, 
                    string ScaffoldTagList6Label, 
                    string ScaffoldTagList7Label, 
                    bool UseScaffoldTagList1, 
                    bool UseScaffoldTagList2, 
                    bool UseScaffoldTagList3, 
                    bool UseScaffoldTagList4, 
                    bool UseScaffoldTagList5, 
                    bool UseScaffoldTagList6, 
                    bool UseScaffoldTagList7, 
                    bool ScaffoldTagList1Required, 
                    bool ScaffoldTagList2Required, 
                    bool ScaffoldTagList3Required, 
                    bool ScaffoldTagList4Required, 
                    bool ScaffoldTagList5Required, 
                    bool ScaffoldTagList6Required, 
                    bool ScaffoldTagList7Required, 
                    bool UseScaffoldTagDate1, 
                    string ScaffoldTagDate1Label, 
                    bool ScaffoldTagDate1Required, 
                    bool UseScaffoldTagDate2, 
                    string ScaffoldTagDate2Label, 
                    bool ScaffoldTagDate2Required, 
                    bool UseScaffoldTagText1, 
                    string ScaffoldTagText1Label, 
                    bool ScaffoldTagText1Required, 
                    bool UseScaffoldTagText2, 
                    string ScaffoldTagText2Label, 
                    bool ScaffoldTagText2Required, 
                    bool UseScaffoldTagText3, 
                    string ScaffoldTagText3Label, 
                    bool ScaffoldTagText3Required, 
                    bool UseScaffoldTagYesNo1, 
                    string ScaffoldTagYesNo1Label, 
                    bool UseScaffoldTagYesNo2, 
                    string ScaffoldTagYesNo2Label, 
                    string ScaffoldTagActivityList1Label, 
                    string ScaffoldTagActivityList2Label, 
                    string ScaffoldTagActivityList3Label, 
                    string ScaffoldTagActivityText1Label, 
                    bool UseScaffoldTagActivityList1, 
                    bool UseScaffoldTagActivityList2, 
                    bool UseScaffoldTagActivityList3, 
                    bool UseScaffoldTagActivityText1, 
                    bool ScaffoldTagActivityList1Required, 
                    bool ScaffoldTagActivityList2Required, 
                    bool ScaffoldTagActivityList3Required, 
                    bool ScaffoldTagActivityText1Required, 
                    bool TrackScaffoldTagInspections, 
                    global::System.Nullable<short> InspectionFrequency, 
                    bool UseInspectionShifts, 
                    bool UseScaffoldTagActivities, 
                    bool EnforceOffRent, 
                    bool ScaffoldStopRentRequired, 
                    bool IsRentStopped, 
                    System.DateTime LastInvoiced, 
                    bool TrackContracts, 
                    System.Guid Original_StockingLocationID, 
                    byte[] Original_VersionStamp) {
            return this.Update(Original_StockingLocationID, Number, ReceiveTransferCount, ReceiveReturnCount, ReceiveDeliveryCount, RequireRequestProducts, TrackRequests, CreateNewFromShortage, HideQuantities, UtilizationGoal, List1Label, List2Label, List3Label, ShowList1, ShowList2, ShowList3, IsBillable, IsToolCrib, TrackScaffoldTags, DefaultShipmentToBillable, IncludeInProductHistory, HistoryRateProfileID, InvoiceOption, DefaultRateProfileID, BillingMethod, BillingUserID, ArrearsBillingCycle, CycleDaysArrears, MinimumDaysFata, CycleDaysAdvanced, MinimumDaysAdvanced, OrderID, IncludeUnitPricesOnMinimum, ConsumablesEnabled, MonthlyBillingCycle, DayOfMonth, FirstInvoiceDate, AwcFirstInvoiceDate, AdvanceIsCycled, CycleBeginDate, CycleEndDate, CycleEndDateOverride, HideZeroInvoiceItems, GracePeriod, AwcIssueEarlyReturnCredits, AllowMinimumDayOverride, RentIsTaxable, ConsumablesTaxable, DeliveryChargesTaxable, ContractBillingTaxable, ServiceTicketDamageChargeTaxable, JobTax1ID, JobTax2ID, StartDate, StopDate, LastDateForRent, JobDate1, JobDate2, JobEmployee1ID, JobEmployee2ID, JobEmployee3ID, JobCustomerContact1ID, JobCustomerContact2ID, JobText1, JobText2, JobYesNo1, JobYesNo2, JobList1ID, JobList2ID, ReceiveRequireInspection, ReceiveOutOfService, RentalDiscount, RentalDiscountType, MarkupUnitPriceID, AllowKioskDamaged, AllowKioskDamagedBeyondRepair, AllowKioskLostMissing, InvoiceNotes, ScaffoldTagList1Label, ScaffoldTagList2Label, ScaffoldTagList3Label, ScaffoldTagList4Label, ScaffoldTagList5Label, ScaffoldTagList6Label, ScaffoldTagList7Label, UseScaffoldTagList1, UseScaffoldTagList2, UseScaffoldTagList3, UseScaffoldTagList4, UseScaffoldTagList5, UseScaffoldTagList6, UseScaffoldTagList7, ScaffoldTagList1Required, ScaffoldTagList2Required, ScaffoldTagList3Required, ScaffoldTagList4Required, ScaffoldTagList5Required, ScaffoldTagList6Required, ScaffoldTagList7Required, UseScaffoldTagDate1, ScaffoldTagDate1Label, ScaffoldTagDate1Required, UseScaffoldTagDate2, ScaffoldTagDate2Label, ScaffoldTagDate2Required, UseScaffoldTagText1, ScaffoldTagText1Label, ScaffoldTagText1Required, UseScaffoldTagText2, ScaffoldTagText2Label, ScaffoldTagText2Required, UseScaffoldTagText3, ScaffoldTagText3Label, ScaffoldTagText3Required, UseScaffoldTagYesNo1, ScaffoldTagYesNo1Label, UseScaffoldTagYesNo2, ScaffoldTagYesNo2Label, ScaffoldTagActivityList1Label, ScaffoldTagActivityList2Label, ScaffoldTagActivityList3Label, ScaffoldTagActivityText1Label, UseScaffoldTagActivityList1, UseScaffoldTagActivityList2, UseScaffoldTagActivityList3, UseScaffoldTagActivityText1, ScaffoldTagActivityList1Required, ScaffoldTagActivityList2Required, ScaffoldTagActivityList3Required, ScaffoldTagActivityText1Required, TrackScaffoldTagInspections, InspectionFrequency, UseInspectionShifts, UseScaffoldTagActivities, EnforceOffRent, ScaffoldStopRentRequired, IsRentStopped, LastInvoiced, TrackContracts, Original_StockingLocationID, Original_VersionStamp);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class JobList1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public JobList1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "JobList1";
            tableMapping.ColumnMappings.Add("JobList1ID", "JobList1ID");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Description", "Description");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[JobList1] WHERE (([JobList1ID] = @Original_JobList1ID) AND ([I" +
                "sActive] = @Original_IsActive) AND ([Name] = @Original_Name) AND ((@IsNull_Descr" +
                "iption = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)" +
                "))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobList1ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobList1ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[JobList1] ([JobList1ID], [IsActive], [Name], [Description]) VA" +
                "LUES (@JobList1ID, @IsActive, @Name, @Description);\r\nSELECT JobList1ID, IsActive" +
                ", Name, Description FROM JobList1 WHERE (JobList1ID = @JobList1ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobList1ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobList1ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[JobList1] SET [JobList1ID] = @JobList1ID, [IsActive] = @IsActive, [Name] = @Name, [Description] = @Description WHERE (([JobList1ID] = @Original_JobList1ID) AND ([IsActive] = @Original_IsActive) AND ([Name] = @Original_Name) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)));
SELECT JobList1ID, IsActive, Name, Description FROM JobList1 WHERE (JobList1ID = @JobList1ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobList1ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobList1ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobList1ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobList1ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Quantify.API.Properties.Settings.Default.ASIRentalManagerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT JobList1ID, IsActive, Name, Description FROM dbo.JobList1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsQuantify.JobList1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsQuantify.JobList1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsQuantify.JobList1DataTable dataTable = new DsQuantify.JobList1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify.JobList1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify dataSet) {
            return this.Adapter.Update(dataSet, "JobList1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_JobList1ID, bool Original_IsActive, string Original_Name, string Original_Description) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_JobList1ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((bool)(Original_IsActive));
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Name));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Guid JobList1ID, bool IsActive, string Name, string Description) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(JobList1ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(IsActive));
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Guid JobList1ID, bool IsActive, string Name, string Description, System.Guid Original_JobList1ID, bool Original_IsActive, string Original_Name, string Original_Description) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(JobList1ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(IsActive));
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.Guid)(Original_JobList1ID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(Original_IsActive));
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(bool IsActive, string Name, string Description, System.Guid Original_JobList1ID, bool Original_IsActive, string Original_Name, string Original_Description) {
            return this.Update(Original_JobList1ID, IsActive, Name, Description, Original_JobList1ID, Original_IsActive, Original_Name, Original_Description);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class JobList2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public JobList2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "JobList2";
            tableMapping.ColumnMappings.Add("JobList2ID", "JobList2ID");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Description", "Description");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[JobList2] WHERE (([JobList2ID] = @Original_JobList2ID) AND ([I" +
                "sActive] = @Original_IsActive) AND ([Name] = @Original_Name) AND ((@IsNull_Descr" +
                "iption = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)" +
                "))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobList2ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobList2ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[JobList2] ([JobList2ID], [IsActive], [Name], [Description]) VA" +
                "LUES (@JobList2ID, @IsActive, @Name, @Description);\r\nSELECT JobList2ID, IsActive" +
                ", Name, Description FROM JobList2 WHERE (JobList2ID = @JobList2ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobList2ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobList2ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[JobList2] SET [JobList2ID] = @JobList2ID, [IsActive] = @IsActive, [Name] = @Name, [Description] = @Description WHERE (([JobList2ID] = @Original_JobList2ID) AND ([IsActive] = @Original_IsActive) AND ([Name] = @Original_Name) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)));
SELECT JobList2ID, IsActive, Name, Description FROM JobList2 WHERE (JobList2ID = @JobList2ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobList2ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobList2ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JobList2ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobList2ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Quantify.API.Properties.Settings.Default.ASIRentalManagerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT JobList2ID, IsActive, Name, Description FROM dbo.JobList2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsQuantify.JobList2DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsQuantify.JobList2DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsQuantify.JobList2DataTable dataTable = new DsQuantify.JobList2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify.JobList2DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify dataSet) {
            return this.Adapter.Update(dataSet, "JobList2");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_JobList2ID, bool Original_IsActive, string Original_Name, string Original_Description) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_JobList2ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((bool)(Original_IsActive));
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Name));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Guid JobList2ID, bool IsActive, string Name, string Description) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(JobList2ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(IsActive));
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Guid JobList2ID, bool IsActive, string Name, string Description, System.Guid Original_JobList2ID, bool Original_IsActive, string Original_Name, string Original_Description) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(JobList2ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(IsActive));
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.Guid)(Original_JobList2ID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(Original_IsActive));
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(bool IsActive, string Name, string Description, System.Guid Original_JobList2ID, bool Original_IsActive, string Original_Name, string Original_Description) {
            return this.Update(Original_JobList2ID, IsActive, Name, Description, Original_JobList2ID, Original_IsActive, Original_Name, Original_Description);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ManufacturerTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ManufacturerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Manufacturer";
            tableMapping.ColumnMappings.Add("ManufacturerID", "ManufacturerID");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Description", "Description");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Manufacturer] WHERE (([ManufacturerID] = @Original_Manufacture" +
                "rID) AND ([IsActive] = @Original_IsActive) AND ([Name] = @Original_Name) AND ((@" +
                "IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_" +
                "Description)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ManufacturerID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Manufacturer] ([ManufacturerID], [IsActive], [Name], [Descript" +
                "ion]) VALUES (@ManufacturerID, @IsActive, @Name, @Description);\r\nSELECT Manufact" +
                "urerID, IsActive, Name, Description FROM Manufacturer WHERE (ManufacturerID = @M" +
                "anufacturerID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufacturerID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Manufacturer] SET [ManufacturerID] = @ManufacturerID, [IsActive] = @IsActive, [Name] = @Name, [Description] = @Description WHERE (([ManufacturerID] = @Original_ManufacturerID) AND ([IsActive] = @Original_IsActive) AND ([Name] = @Original_Name) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)));
SELECT ManufacturerID, IsActive, Name, Description FROM Manufacturer WHERE (ManufacturerID = @ManufacturerID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ManufacturerID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ManufacturerID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ManufacturerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Quantify.API.Properties.Settings.Default.ASIRentalManagerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ManufacturerID, IsActive, Name, Description FROM dbo.Manufacturer";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsQuantify.ManufacturerDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsQuantify.ManufacturerDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsQuantify.ManufacturerDataTable dataTable = new DsQuantify.ManufacturerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify.ManufacturerDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify dataSet) {
            return this.Adapter.Update(dataSet, "Manufacturer");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_ManufacturerID, bool Original_IsActive, string Original_Name, string Original_Description) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_ManufacturerID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((bool)(Original_IsActive));
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Name));
            }
            if ((Original_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Guid ManufacturerID, bool IsActive, string Name, string Description) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(ManufacturerID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(IsActive));
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Guid ManufacturerID, bool IsActive, string Name, string Description, System.Guid Original_ManufacturerID, bool Original_IsActive, string Original_Name, string Original_Description) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(ManufacturerID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(IsActive));
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Name));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.Guid)(Original_ManufacturerID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(Original_IsActive));
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));
            }
            if ((Original_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(bool IsActive, string Name, string Description, System.Guid Original_ManufacturerID, bool Original_IsActive, string Original_Name, string Original_Description) {
            return this.Update(Original_ManufacturerID, IsActive, Name, Description, Original_ManufacturerID, Original_IsActive, Original_Name, Original_Description);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StockedProductExtensionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StockedProductExtensionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StockedProductExtension";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ShipmentID", "ShipmentID");
            tableMapping.ColumnMappings.Add("JobsiteID", "JobsiteID");
            tableMapping.ColumnMappings.Add("SerialNumberID", "SerialNumberID");
            tableMapping.ColumnMappings.Add("BillingTransactionID", "BillingTransactionID");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            tableMapping.ColumnMappings.Add("ExtensionType", "ExtensionType");
            tableMapping.ColumnMappings.Add("ExtensionStatus", "ExtensionStatus");
            tableMapping.ColumnMappings.Add("OutOfServiceStatus", "OutOfServiceStatus");
            tableMapping.ColumnMappings.Add("StockingLocationID", "StockingLocationID");
            tableMapping.ColumnMappings.Add("BaseProductID", "BaseProductID");
            tableMapping.ColumnMappings.Add("ArchivedDate", "ArchivedDate");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("VersionStamp", "VersionStamp");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[StockedProductExtension] WHERE (([ID] = @Original_ID) AND ([Ve" +
                "rsionStamp] = @Original_VersionStamp))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VersionStamp", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VersionStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[StockedProductExtension] ([ID], [ShipmentID], [JobsiteID], [SerialNumberID], [BillingTransactionID], [Quantity], [Notes], [ExtensionType], [ExtensionStatus], [OutOfServiceStatus], [StockingLocationID], [BaseProductID], [ArchivedDate], [CreatedDate]) VALUES (@ID, @ShipmentID, @JobsiteID, @SerialNumberID, @BillingTransactionID, @Quantity, @Notes, @ExtensionType, @ExtensionStatus, @OutOfServiceStatus, @StockingLocationID, @BaseProductID, @ArchivedDate, @CreatedDate);
SELECT ID, ShipmentID, JobsiteID, SerialNumberID, BillingTransactionID, Quantity, Notes, ExtensionType, ExtensionStatus, OutOfServiceStatus, StockingLocationID, BaseProductID, ArchivedDate, CreatedDate, VersionStamp FROM StockedProductExtension WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipmentID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobsiteID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobsiteID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNumberID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SerialNumberID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillingTransactionID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingTransactionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtensionType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtensionType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtensionStatus", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtensionStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutOfServiceStatus", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutOfServiceStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseProductID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArchivedDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArchivedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[StockedProductExtension] SET [ID] = @ID, [ShipmentID] = @ShipmentID, [JobsiteID] = @JobsiteID, [SerialNumberID] = @SerialNumberID, [BillingTransactionID] = @BillingTransactionID, [Quantity] = @Quantity, [Notes] = @Notes, [ExtensionType] = @ExtensionType, [ExtensionStatus] = @ExtensionStatus, [OutOfServiceStatus] = @OutOfServiceStatus, [StockingLocationID] = @StockingLocationID, [BaseProductID] = @BaseProductID, [ArchivedDate] = @ArchivedDate, [CreatedDate] = @CreatedDate WHERE (([ID] = @Original_ID) AND ([VersionStamp] = @Original_VersionStamp));
SELECT ID, ShipmentID, JobsiteID, SerialNumberID, BillingTransactionID, Quantity, Notes, ExtensionType, ExtensionStatus, OutOfServiceStatus, StockingLocationID, BaseProductID, ArchivedDate, CreatedDate, VersionStamp FROM StockedProductExtension WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipmentID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobsiteID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobsiteID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SerialNumberID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SerialNumberID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BillingTransactionID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BillingTransactionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtensionType", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtensionType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtensionStatus", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtensionStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutOfServiceStatus", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutOfServiceStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseProductID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArchivedDate", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArchivedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VersionStamp", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VersionStamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Quantify.API.Properties.Settings.Default.ASIRentalManagerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ShipmentID, JobsiteID, SerialNumberID, BillingTransactionID, Quantity," +
                " Notes, ExtensionType, ExtensionStatus, OutOfServiceStatus, StockingLocationID, " +
                "BaseProductID, ArchivedDate, CreatedDate, VersionStamp FROM dbo.StockedProductEx" +
                "tension";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsQuantify.StockedProductExtensionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsQuantify.StockedProductExtensionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsQuantify.StockedProductExtensionDataTable dataTable = new DsQuantify.StockedProductExtensionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify.StockedProductExtensionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify dataSet) {
            return this.Adapter.Update(dataSet, "StockedProductExtension");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_ID, byte[] Original_VersionStamp) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_ID));
            if ((Original_VersionStamp == null)) {
                throw new global::System.ArgumentNullException("Original_VersionStamp");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((byte[])(Original_VersionStamp));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Guid ID, global::System.Nullable<global::System.Guid> ShipmentID, global::System.Nullable<global::System.Guid> JobsiteID, global::System.Nullable<global::System.Guid> SerialNumberID, global::System.Nullable<global::System.Guid> BillingTransactionID, global::System.Nullable<double> Quantity, string Notes, global::System.Nullable<short> ExtensionType, short ExtensionStatus, short OutOfServiceStatus, global::System.Nullable<global::System.Guid> StockingLocationID, global::System.Nullable<global::System.Guid> BaseProductID, global::System.Nullable<global::System.DateTime> ArchivedDate, global::System.Nullable<global::System.DateTime> CreatedDate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(ID));
            if ((ShipmentID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.Guid)(ShipmentID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((JobsiteID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.Guid)(JobsiteID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SerialNumberID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.Guid)(SerialNumberID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((BillingTransactionID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.Guid)(BillingTransactionID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Quantity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Quantity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Notes == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Notes));
            }
            if ((ExtensionType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((short)(ExtensionType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((short)(ExtensionStatus));
            this.Adapter.InsertCommand.Parameters[9].Value = ((short)(OutOfServiceStatus));
            if ((StockingLocationID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.Guid)(StockingLocationID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((BaseProductID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.Guid)(BaseProductID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ArchivedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(ArchivedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CreatedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(CreatedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid ID, 
                    global::System.Nullable<global::System.Guid> ShipmentID, 
                    global::System.Nullable<global::System.Guid> JobsiteID, 
                    global::System.Nullable<global::System.Guid> SerialNumberID, 
                    global::System.Nullable<global::System.Guid> BillingTransactionID, 
                    global::System.Nullable<double> Quantity, 
                    string Notes, 
                    global::System.Nullable<short> ExtensionType, 
                    short ExtensionStatus, 
                    short OutOfServiceStatus, 
                    global::System.Nullable<global::System.Guid> StockingLocationID, 
                    global::System.Nullable<global::System.Guid> BaseProductID, 
                    global::System.Nullable<global::System.DateTime> ArchivedDate, 
                    global::System.Nullable<global::System.DateTime> CreatedDate, 
                    System.Guid Original_ID, 
                    byte[] Original_VersionStamp) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(ID));
            if ((ShipmentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.Guid)(ShipmentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((JobsiteID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.Guid)(JobsiteID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SerialNumberID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.Guid)(SerialNumberID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((BillingTransactionID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.Guid)(BillingTransactionID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Quantity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Quantity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Notes));
            }
            if ((ExtensionType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(ExtensionType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(ExtensionStatus));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(OutOfServiceStatus));
            if ((StockingLocationID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.Guid)(StockingLocationID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((BaseProductID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.Guid)(BaseProductID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ArchivedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(ArchivedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CreatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(CreatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.Guid)(Original_ID));
            if ((Original_VersionStamp == null)) {
                throw new global::System.ArgumentNullException("Original_VersionStamp");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((byte[])(Original_VersionStamp));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.Guid> ShipmentID, global::System.Nullable<global::System.Guid> JobsiteID, global::System.Nullable<global::System.Guid> SerialNumberID, global::System.Nullable<global::System.Guid> BillingTransactionID, global::System.Nullable<double> Quantity, string Notes, global::System.Nullable<short> ExtensionType, short ExtensionStatus, short OutOfServiceStatus, global::System.Nullable<global::System.Guid> StockingLocationID, global::System.Nullable<global::System.Guid> BaseProductID, global::System.Nullable<global::System.DateTime> ArchivedDate, global::System.Nullable<global::System.DateTime> CreatedDate, System.Guid Original_ID, byte[] Original_VersionStamp) {
            return this.Update(Original_ID, ShipmentID, JobsiteID, SerialNumberID, BillingTransactionID, Quantity, Notes, ExtensionType, ExtensionStatus, OutOfServiceStatus, StockingLocationID, BaseProductID, ArchivedDate, CreatedDate, Original_ID, Original_VersionStamp);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StockingLocationRentalPeriodAdjustmentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StockingLocationRentalPeriodAdjustmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StockingLocationRentalPeriodAdjustment";
            tableMapping.ColumnMappings.Add("StockingLocationRentalPeriodAdjustmentID", "StockingLocationRentalPeriodAdjustmentID");
            tableMapping.ColumnMappings.Add("StockingLocationID", "StockingLocationID");
            tableMapping.ColumnMappings.Add("RentalPeriodAdjustmentID", "RentalPeriodAdjustmentID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[StockingLocationRentalPeriodAdjustment] WHERE (([StockingLocationRentalPeriodAdjustmentID] = @Original_StockingLocationRentalPeriodAdjustmentID) AND ([StockingLocationID] = @Original_StockingLocationID) AND ([RentalPeriodAdjustmentID] = @Original_RentalPeriodAdjustmentID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockingLocationRentalPeriodAdjustmentID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationRentalPeriodAdjustmentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentalPeriodAdjustmentID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalPeriodAdjustmentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[StockingLocationRentalPeriodAdjustment] ([StockingLocationRentalPeriodAdjustmentID], [StockingLocationID], [RentalPeriodAdjustmentID]) VALUES (@StockingLocationRentalPeriodAdjustmentID, @StockingLocationID, @RentalPeriodAdjustmentID);
SELECT StockingLocationRentalPeriodAdjustmentID, StockingLocationID, RentalPeriodAdjustmentID FROM StockingLocationRentalPeriodAdjustment WHERE (StockingLocationRentalPeriodAdjustmentID = @StockingLocationRentalPeriodAdjustmentID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockingLocationRentalPeriodAdjustmentID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationRentalPeriodAdjustmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentalPeriodAdjustmentID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalPeriodAdjustmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[StockingLocationRentalPeriodAdjustment] SET [StockingLocationRentalPeriodAdjustmentID] = @StockingLocationRentalPeriodAdjustmentID, [StockingLocationID] = @StockingLocationID, [RentalPeriodAdjustmentID] = @RentalPeriodAdjustmentID WHERE (([StockingLocationRentalPeriodAdjustmentID] = @Original_StockingLocationRentalPeriodAdjustmentID) AND ([StockingLocationID] = @Original_StockingLocationID) AND ([RentalPeriodAdjustmentID] = @Original_RentalPeriodAdjustmentID));
SELECT StockingLocationRentalPeriodAdjustmentID, StockingLocationID, RentalPeriodAdjustmentID FROM StockingLocationRentalPeriodAdjustment WHERE (StockingLocationRentalPeriodAdjustmentID = @StockingLocationRentalPeriodAdjustmentID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockingLocationRentalPeriodAdjustmentID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationRentalPeriodAdjustmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentalPeriodAdjustmentID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalPeriodAdjustmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockingLocationRentalPeriodAdjustmentID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationRentalPeriodAdjustmentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentalPeriodAdjustmentID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalPeriodAdjustmentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Quantify.API.Properties.Settings.Default.ASIRentalManagerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT StockingLocationRentalPeriodAdjustmentID, StockingLocationID, RentalPeriod" +
                "AdjustmentID FROM dbo.StockingLocationRentalPeriodAdjustment";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsQuantify.StockingLocationRentalPeriodAdjustmentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsQuantify.StockingLocationRentalPeriodAdjustmentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsQuantify.StockingLocationRentalPeriodAdjustmentDataTable dataTable = new DsQuantify.StockingLocationRentalPeriodAdjustmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify.StockingLocationRentalPeriodAdjustmentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify dataSet) {
            return this.Adapter.Update(dataSet, "StockingLocationRentalPeriodAdjustment");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_StockingLocationRentalPeriodAdjustmentID, System.Guid Original_StockingLocationID, System.Guid Original_RentalPeriodAdjustmentID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_StockingLocationRentalPeriodAdjustmentID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.Guid)(Original_StockingLocationID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.Guid)(Original_RentalPeriodAdjustmentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Guid StockingLocationRentalPeriodAdjustmentID, System.Guid StockingLocationID, System.Guid RentalPeriodAdjustmentID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(StockingLocationRentalPeriodAdjustmentID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.Guid)(StockingLocationID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.Guid)(RentalPeriodAdjustmentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Guid StockingLocationRentalPeriodAdjustmentID, System.Guid StockingLocationID, System.Guid RentalPeriodAdjustmentID, System.Guid Original_StockingLocationRentalPeriodAdjustmentID, System.Guid Original_StockingLocationID, System.Guid Original_RentalPeriodAdjustmentID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(StockingLocationRentalPeriodAdjustmentID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.Guid)(StockingLocationID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.Guid)(RentalPeriodAdjustmentID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.Guid)(Original_StockingLocationRentalPeriodAdjustmentID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.Guid)(Original_StockingLocationID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.Guid)(Original_RentalPeriodAdjustmentID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Guid StockingLocationID, System.Guid RentalPeriodAdjustmentID, System.Guid Original_StockingLocationRentalPeriodAdjustmentID, System.Guid Original_StockingLocationID, System.Guid Original_RentalPeriodAdjustmentID) {
            return this.Update(Original_StockingLocationRentalPeriodAdjustmentID, StockingLocationID, RentalPeriodAdjustmentID, Original_StockingLocationRentalPeriodAdjustmentID, Original_StockingLocationID, Original_RentalPeriodAdjustmentID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StockingLocationStatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StockingLocationStatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StockingLocationStatus";
            tableMapping.ColumnMappings.Add("StockingLocationStatusID", "StockingLocationStatusID");
            tableMapping.ColumnMappings.Add("RelatedID", "RelatedID");
            tableMapping.ColumnMappings.Add("TypeID", "TypeID");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Description", "Description");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[StockingLocationStatus] WHERE (([StockingLocationStatusID] = @Original_StockingLocationStatusID) AND ([RelatedID] = @Original_RelatedID) AND ([TypeID] = @Original_TypeID) AND ([IsActive] = @Original_IsActive) AND ([Name] = @Original_Name) AND ([Description] = @Original_Description))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockingLocationStatusID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationStatusID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RelatedID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[StockingLocationStatus] ([StockingLocationStatusID], [RelatedID], [TypeID], [IsActive], [Name], [Description]) VALUES (@StockingLocationStatusID, @RelatedID, @TypeID, @IsActive, @Name, @Description);
SELECT StockingLocationStatusID, RelatedID, TypeID, IsActive, Name, Description FROM StockingLocationStatus WHERE (StockingLocationStatusID = @StockingLocationStatusID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockingLocationStatusID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationStatusID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RelatedID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[StockingLocationStatus] SET [StockingLocationStatusID] = @StockingLocationStatusID, [RelatedID] = @RelatedID, [TypeID] = @TypeID, [IsActive] = @IsActive, [Name] = @Name, [Description] = @Description WHERE (([StockingLocationStatusID] = @Original_StockingLocationStatusID) AND ([RelatedID] = @Original_RelatedID) AND ([TypeID] = @Original_TypeID) AND ([IsActive] = @Original_IsActive) AND ([Name] = @Original_Name) AND ([Description] = @Original_Description));
SELECT StockingLocationStatusID, RelatedID, TypeID, IsActive, Name, Description FROM StockingLocationStatus WHERE (StockingLocationStatusID = @StockingLocationStatusID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockingLocationStatusID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationStatusID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RelatedID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockingLocationStatusID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationStatusID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RelatedID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Quantify.API.Properties.Settings.Default.ASIRentalManagerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT StockingLocationStatusID, RelatedID, TypeID, IsActive, Name, Description F" +
                "ROM dbo.StockingLocationStatus";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsQuantify.StockingLocationStatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsQuantify.StockingLocationStatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsQuantify.StockingLocationStatusDataTable dataTable = new DsQuantify.StockingLocationStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify.StockingLocationStatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify dataSet) {
            return this.Adapter.Update(dataSet, "StockingLocationStatus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_StockingLocationStatusID, System.Guid Original_RelatedID, int Original_TypeID, bool Original_IsActive, string Original_Name, string Original_Description) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_StockingLocationStatusID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.Guid)(Original_RelatedID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_TypeID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_IsActive));
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Name));
            }
            if ((Original_Description == null)) {
                throw new global::System.ArgumentNullException("Original_Description");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Guid StockingLocationStatusID, System.Guid RelatedID, int TypeID, bool IsActive, string Name, string Description) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(StockingLocationStatusID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.Guid)(RelatedID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(TypeID));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(IsActive));
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Name));
            }
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Guid StockingLocationStatusID, System.Guid RelatedID, int TypeID, bool IsActive, string Name, string Description, System.Guid Original_StockingLocationStatusID, System.Guid Original_RelatedID, int Original_TypeID, bool Original_IsActive, string Original_Name, string Original_Description) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(StockingLocationStatusID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.Guid)(RelatedID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(TypeID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(IsActive));
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Name));
            }
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.Guid)(Original_StockingLocationStatusID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.Guid)(Original_RelatedID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_TypeID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Original_IsActive));
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Name));
            }
            if ((Original_Description == null)) {
                throw new global::System.ArgumentNullException("Original_Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Description));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Guid RelatedID, int TypeID, bool IsActive, string Name, string Description, System.Guid Original_StockingLocationStatusID, System.Guid Original_RelatedID, int Original_TypeID, bool Original_IsActive, string Original_Name, string Original_Description) {
            return this.Update(Original_StockingLocationStatusID, RelatedID, TypeID, IsActive, Name, Description, Original_StockingLocationStatusID, Original_RelatedID, Original_TypeID, Original_IsActive, Original_Name, Original_Description);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StockedProductTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StockedProductTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StockedProduct";
            tableMapping.ColumnMappings.Add("StockedProductID", "StockedProductID");
            tableMapping.ColumnMappings.Add("StockingLocationID", "StockingLocationID");
            tableMapping.ColumnMappings.Add("BaseProductID", "BaseProductID");
            tableMapping.ColumnMappings.Add("QForRent", "QForRent");
            tableMapping.ColumnMappings.Add("QInTransit", "QInTransit");
            tableMapping.ColumnMappings.Add("QDiscrepancy", "QDiscrepancy");
            tableMapping.ColumnMappings.Add("QNew", "QNew");
            tableMapping.ColumnMappings.Add("QOnRent", "QOnRent");
            tableMapping.ColumnMappings.Add("QtyReserved", "QtyReserved");
            tableMapping.ColumnMappings.Add("OwnerTradingPartnerID", "OwnerTradingPartnerID");
            tableMapping.ColumnMappings.Add("QtyToBeInspected", "QtyToBeInspected");
            tableMapping.ColumnMappings.Add("QOnOrder", "QOnOrder");
            tableMapping.ColumnMappings.Add("QBackOrdered", "QBackOrdered");
            tableMapping.ColumnMappings.Add("QOnOrderNew", "QOnOrderNew");
            tableMapping.ColumnMappings.Add("QBackOrderedNew", "QBackOrderedNew");
            tableMapping.ColumnMappings.Add("NextROPNotificationDate", "NextROPNotificationDate");
            tableMapping.ColumnMappings.Add("NextReRentNotificationDate", "NextReRentNotificationDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[StockedProduct] WHERE (([StockedProductID] = @Original_Stocked" +
                "ProductID) AND ((@IsNull_StockingLocationID = 1 AND [StockingLocationID] IS NULL" +
                ") OR ([StockingLocationID] = @Original_StockingLocationID)) AND ((@IsNull_BasePr" +
                "oductID = 1 AND [BaseProductID] IS NULL) OR ([BaseProductID] = @Original_BasePro" +
                "ductID)) AND ((@IsNull_QForRent = 1 AND [QForRent] IS NULL) OR ([QForRent] = @Or" +
                "iginal_QForRent)) AND ((@IsNull_QInTransit = 1 AND [QInTransit] IS NULL) OR ([QI" +
                "nTransit] = @Original_QInTransit)) AND ((@IsNull_QDiscrepancy = 1 AND [QDiscrepa" +
                "ncy] IS NULL) OR ([QDiscrepancy] = @Original_QDiscrepancy)) AND ((@IsNull_QNew =" +
                " 1 AND [QNew] IS NULL) OR ([QNew] = @Original_QNew)) AND ((@IsNull_QOnRent = 1 A" +
                "ND [QOnRent] IS NULL) OR ([QOnRent] = @Original_QOnRent)) AND ((@IsNull_QtyReser" +
                "ved = 1 AND [QtyReserved] IS NULL) OR ([QtyReserved] = @Original_QtyReserved)) A" +
                "ND ((@IsNull_OwnerTradingPartnerID = 1 AND [OwnerTradingPartnerID] IS NULL) OR (" +
                "[OwnerTradingPartnerID] = @Original_OwnerTradingPartnerID)) AND ((@IsNull_QtyToB" +
                "eInspected = 1 AND [QtyToBeInspected] IS NULL) OR ([QtyToBeInspected] = @Origina" +
                "l_QtyToBeInspected)) AND ((@IsNull_QOnOrder = 1 AND [QOnOrder] IS NULL) OR ([QOn" +
                "Order] = @Original_QOnOrder)) AND ((@IsNull_QBackOrdered = 1 AND [QBackOrdered] " +
                "IS NULL) OR ([QBackOrdered] = @Original_QBackOrdered)) AND ((@IsNull_QOnOrderNew" +
                " = 1 AND [QOnOrderNew] IS NULL) OR ([QOnOrderNew] = @Original_QOnOrderNew)) AND " +
                "((@IsNull_QBackOrderedNew = 1 AND [QBackOrderedNew] IS NULL) OR ([QBackOrderedNe" +
                "w] = @Original_QBackOrderedNew)) AND ((@IsNull_NextROPNotificationDate = 1 AND [" +
                "NextROPNotificationDate] IS NULL) OR ([NextROPNotificationDate] = @Original_Next" +
                "ROPNotificationDate)) AND ((@IsNull_NextReRentNotificationDate = 1 AND [NextReRe" +
                "ntNotificationDate] IS NULL) OR ([NextReRentNotificationDate] = @Original_NextRe" +
                "RentNotificationDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockedProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockedProductID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StockingLocationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BaseProductID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseProductID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseProductID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QForRent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QForRent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QForRent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QForRent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QInTransit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QInTransit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QInTransit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QInTransit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QDiscrepancy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QDiscrepancy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QDiscrepancy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QDiscrepancy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QNew", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QNew", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QNew", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QNew", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QOnRent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnRent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QOnRent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnRent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QtyReserved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QtyReserved", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QtyReserved", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QtyReserved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OwnerTradingPartnerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnerTradingPartnerID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OwnerTradingPartnerID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnerTradingPartnerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QtyToBeInspected", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QtyToBeInspected", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QtyToBeInspected", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QtyToBeInspected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QOnOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QOnOrder", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QBackOrdered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QBackOrdered", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QBackOrdered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QBackOrdered", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QOnOrderNew", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnOrderNew", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QOnOrderNew", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnOrderNew", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QBackOrderedNew", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QBackOrderedNew", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QBackOrderedNew", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QBackOrderedNew", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NextROPNotificationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NextROPNotificationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NextROPNotificationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NextROPNotificationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NextReRentNotificationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NextReRentNotificationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NextReRentNotificationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NextReRentNotificationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[StockedProduct] ([StockedProductID], [StockingLocationID], [BaseProductID], [QForRent], [QInTransit], [QDiscrepancy], [QNew], [QOnRent], [QtyReserved], [OwnerTradingPartnerID], [QtyToBeInspected], [QOnOrder], [QBackOrdered], [QOnOrderNew], [QBackOrderedNew], [NextROPNotificationDate], [NextReRentNotificationDate]) VALUES (@StockedProductID, @StockingLocationID, @BaseProductID, @QForRent, @QInTransit, @QDiscrepancy, @QNew, @QOnRent, @QtyReserved, @OwnerTradingPartnerID, @QtyToBeInspected, @QOnOrder, @QBackOrdered, @QOnOrderNew, @QBackOrderedNew, @NextROPNotificationDate, @NextReRentNotificationDate);
SELECT StockedProductID, StockingLocationID, BaseProductID, QForRent, QInTransit, QDiscrepancy, QNew, QOnRent, QtyReserved, OwnerTradingPartnerID, QtyToBeInspected, QOnOrder, QBackOrdered, QOnOrderNew, QBackOrderedNew, NextROPNotificationDate, NextReRentNotificationDate FROM StockedProduct WHERE (StockedProductID = @StockedProductID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockedProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockedProductID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseProductID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QForRent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QForRent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QInTransit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QInTransit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QDiscrepancy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QDiscrepancy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QNew", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QNew", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QOnRent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnRent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QtyReserved", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QtyReserved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OwnerTradingPartnerID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnerTradingPartnerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QtyToBeInspected", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QtyToBeInspected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QOnOrder", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QBackOrdered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QBackOrdered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QOnOrderNew", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnOrderNew", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QBackOrderedNew", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QBackOrderedNew", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NextROPNotificationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NextROPNotificationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NextReRentNotificationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NextReRentNotificationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[StockedProduct] SET [StockedProductID] = @StockedProductID, [Stocki" +
                "ngLocationID] = @StockingLocationID, [BaseProductID] = @BaseProductID, [QForRent" +
                "] = @QForRent, [QInTransit] = @QInTransit, [QDiscrepancy] = @QDiscrepancy, [QNew" +
                "] = @QNew, [QOnRent] = @QOnRent, [QtyReserved] = @QtyReserved, [OwnerTradingPart" +
                "nerID] = @OwnerTradingPartnerID, [QtyToBeInspected] = @QtyToBeInspected, [QOnOrd" +
                "er] = @QOnOrder, [QBackOrdered] = @QBackOrdered, [QOnOrderNew] = @QOnOrderNew, [" +
                "QBackOrderedNew] = @QBackOrderedNew, [NextROPNotificationDate] = @NextROPNotific" +
                "ationDate, [NextReRentNotificationDate] = @NextReRentNotificationDate WHERE (([S" +
                "tockedProductID] = @Original_StockedProductID) AND ((@IsNull_StockingLocationID " +
                "= 1 AND [StockingLocationID] IS NULL) OR ([StockingLocationID] = @Original_Stock" +
                "ingLocationID)) AND ((@IsNull_BaseProductID = 1 AND [BaseProductID] IS NULL) OR " +
                "([BaseProductID] = @Original_BaseProductID)) AND ((@IsNull_QForRent = 1 AND [QFo" +
                "rRent] IS NULL) OR ([QForRent] = @Original_QForRent)) AND ((@IsNull_QInTransit =" +
                " 1 AND [QInTransit] IS NULL) OR ([QInTransit] = @Original_QInTransit)) AND ((@Is" +
                "Null_QDiscrepancy = 1 AND [QDiscrepancy] IS NULL) OR ([QDiscrepancy] = @Original" +
                "_QDiscrepancy)) AND ((@IsNull_QNew = 1 AND [QNew] IS NULL) OR ([QNew] = @Origina" +
                "l_QNew)) AND ((@IsNull_QOnRent = 1 AND [QOnRent] IS NULL) OR ([QOnRent] = @Origi" +
                "nal_QOnRent)) AND ((@IsNull_QtyReserved = 1 AND [QtyReserved] IS NULL) OR ([QtyR" +
                "eserved] = @Original_QtyReserved)) AND ((@IsNull_OwnerTradingPartnerID = 1 AND [" +
                "OwnerTradingPartnerID] IS NULL) OR ([OwnerTradingPartnerID] = @Original_OwnerTra" +
                "dingPartnerID)) AND ((@IsNull_QtyToBeInspected = 1 AND [QtyToBeInspected] IS NUL" +
                "L) OR ([QtyToBeInspected] = @Original_QtyToBeInspected)) AND ((@IsNull_QOnOrder " +
                "= 1 AND [QOnOrder] IS NULL) OR ([QOnOrder] = @Original_QOnOrder)) AND ((@IsNull_" +
                "QBackOrdered = 1 AND [QBackOrdered] IS NULL) OR ([QBackOrdered] = @Original_QBac" +
                "kOrdered)) AND ((@IsNull_QOnOrderNew = 1 AND [QOnOrderNew] IS NULL) OR ([QOnOrde" +
                "rNew] = @Original_QOnOrderNew)) AND ((@IsNull_QBackOrderedNew = 1 AND [QBackOrde" +
                "redNew] IS NULL) OR ([QBackOrderedNew] = @Original_QBackOrderedNew)) AND ((@IsNu" +
                "ll_NextROPNotificationDate = 1 AND [NextROPNotificationDate] IS NULL) OR ([NextR" +
                "OPNotificationDate] = @Original_NextROPNotificationDate)) AND ((@IsNull_NextReRe" +
                "ntNotificationDate = 1 AND [NextReRentNotificationDate] IS NULL) OR ([NextReRent" +
                "NotificationDate] = @Original_NextReRentNotificationDate)));\r\nSELECT StockedProd" +
                "uctID, StockingLocationID, BaseProductID, QForRent, QInTransit, QDiscrepancy, QN" +
                "ew, QOnRent, QtyReserved, OwnerTradingPartnerID, QtyToBeInspected, QOnOrder, QBa" +
                "ckOrdered, QOnOrderNew, QBackOrderedNew, NextROPNotificationDate, NextReRentNoti" +
                "ficationDate FROM StockedProduct WHERE (StockedProductID = @StockedProductID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockedProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockedProductID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseProductID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QForRent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QForRent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QInTransit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QInTransit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QDiscrepancy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QDiscrepancy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QNew", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QNew", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QOnRent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnRent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QtyReserved", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QtyReserved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OwnerTradingPartnerID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnerTradingPartnerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QtyToBeInspected", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QtyToBeInspected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QOnOrder", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QBackOrdered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QBackOrdered", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QOnOrderNew", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnOrderNew", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QBackOrderedNew", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QBackOrderedNew", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NextROPNotificationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NextROPNotificationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NextReRentNotificationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NextReRentNotificationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockedProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockedProductID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StockingLocationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StockingLocationID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StockingLocationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BaseProductID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseProductID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseProductID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BaseProductID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QForRent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QForRent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QForRent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QForRent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QInTransit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QInTransit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QInTransit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QInTransit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QDiscrepancy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QDiscrepancy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QDiscrepancy", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QDiscrepancy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QNew", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QNew", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QNew", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QNew", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QOnRent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnRent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QOnRent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnRent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QtyReserved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QtyReserved", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QtyReserved", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QtyReserved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OwnerTradingPartnerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnerTradingPartnerID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OwnerTradingPartnerID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OwnerTradingPartnerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QtyToBeInspected", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QtyToBeInspected", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QtyToBeInspected", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QtyToBeInspected", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QOnOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QOnOrder", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QBackOrdered", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QBackOrdered", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QBackOrdered", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QBackOrdered", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QOnOrderNew", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnOrderNew", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QOnOrderNew", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QOnOrderNew", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QBackOrderedNew", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QBackOrderedNew", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QBackOrderedNew", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QBackOrderedNew", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NextROPNotificationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NextROPNotificationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NextROPNotificationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NextROPNotificationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NextReRentNotificationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NextReRentNotificationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NextReRentNotificationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NextReRentNotificationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Quantify.API.Properties.Settings.Default.ASIRentalManagerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT StockedProductID, StockingLocationID, BaseProductID, QForRent, QInTransit, QDiscrepancy, QNew, QOnRent, QtyReserved, OwnerTradingPartnerID, QtyToBeInspected, QOnOrder, QBackOrdered, QOnOrderNew, QBackOrderedNew, NextROPNotificationDate, NextReRentNotificationDate FROM dbo.StockedProduct";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DsQuantify.StockedProductDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DsQuantify.StockedProductDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DsQuantify.StockedProductDataTable dataTable = new DsQuantify.StockedProductDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify.StockedProductDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DsQuantify dataSet) {
            return this.Adapter.Update(dataSet, "StockedProduct");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    System.Guid Original_StockedProductID, 
                    global::System.Nullable<global::System.Guid> Original_StockingLocationID, 
                    global::System.Nullable<global::System.Guid> Original_BaseProductID, 
                    global::System.Nullable<double> Original_QForRent, 
                    global::System.Nullable<double> Original_QInTransit, 
                    global::System.Nullable<double> Original_QDiscrepancy, 
                    global::System.Nullable<double> Original_QNew, 
                    global::System.Nullable<double> Original_QOnRent, 
                    global::System.Nullable<double> Original_QtyReserved, 
                    global::System.Nullable<global::System.Guid> Original_OwnerTradingPartnerID, 
                    global::System.Nullable<double> Original_QtyToBeInspected, 
                    global::System.Nullable<double> Original_QOnOrder, 
                    global::System.Nullable<double> Original_QBackOrdered, 
                    global::System.Nullable<double> Original_QOnOrderNew, 
                    global::System.Nullable<double> Original_QBackOrderedNew, 
                    global::System.Nullable<global::System.DateTime> Original_NextROPNotificationDate, 
                    global::System.Nullable<global::System.DateTime> Original_NextReRentNotificationDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_StockedProductID));
            if ((Original_StockingLocationID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.Guid)(Original_StockingLocationID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_BaseProductID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.Guid)(Original_BaseProductID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_QForRent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_QForRent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_QInTransit.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_QInTransit.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_QDiscrepancy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_QDiscrepancy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_QNew.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_QNew.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_QOnRent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_QOnRent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_QtyReserved.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_QtyReserved.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_OwnerTradingPartnerID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.Guid)(Original_OwnerTradingPartnerID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_QtyToBeInspected.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_QtyToBeInspected.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_QOnOrder.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_QOnOrder.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_QBackOrdered.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_QBackOrdered.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_QOnOrderNew.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(Original_QOnOrderNew.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_QBackOrderedNew.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_QBackOrderedNew.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_NextROPNotificationDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_NextROPNotificationDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_NextReRentNotificationDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_NextReRentNotificationDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Guid StockedProductID, 
                    global::System.Nullable<global::System.Guid> StockingLocationID, 
                    global::System.Nullable<global::System.Guid> BaseProductID, 
                    global::System.Nullable<double> QForRent, 
                    global::System.Nullable<double> QInTransit, 
                    global::System.Nullable<double> QDiscrepancy, 
                    global::System.Nullable<double> QNew, 
                    global::System.Nullable<double> QOnRent, 
                    global::System.Nullable<double> QtyReserved, 
                    global::System.Nullable<global::System.Guid> OwnerTradingPartnerID, 
                    global::System.Nullable<double> QtyToBeInspected, 
                    global::System.Nullable<double> QOnOrder, 
                    global::System.Nullable<double> QBackOrdered, 
                    global::System.Nullable<double> QOnOrderNew, 
                    global::System.Nullable<double> QBackOrderedNew, 
                    global::System.Nullable<global::System.DateTime> NextROPNotificationDate, 
                    global::System.Nullable<global::System.DateTime> NextReRentNotificationDate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(StockedProductID));
            if ((StockingLocationID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.Guid)(StockingLocationID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BaseProductID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.Guid)(BaseProductID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((QForRent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(QForRent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((QInTransit.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(QInTransit.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((QDiscrepancy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(QDiscrepancy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((QNew.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(QNew.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((QOnRent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(QOnRent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((QtyReserved.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(QtyReserved.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((OwnerTradingPartnerID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.Guid)(OwnerTradingPartnerID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((QtyToBeInspected.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(QtyToBeInspected.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((QOnOrder.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(QOnOrder.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((QBackOrdered.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(QBackOrdered.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((QOnOrderNew.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(QOnOrderNew.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((QBackOrderedNew.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(QBackOrderedNew.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((NextROPNotificationDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(NextROPNotificationDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NextReRentNotificationDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(NextReRentNotificationDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid StockedProductID, 
                    global::System.Nullable<global::System.Guid> StockingLocationID, 
                    global::System.Nullable<global::System.Guid> BaseProductID, 
                    global::System.Nullable<double> QForRent, 
                    global::System.Nullable<double> QInTransit, 
                    global::System.Nullable<double> QDiscrepancy, 
                    global::System.Nullable<double> QNew, 
                    global::System.Nullable<double> QOnRent, 
                    global::System.Nullable<double> QtyReserved, 
                    global::System.Nullable<global::System.Guid> OwnerTradingPartnerID, 
                    global::System.Nullable<double> QtyToBeInspected, 
                    global::System.Nullable<double> QOnOrder, 
                    global::System.Nullable<double> QBackOrdered, 
                    global::System.Nullable<double> QOnOrderNew, 
                    global::System.Nullable<double> QBackOrderedNew, 
                    global::System.Nullable<global::System.DateTime> NextROPNotificationDate, 
                    global::System.Nullable<global::System.DateTime> NextReRentNotificationDate, 
                    System.Guid Original_StockedProductID, 
                    global::System.Nullable<global::System.Guid> Original_StockingLocationID, 
                    global::System.Nullable<global::System.Guid> Original_BaseProductID, 
                    global::System.Nullable<double> Original_QForRent, 
                    global::System.Nullable<double> Original_QInTransit, 
                    global::System.Nullable<double> Original_QDiscrepancy, 
                    global::System.Nullable<double> Original_QNew, 
                    global::System.Nullable<double> Original_QOnRent, 
                    global::System.Nullable<double> Original_QtyReserved, 
                    global::System.Nullable<global::System.Guid> Original_OwnerTradingPartnerID, 
                    global::System.Nullable<double> Original_QtyToBeInspected, 
                    global::System.Nullable<double> Original_QOnOrder, 
                    global::System.Nullable<double> Original_QBackOrdered, 
                    global::System.Nullable<double> Original_QOnOrderNew, 
                    global::System.Nullable<double> Original_QBackOrderedNew, 
                    global::System.Nullable<global::System.DateTime> Original_NextROPNotificationDate, 
                    global::System.Nullable<global::System.DateTime> Original_NextReRentNotificationDate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(StockedProductID));
            if ((StockingLocationID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.Guid)(StockingLocationID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BaseProductID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.Guid)(BaseProductID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((QForRent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(QForRent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((QInTransit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(QInTransit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((QDiscrepancy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(QDiscrepancy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((QNew.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(QNew.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((QOnRent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(QOnRent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((QtyReserved.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(QtyReserved.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((OwnerTradingPartnerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.Guid)(OwnerTradingPartnerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((QtyToBeInspected.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(QtyToBeInspected.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((QOnOrder.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(QOnOrder.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((QBackOrdered.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(QBackOrdered.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((QOnOrderNew.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(QOnOrderNew.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((QBackOrderedNew.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(QBackOrderedNew.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((NextROPNotificationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(NextROPNotificationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NextReRentNotificationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(NextReRentNotificationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.Guid)(Original_StockedProductID));
            if ((Original_StockingLocationID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.Guid)(Original_StockingLocationID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_BaseProductID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.Guid)(Original_BaseProductID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_QForRent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_QForRent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_QInTransit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Original_QInTransit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_QDiscrepancy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_QDiscrepancy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_QNew.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(Original_QNew.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_QOnRent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(Original_QOnRent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_QtyReserved.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(Original_QtyReserved.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_OwnerTradingPartnerID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((System.Guid)(Original_OwnerTradingPartnerID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_QtyToBeInspected.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(Original_QtyToBeInspected.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_QOnOrder.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(Original_QOnOrder.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_QBackOrdered.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(Original_QBackOrdered.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_QOnOrderNew.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(Original_QOnOrderNew.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_QBackOrderedNew.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(Original_QBackOrderedNew.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_NextROPNotificationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(Original_NextROPNotificationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_NextReRentNotificationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(Original_NextReRentNotificationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ProductTableAdapter _productTableAdapter;
        
        private StockingLocationTableAdapter _stockingLocationTableAdapter;
        
        private JobList1TableAdapter _jobList1TableAdapter;
        
        private JobList2TableAdapter _jobList2TableAdapter;
        
        private ManufacturerTableAdapter _manufacturerTableAdapter;
        
        private StockedProductExtensionTableAdapter _stockedProductExtensionTableAdapter;
        
        private StockingLocationRentalPeriodAdjustmentTableAdapter _stockingLocationRentalPeriodAdjustmentTableAdapter;
        
        private StockingLocationStatusTableAdapter _stockingLocationStatusTableAdapter;
        
        private StockedProductTableAdapter _stockedProductTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ProductTableAdapter ProductTableAdapter {
            get {
                return this._productTableAdapter;
            }
            set {
                this._productTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StockingLocationTableAdapter StockingLocationTableAdapter {
            get {
                return this._stockingLocationTableAdapter;
            }
            set {
                this._stockingLocationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public JobList1TableAdapter JobList1TableAdapter {
            get {
                return this._jobList1TableAdapter;
            }
            set {
                this._jobList1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public JobList2TableAdapter JobList2TableAdapter {
            get {
                return this._jobList2TableAdapter;
            }
            set {
                this._jobList2TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ManufacturerTableAdapter ManufacturerTableAdapter {
            get {
                return this._manufacturerTableAdapter;
            }
            set {
                this._manufacturerTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StockedProductExtensionTableAdapter StockedProductExtensionTableAdapter {
            get {
                return this._stockedProductExtensionTableAdapter;
            }
            set {
                this._stockedProductExtensionTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StockingLocationRentalPeriodAdjustmentTableAdapter StockingLocationRentalPeriodAdjustmentTableAdapter {
            get {
                return this._stockingLocationRentalPeriodAdjustmentTableAdapter;
            }
            set {
                this._stockingLocationRentalPeriodAdjustmentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StockingLocationStatusTableAdapter StockingLocationStatusTableAdapter {
            get {
                return this._stockingLocationStatusTableAdapter;
            }
            set {
                this._stockingLocationStatusTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public StockedProductTableAdapter StockedProductTableAdapter {
            get {
                return this._stockedProductTableAdapter;
            }
            set {
                this._stockedProductTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._productTableAdapter != null) 
                            && (this._productTableAdapter.Connection != null))) {
                    return this._productTableAdapter.Connection;
                }
                if (((this._stockingLocationTableAdapter != null) 
                            && (this._stockingLocationTableAdapter.Connection != null))) {
                    return this._stockingLocationTableAdapter.Connection;
                }
                if (((this._jobList1TableAdapter != null) 
                            && (this._jobList1TableAdapter.Connection != null))) {
                    return this._jobList1TableAdapter.Connection;
                }
                if (((this._jobList2TableAdapter != null) 
                            && (this._jobList2TableAdapter.Connection != null))) {
                    return this._jobList2TableAdapter.Connection;
                }
                if (((this._manufacturerTableAdapter != null) 
                            && (this._manufacturerTableAdapter.Connection != null))) {
                    return this._manufacturerTableAdapter.Connection;
                }
                if (((this._stockedProductExtensionTableAdapter != null) 
                            && (this._stockedProductExtensionTableAdapter.Connection != null))) {
                    return this._stockedProductExtensionTableAdapter.Connection;
                }
                if (((this._stockingLocationRentalPeriodAdjustmentTableAdapter != null) 
                            && (this._stockingLocationRentalPeriodAdjustmentTableAdapter.Connection != null))) {
                    return this._stockingLocationRentalPeriodAdjustmentTableAdapter.Connection;
                }
                if (((this._stockingLocationStatusTableAdapter != null) 
                            && (this._stockingLocationStatusTableAdapter.Connection != null))) {
                    return this._stockingLocationStatusTableAdapter.Connection;
                }
                if (((this._stockedProductTableAdapter != null) 
                            && (this._stockedProductTableAdapter.Connection != null))) {
                    return this._stockedProductTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._productTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._stockingLocationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._jobList1TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._jobList2TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._manufacturerTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._stockedProductExtensionTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._stockingLocationRentalPeriodAdjustmentTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._stockingLocationStatusTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._stockedProductTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DsQuantify dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._jobList1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.JobList1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._jobList1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._jobList2TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.JobList2.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._jobList2TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._manufacturerTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Manufacturer.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._manufacturerTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._productTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Product.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._productTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._stockingLocationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StockingLocation.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stockingLocationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._stockedProductExtensionTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StockedProductExtension.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stockedProductExtensionTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._stockingLocationRentalPeriodAdjustmentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StockingLocationRentalPeriodAdjustment.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stockingLocationRentalPeriodAdjustmentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._stockingLocationStatusTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StockingLocationStatus.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stockingLocationStatusTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._stockedProductTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StockedProduct.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stockedProductTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DsQuantify dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._jobList1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.JobList1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._jobList1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._jobList2TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.JobList2.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._jobList2TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._manufacturerTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Manufacturer.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._manufacturerTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._productTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Product.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._productTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._stockingLocationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StockingLocation.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stockingLocationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._stockedProductExtensionTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StockedProductExtension.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stockedProductExtensionTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._stockingLocationRentalPeriodAdjustmentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StockingLocationRentalPeriodAdjustment.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stockingLocationRentalPeriodAdjustmentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._stockingLocationStatusTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StockingLocationStatus.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stockingLocationStatusTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._stockedProductTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StockedProduct.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stockedProductTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DsQuantify dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._stockedProductTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StockedProduct.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stockedProductTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._stockingLocationStatusTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StockingLocationStatus.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stockingLocationStatusTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._stockingLocationRentalPeriodAdjustmentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StockingLocationRentalPeriodAdjustment.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stockingLocationRentalPeriodAdjustmentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._stockedProductExtensionTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StockedProductExtension.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stockedProductExtensionTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._stockingLocationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StockingLocation.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stockingLocationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._productTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Product.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._productTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._manufacturerTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Manufacturer.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._manufacturerTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._jobList2TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.JobList2.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._jobList2TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._jobList1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.JobList1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._jobList1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DsQuantify dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._productTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._productTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._stockingLocationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stockingLocationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._jobList1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._jobList1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._jobList2TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._jobList2TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._manufacturerTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._manufacturerTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._stockedProductExtensionTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stockedProductExtensionTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._stockingLocationRentalPeriodAdjustmentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stockingLocationRentalPeriodAdjustmentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._stockingLocationStatusTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stockingLocationStatusTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._stockedProductTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stockedProductTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._productTableAdapter != null)) {
                    revertConnections.Add(this._productTableAdapter, this._productTableAdapter.Connection);
                    this._productTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._productTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._productTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._productTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._productTableAdapter.Adapter);
                    }
                }
                if ((this._stockingLocationTableAdapter != null)) {
                    revertConnections.Add(this._stockingLocationTableAdapter, this._stockingLocationTableAdapter.Connection);
                    this._stockingLocationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._stockingLocationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._stockingLocationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stockingLocationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stockingLocationTableAdapter.Adapter);
                    }
                }
                if ((this._jobList1TableAdapter != null)) {
                    revertConnections.Add(this._jobList1TableAdapter, this._jobList1TableAdapter.Connection);
                    this._jobList1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._jobList1TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._jobList1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._jobList1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._jobList1TableAdapter.Adapter);
                    }
                }
                if ((this._jobList2TableAdapter != null)) {
                    revertConnections.Add(this._jobList2TableAdapter, this._jobList2TableAdapter.Connection);
                    this._jobList2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._jobList2TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._jobList2TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._jobList2TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._jobList2TableAdapter.Adapter);
                    }
                }
                if ((this._manufacturerTableAdapter != null)) {
                    revertConnections.Add(this._manufacturerTableAdapter, this._manufacturerTableAdapter.Connection);
                    this._manufacturerTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._manufacturerTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._manufacturerTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._manufacturerTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._manufacturerTableAdapter.Adapter);
                    }
                }
                if ((this._stockedProductExtensionTableAdapter != null)) {
                    revertConnections.Add(this._stockedProductExtensionTableAdapter, this._stockedProductExtensionTableAdapter.Connection);
                    this._stockedProductExtensionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._stockedProductExtensionTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._stockedProductExtensionTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stockedProductExtensionTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stockedProductExtensionTableAdapter.Adapter);
                    }
                }
                if ((this._stockingLocationRentalPeriodAdjustmentTableAdapter != null)) {
                    revertConnections.Add(this._stockingLocationRentalPeriodAdjustmentTableAdapter, this._stockingLocationRentalPeriodAdjustmentTableAdapter.Connection);
                    this._stockingLocationRentalPeriodAdjustmentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._stockingLocationRentalPeriodAdjustmentTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._stockingLocationRentalPeriodAdjustmentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stockingLocationRentalPeriodAdjustmentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stockingLocationRentalPeriodAdjustmentTableAdapter.Adapter);
                    }
                }
                if ((this._stockingLocationStatusTableAdapter != null)) {
                    revertConnections.Add(this._stockingLocationStatusTableAdapter, this._stockingLocationStatusTableAdapter.Connection);
                    this._stockingLocationStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._stockingLocationStatusTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._stockingLocationStatusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stockingLocationStatusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stockingLocationStatusTableAdapter.Adapter);
                    }
                }
                if ((this._stockedProductTableAdapter != null)) {
                    revertConnections.Add(this._stockedProductTableAdapter, this._stockedProductTableAdapter.Connection);
                    this._stockedProductTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._stockedProductTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._stockedProductTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stockedProductTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stockedProductTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._productTableAdapter != null)) {
                    this._productTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._productTableAdapter]));
                    this._productTableAdapter.Transaction = null;
                }
                if ((this._stockingLocationTableAdapter != null)) {
                    this._stockingLocationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._stockingLocationTableAdapter]));
                    this._stockingLocationTableAdapter.Transaction = null;
                }
                if ((this._jobList1TableAdapter != null)) {
                    this._jobList1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._jobList1TableAdapter]));
                    this._jobList1TableAdapter.Transaction = null;
                }
                if ((this._jobList2TableAdapter != null)) {
                    this._jobList2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._jobList2TableAdapter]));
                    this._jobList2TableAdapter.Transaction = null;
                }
                if ((this._manufacturerTableAdapter != null)) {
                    this._manufacturerTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._manufacturerTableAdapter]));
                    this._manufacturerTableAdapter.Transaction = null;
                }
                if ((this._stockedProductExtensionTableAdapter != null)) {
                    this._stockedProductExtensionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._stockedProductExtensionTableAdapter]));
                    this._stockedProductExtensionTableAdapter.Transaction = null;
                }
                if ((this._stockingLocationRentalPeriodAdjustmentTableAdapter != null)) {
                    this._stockingLocationRentalPeriodAdjustmentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._stockingLocationRentalPeriodAdjustmentTableAdapter]));
                    this._stockingLocationRentalPeriodAdjustmentTableAdapter.Transaction = null;
                }
                if ((this._stockingLocationStatusTableAdapter != null)) {
                    this._stockingLocationStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._stockingLocationStatusTableAdapter]));
                    this._stockingLocationStatusTableAdapter.Transaction = null;
                }
                if ((this._stockedProductTableAdapter != null)) {
                    this._stockedProductTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._stockedProductTableAdapter]));
                    this._stockedProductTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591